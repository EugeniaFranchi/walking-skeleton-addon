/*! For license information please see main.js.LICENSE.txt */
(()=>{var e,t,n,r,s={551:(e,t,n)=>{"use strict";n.d(t,{FBF:()=>Tg,nGf:()=>Oo});var r={};n.r(r),n.d(r,{assertParamsValid:()=>vi,computeFlatOffset:()=>_i,computeOutShape:()=>Ii,getNormalizedAxes:()=>Ni,isSliceContinous:()=>Ri,maskToAxes:()=>ki,parseSliceParams:()=>Oi,sliceInfo:()=>Mi,startForAxis:()=>Ai,startIndicesWithElidedDims:()=>Si,stopForAxis:()=>Fi,stopIndicesWithElidedDims:()=>$i,stridesForAxis:()=>Ti,stridesWithElidedDims:()=>Ci});var s={};n.r(s),n.d(s,{collectGatherOpShapeInfo:()=>Ec,computeOutShape:()=>Dc,segOpComputeOptimalWindowSize:()=>Cc});var i={};n.r(i),n.d(i,{ERF_A1:()=>Hl,ERF_A2:()=>jl,ERF_A3:()=>ql,ERF_A4:()=>Kl,ERF_A5:()=>Xl,ERF_P:()=>Gl,PARALLELIZE_THRESHOLD:()=>Tl,RowPartitionType:()=>Dl,SELU_SCALE:()=>Vl,SELU_SCALEALPHA:()=>Ul,applyActivation:()=>xu,assertAndGetBroadcastShape:()=>wi,assertAxesAreInnerMostDims:()=>xo,assertParamsConsistent:()=>Il,assignToTypedArray:()=>tc,axesAreInnerMostDims:()=>fo,calculateShapes:()=>Wl,checkEinsumDimSizes:()=>oc,checkPadOnDimRoundingMode:()=>fa,combineLocations:()=>mo,combineRaggedTensorToTensorShapes:()=>El,complexWithEvenIndex:()=>Jl,complexWithOddIndex:()=>Ql,computeConv2DInfo:()=>sa,computeConv3DInfo:()=>ia,computeDefaultPad:()=>aa,computeDilation2DInfo:()=>ta,computeOptimalWindowSize:()=>Al,computeOutAndReduceShapes:()=>go,computeOutShape:()=>Cl,computePool2DInfo:()=>na,computePool3DInfo:()=>ra,convertConv2DDataFormat:()=>pa,decodeEinsumEquation:()=>ic,eitherStridesOrDilationsAreOne:()=>da,expandShapeToKeepDim:()=>bo,exponent:()=>rc,exponents:()=>nc,fromStringArrayToUint8:()=>Sc,fromUint8ToStringArray:()=>Nc,getAxesPermutation:()=>yo,getBroadcastDims:()=>xi,getComplexWithIndex:()=>ec,getEinsumComputePath:()=>uc,getEinsumPermutation:()=>ac,getFusedBiasGradient:()=>bu,getFusedDyActivation:()=>gu,getImageCenter:()=>Fl,getInnerMostAxes:()=>vo,getPermuted:()=>_l,getRaggedRank:()=>Sl,getReductionAxes:()=>yi,getReshaped:()=>Rl,getReshapedPermuted:()=>Ol,getRowPartitionTypesHelper:()=>Nl,getSliceBeginCoords:()=>Ml,getSliceSize:()=>Bl,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>dc,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>pc,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>fc,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>bc,getSparseReshapeInputOutputMismatchErrorMessage:()=>yc,getSparseReshapeInputOutputMultipleErrorMessage:()=>xc,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>mc,getSparseReshapeNegativeOutputDimErrorMessage:()=>gc,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Ic,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>wc,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>vc,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>kc,getUndoAxesPermutation:()=>wo,isIdentityPermutation:()=>lc,log:()=>ur,mergeRealAndImagArrays:()=>Yl,prepareAndValidate:()=>Ll,prepareSplitSize:()=>hc,segment_util:()=>s,shouldFuse:()=>yu,slice_util:()=>r,splitRealAndImagArrays:()=>Zl,tupleValuesAreOne:()=>ha,upcastType:()=>rs,validateDefaultValueShape:()=>$l,validateInput:()=>Pl,validateUpdateShape:()=>zl,warn:()=>or});var a={};n.r(a),n.d(a,{addImpl:()=>Xy,bincountImpl:()=>Ww,bincountReduceImpl:()=>Uw,castImpl:()=>Gy,ceilImpl:()=>Hw,concatImpl:()=>Zw,equalImpl:()=>_v,expImpl:()=>Hv,expm1Impl:()=>Yv,floorImpl:()=>pk,gatherNdImpl:()=>vk,gatherV2Impl:()=>Ik,greaterEqualImpl:()=>Sk,greaterImpl:()=>Dk,lessEqualImpl:()=>Wk,lessImpl:()=>Lk,linSpaceImpl:()=>Gk,logImpl:()=>jk,maxImpl:()=>oI,maximumImpl:()=>cI,minimumImpl:()=>wI,multiplyImpl:()=>Ev,negImpl:()=>TI,notEqualImpl:()=>LI,prodImpl:()=>ZI,raggedGatherImpl:()=>eC,raggedRangeImpl:()=>nC,raggedTensorToTensorImpl:()=>uC,rangeImpl:()=>cC,rsqrtImpl:()=>kC,scatterImpl:()=>DC,sigmoidImpl:()=>Oy,simpleAbsImpl:()=>sw,sliceImpl:()=>Bw,sparseFillEmptyRowsImpl:()=>HC,sparseReshapeImpl:()=>qC,sparseSegmentReductionImpl:()=>XC,sqrtImpl:()=>eD,squaredDifferenceImpl:()=>sD,stridedSliceImpl:()=>lD,stringNGramsImpl:()=>dD,stringSplitImpl:()=>mD,stringToHashBucketFastImpl:()=>bD,subImpl:()=>nk,tileImpl:()=>kD,topKImpl:()=>DD,transposeImpl:()=>hw,uniqueImpl:()=>AD});class o{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class u{refCount(e){return l("refCount")}incRef(e){return l("incRef")}timerAvailable(){return!0}time(e){return l("time")}read(e){return l("read")}readSync(e){return l("readSync")}readToGPU(e,t){return l("readToGPU")}numDataIds(){return l("numDataIds")}disposeData(e,t){return l("disposeData")}write(e,t,n){return l("write")}move(e,t,n,r,s){return l("move")}createTensorFromTexture(e,t,n){return l("createTensorFromTexture")}memory(){return l("memory")}floatPrecision(){return l("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return l("dispose")}}function l(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function c(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,p(e,t,n)}function h(e,t,n){return Math.max(e,Math.min(t,n))}function d(e){return e%2==0?e:e+1}function p(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function f(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function m(e,t,n=""){f(y(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function g(e){f(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function b(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||T(e)&&!n)for(let r=0;r<e.length;++r)b(e[r],t,n);else t.push(e);return t}function x(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function y(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function w(e){return e%1==0}function v(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function k(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function I(e,t=(e=>0),n,r){return new Promise(((s,i)=>{let a=0;const o=()=>{if(e())return void s();a++;const u=t(a);null!=n&&a>=n?i():null!=r?r(o,u):setTimeout(o,u)};o()}))}function C(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s}function D(e,t){const n=t.length;return f((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),f(e.every((e=>w(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function E(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,i=null==t||s?null:D(t,e).sort();let a=0;for(let t=0;t<e.length;++t){if(null!=i){if(i[a]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==i[a]||i[a]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),i[a]<=t&&a++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function N(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function S(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function $(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function T(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function A(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function F(e){return"string"==typeof e||e instanceof String}function R(e){return"number"==typeof e}function _(e){return Array.isArray(e)?_(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":R(e)?"float32":F(e)?"string":"boolean"==typeof e?"bool":"float32"}function O(e){return!!(e&&e.constructor&&e.call&&e.apply)}function M(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function B(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function L(e,t,n,r=!1){const s=new Array;if(1===t.length){const i=t[0]*(r?2:1);for(let t=0;t<i;t++)s[t]=n[e+t]}else{const i=t[0],a=t.slice(1),o=a.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<i;t++)s[t]=L(e+t*o,a,n,r)}return s}function z(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return L(0,e,t,n)}function P(e,t){const n=W(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function W(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function U(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return z(e,new Float32Array(n));if("int32"===t)return z(e,new Int32Array(n));if("bool"===t)return z(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function V(e){e.forEach((t=>{f(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function G(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function H(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function j(e){return e&&e.then&&"function"==typeof e.then}class q{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=K,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(X().getBool("IS_TEST")||X().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];X().getBool("IS_TEST")||X().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(j(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function K(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function X(){return Z}let Y,Z=null;function J(){if(null==Y){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}Y=e}return Y}function Q(e,t){const n=function(){const e=J();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const ee="Abs",te="Acos",ne="Acosh",re="Add",se="AddN",ie="All",ae="Any",oe="ArgMax",ue="ArgMin",le="Asin",ce="Asinh",he="Atan",de="Atanh",pe="Atan2",fe="AvgPool",me="AvgPoolGrad",ge="AvgPool3D",be="AvgPool3DGrad",xe="BatchMatMul",ye="BatchToSpaceND",we="Bincount",ve="BroadcastArgs",ke="Cast",Ie="Ceil",Ce="ClipByValue",De="Complex",Ee="ComplexAbs",Ne="Concat",Se="Conv2D",$e="Conv2DBackpropFilter",Te="Conv2DBackpropInput",Ae="Conv3D",Fe="Conv3DBackpropFilterV2",Re="Conv3DBackpropInputV2",_e="Cos",Oe="Cosh",Me="Cumprod",Be="Cumsum",Le="CropAndResize",ze="DenseBincount",Pe="DepthToSpace",We="DepthwiseConv2dNative",Ue="DepthwiseConv2dNativeBackpropFilter",Ve="DepthwiseConv2dNativeBackpropInput",Ge="Diag",He="Dilation2D",je="Dilation2DBackpropInput",qe="Dilation2DBackpropFilter",Ke="RealDiv",Xe="Einsum",Ye="Elu",Ze="EluGrad",Je="Erf",Qe="Equal",et="Exp",tt="ExpandDims",nt="Expm1",rt="FFT",st="Fill",it="FlipLeftRight",at="Floor",ot="FloorDiv",ut="FusedBatchNorm",lt="GatherV2",ct="GatherNd",ht="Greater",dt="GreaterEqual",pt="Identity",ft="IFFT",mt="Imag",gt="IsFinite",bt="IsInf",xt="IsNan",yt="LeakyRelu",wt="Less",vt="LessEqual",kt="LinSpace",It="Log",Ct="Log1p",Dt="LogicalAnd",Et="LogicalNot",Nt="LogicalOr",St="LRN",$t="LRNGrad",Tt="Max",At="Maximum",Ft="MaxPool",Rt="MaxPoolGrad",_t="MaxPool3D",Ot="MaxPool3DGrad",Mt="MaxPoolWithArgmax",Bt="Mean",Lt="Min",zt="Minimum",Pt="MirrorPad",Wt="Mod",Ut="Multinomial",Vt="Multiply",Gt="Neg",Ht="NotEqual",jt="NonMaxSuppressionV3",qt="NonMaxSuppressionV4",Kt="NonMaxSuppressionV5",Xt="OnesLike",Yt="OneHot",Zt="Pack",Jt="PadV2",Qt="Pow",en="Prelu",tn="Prod",nn="RaggedGather",rn="RaggedRange",sn="RaggedTensorToTensor",an="Range",on="Real",un="Reciprocal",ln="Relu",cn="Reshape",hn="ResizeNearestNeighbor",dn="ResizeNearestNeighborGrad",pn="ResizeBilinear",fn="ResizeBilinearGrad",mn="Relu6",gn="Reverse",bn="Round",xn="Rsqrt",yn="ScatterNd",wn="SearchSorted",vn="Select",kn="Selu",In="Slice",Cn="Sin",Dn="Sinh",En="Sign",Nn="Sigmoid",Sn="Softplus",$n="Sqrt",Tn="Sum",An="SpaceToBatchND",Fn="SplitV",Rn="Softmax",_n="SparseFillEmptyRows",On="SparseReshape",Mn="SparseSegmentMean",Bn="SparseSegmentSum",Ln="SparseToDense",zn="SquaredDifference",Pn="Square",Wn="StridedSlice",Un="StringNGrams",Vn="StringSplit",Gn="StringToHashBucketFast",Hn="Sub",jn="Tan",qn="Tanh",Kn="Tile",Xn="TopK",Yn="Transform",Zn="Transpose",Jn="Unique",Qn="Unpack",er="UnsortedSegmentSum",tr="ZerosLike",nr="Step",rr="RotateWithOffset",sr="_FusedMatMul",ir="FusedConv2D",ar="FusedDepthwiseConv2D";function or(...e){X().getBool("IS_TEST")||X().getBool("PROD")||console.warn(...e)}function ur(...e){X().getBool("IS_TEST")||X().getBool("PROD")||console.log(...e)}const lr=Q("kernelRegistry",(()=>new Map)),cr=Q("gradRegistry",(()=>new Map));function hr(e,t){const n=gr(e,t);return lr.get(n)}function dr(e){return cr.get(e)}function pr(e){const t=lr.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[i,a]=s,[o]=i.split("_");o===e&&n.push(a)}return n}function fr(e){const{kernelName:t,backendName:n}=e,r=gr(t,n);lr.has(r)&&or(`The kernel '${t}' for backend '${n}' is already registered`),lr.set(r,e)}function mr(e){const{kernelName:t}=e;cr.has(t)&&X().getBool("DEBUG")&&or(`Overriding the gradient for '${t}'`),cr.set(t,e)}function gr(e,t){return`${t}_${e}`}var br=n(720);const xr=n.n(br)()||br;function yr(e){return xr.fromString(e,!0,16)}const wr=yr("c3a5c85c97cb3127"),vr=yr("b492b66fbe98f273"),kr=yr("9ae16a3b2f90404f");function Ir(e){return e.xor(e.shru(47))}function Cr(e,t,n){const r=e.slice(t,t+n);return xr.fromBytes(Array.from(r),!0,!0)}function Dr(e,t){return Cr(e,t,8)}function Er(e,t){return Cr(e,t,4)}function Nr(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Sr(e,t,n=yr("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let s=t.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function $r(e,t,n,r){return function(e,t,n,r,s,i){s=s.add(e),i=Nr(i.add(s).add(r),21);const a=s;return s=(s=s.add(t)).add(n),i=i.add(Nr(s,44)),[s.add(r),i.add(a)]}(Dr(e,t),Dr(e,t+8),Dr(e,t+16),Dr(e,t+24),n,r)}function Tr(e,t=e.length){const n=xr.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=kr.add(2*t),r=Dr(e,0).add(kr),s=Dr(e,t-8);return Sr(Nr(s,37).mul(n).add(r),Nr(r,25).add(s).mul(n),n)}if(t>=4){const n=kr.add(2*t);return Sr(Er(e,0).shl(3).add(t),Er(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return Ir(kr.mul(n).xor(wr.mul(r))).mul(kr)}return kr}(e,t):function(e,t=e.length){const n=kr.add(2*t),r=Dr(e,0).mul(vr),s=Dr(e,8),i=Dr(e,t-8).mul(n),a=Dr(e,t-16).mul(kr);return Sr(Nr(r.add(s),43).add(Nr(i,30)).add(a),r.add(Nr(s.add(kr),18)).add(i),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=kr.add(2*t),r=Dr(e,0).mul(kr),s=Dr(e,8),i=Dr(e,t-8).mul(n),a=Dr(e,t-16).mul(kr),o=Nr(r.add(s),43).add(Nr(i,30)).add(a),u=Sr(o,r.add(Nr(s.add(kr),18)).add(i),n),l=Dr(e,16).mul(n),c=Dr(e,24),h=o.add(Dr(e,t-32)).mul(n),d=u.add(Dr(e,t-24)).mul(n);return Sr(Nr(l.add(c),43).add(Nr(h,30)).add(d),l.add(Nr(c.add(r),18)).add(h),n)}(e,t);let r=n,s=n.mul(vr).add(113),i=Ir(s.mul(kr).add(113)).mul(kr),a=[xr.UZERO,xr.UZERO],o=[xr.UZERO,xr.UZERO];r=r.mul(kr).add(Dr(e,0));let u=0;const l=64*(t-1>>6),c=l+(t-1&63)-63;do{r=Nr(r.add(s).add(a[0]).add(Dr(e,u+8)),37).mul(vr),s=Nr(s.add(a[1]).add(Dr(e,u+48)),42).mul(vr),r=r.xor(o[1]),s=s.add(a[0]).add(Dr(e,u+40)),i=Nr(i.add(o[0]),33).mul(vr),a=$r(e,u,a[1].mul(vr),r.add(o[0])),o=$r(e,u+32,i.add(o[1]),s.add(Dr(e,u+16))),[i,r]=[r,i],u+=64}while(u!==l);const h=vr.add(i.and(255).shl(1));return u=c,o[0]=o[0].add(t-1&63),a[0]=a[0].add(o[0]),o[0]=o[0].add(a[0]),r=Nr(r.add(s).add(a[0]).add(Dr(e,u+8)),37).mul(h),s=Nr(s.add(a[1]).add(Dr(e,u+48)),42).mul(h),r=r.xor(o[1].mul(9)),s=s.add(a[0].mul(9).add(Dr(e,u+40))),i=Nr(i.add(o[0]),33).mul(h),a=$r(e,u,a[1].mul(h),r.add(o[0])),o=$r(e,u+32,i.add(o[1]),s.add(Dr(e,u+16))),[i,r]=[r,i],Sr(Sr(a[0],o[0],h).add(Ir(s).mul(wr)).add(i),Sr(a[1],o[1],h).add(r),h)}function Ar(e,t){return"string"===t?_r(e):Fr([e],t)}function Fr(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=b(e)),X().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Rr(){return X().platform.now()}function _r(e,t="utf-8"){return t=t||"utf-8",X().platform.encode(e,t)}function Or(e,t="utf-8"){return t=t||"utf-8",X().platform.decode(e,t)}class Mr{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Lr)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let i;const a=Rr();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();i=Promise.resolve({kernelMs:Rr()-a})}if(X().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{Br(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:i.then((e=>e.kernelMs)),extraInfo:i.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:i}=e;n.forEach((e=>{Promise.all([e.data(),r,i]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])}))}))}}function Br(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class Lr{logKernelProfile(e,t,n,r,s,i){const a="number"==typeof r?k(`${r}ms`,9):r.error,o=k(e,25),u=t.rank,l=t.size,c=k(t.shape.toString(),14);let h="";for(const e in s){const n=s[e];if(null!=n){const r=n.shape||t.shape,s=r.length;h+=`${e}: ${s}D ${s>0?r:""} `}}console.log(`%c${o}\t%c${a}\t%c${u}D ${c}\t%c${l}\t%c${h}\t%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function zr(e,t,n,r){const s=B(t),i=function(e,t,n,r){const s=x(t),i=r[r.length-1],a=new Array(i).fill(0),o=t.length,u="complex64"===n?Vr(e):e;if(o>1)for(let e=0;e<s/i;e++){const t=e*i;for(let e=0;e<i;e++)a[e]=Math.max(a[e],Pr(u[t+e],0,n).length)}return a}(e,t,n,s),a=t.length,o=Ur(e,t,n,s,i),u=["Tensor"];return r&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${a}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(o.map((e=>"    "+e)).join("\n")),u.join("\n")}function Pr(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:F(e)?`'${e}'`:"bool"===n?Wr(e):parseFloat(e.toFixed(7)).toString(),k(r,t)}function Wr(e){return 0===e?"false":"true"}function Ur(e,t,n,r,s,i=!0){const a="complex64"===n?2:1,o=t[0],u=t.length;if(0===u)return"complex64"===n?[Pr(Vr(e)[0],0,n)]:"bool"===n?[Wr(e[0])]:[e[0].toString()];if(1===u){if(o>20){const t=3*a;let r=Array.from(e.slice(0,t)),i=Array.from(e.slice((o-3)*a,o*a));return"complex64"===n&&(r=Vr(r),i=Vr(i)),["["+r.map(((e,t)=>Pr(e,s[t],n))).join(", ")+", ..., "+i.map(((e,t)=>Pr(e,s[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?Vr(e):Array.from(e)).map(((e,t)=>Pr(e,s[t],n))).join(", ")+"]"]}const l=t.slice(1),c=r.slice(1),h=r[0]*a,d=[];if(o>20){for(let t=0;t<3;t++){const r=t*h,i=r+h;d.push(...Ur(e.slice(r,i),l,n,c,s,!1))}d.push("...");for(let t=o-3;t<o;t++){const r=t*h,i=r+h;d.push(...Ur(e.slice(r,i),l,n,c,s,t===o-1))}}else for(let t=0;t<o;t++){const r=t*h,i=r+h;d.push(...Ur(e.slice(r,i),l,n,c,s,t===o-1))}const p=2===u?",":"";d[0]="["+d[0]+p;for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+p;let f=",\n";for(let e=2;e<u;e++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(i?"":f),d}function Vr(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class Gr{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=x(e),null!=n){const e=n.length;f(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||S(t,this.size),this.strides=B(e)}set(e,...t){0===t.length&&(t=[0]),f(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Hr().makeTensor(this.values,this.shape,this.dtype)}}let Hr=null,jr=null,qr=null;class Kr{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=x(e),this.strides=B(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return jr.buffer(this.shape,this.dtype,e)}bufferSync(){return jr.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return z(this.shape,e,"complex64"===this.dtype)}arraySync(){return z(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=Hr().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>Or(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Hr().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=Hr().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Or(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Hr().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Hr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return jr.print(this,e)}clone(){return this.throwIfDisposed(),jr.clone(this)}toString(e=!1){return zr(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),jr.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Hr().makeVariable(this,e,t,n)}}function Xr(){return Q("Tensor",(()=>Kr))}Object.defineProperty(Kr,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Xr();class Yr extends Kr{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!y(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Hr().disposeTensor(this),this.dataId=e.dataId,Hr().incRef(this,null)}dispose(){Hr().disposeVariable(this),this.isDisposedInternal=!0}}var Zr,Jr,Qr,es,ts;Object.defineProperty(Yr,Symbol.hasInstance,{value:e=>e instanceof Kr&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(Zr||(Zr={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(Jr||(Jr={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(Qr||(Qr={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(es||(es={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(ts||(ts={}));const ns={float32:es,int32:Jr,bool:Qr,complex64:ts};function rs(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return ns[e][t]}function ss(e){return rs(e,"int32")}function is(e,t){if(e.dtype===t.dtype)return[e,t];const n=rs(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function as(e,t){return t.some((t=>t.id===e.id))}function os(e){const t=[];return us(e,t,new Set),t}function us(e,t,n){if(null==e)return;if(e instanceof Kr)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const s=e;for(const e in s){const r=s[e];n.has(r)||(n.add(r),us(r,t,n))}}function ls(e){return null!=e.kernelName}class cs{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class hs{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new cs}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(or(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Mr(this.backendInstance),!0}setupRegisteredKernels(){pr(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){pr(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof u||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,or(`Initialization of backend ${e} failed`),or(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return or(`Initialization of backend ${e} failed`),or(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t),i=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return hs.nextTensorId++}nextVariableId(){return hs.nextVariableId++}clone(e){const t=ps.runKernel(pt,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return ps.runKernel(ke,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==hr(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach((e=>{s+="complex64"===e.dtype?3:1}));const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=r-t-s-i;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),s=this.state.numBytes,i=this.state.numTensors;let a,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=ls(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(ls(e)){const{kernelName:t,inputs:s,attrs:i}=e;null==this.backendName&&this.backend;const u=hr(t,this.backendName);f(null!=u,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),a=()=>{const e=this.backend.numDataIds();o=u.kernelFunc({inputs:s,attrs:i,backend:this.backend});const a=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,a);const l=a.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(r){const e=this.getTensorsForGradient(t,s,l);n=this.saveTensorsForBackwardMode(e)}return l}}else{const{forwardFunc:t}=e,s=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};a=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,s)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:l,attrs:c}=e,h=ls(e)?null:e.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(u,l,(()=>a())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=a()})),r&&this.addTapeNode(u,l,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map((e=>null!=l[e]?l[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=dr(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let i;r.saveAllInputs?(f(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),i=Object.keys(t).map((e=>t[e]))):i=e.map((e=>t[e]));const a=n.filter(((e,t)=>s[t]));return i.concat(a)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;"string"===n&&F(e[0])&&(s=e.map((e=>_r(e))));const i=r.write(s,t,n),a=new Kr(t,n,i,this.nextTensorId());if(this.trackTensor(a,r),"string"===n){const e=this.state.tensorInfo.get(i),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return a}makeTensorFromDataId(e,t,n,r){const s={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(s,r)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:r,dtype:s}=e,i=new Kr(r,s,n,this.nextTensorId());return this.trackTensor(i,t),i}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new Yr(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*A(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Yr||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*A(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,i){const a={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},o=dr(e);null!=o&&(r=o.gradFunc),null!=r&&(a.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=W(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],s,i))),this.state.activeTape.push(a)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=os(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(f(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));f(s instanceof Kr,(()=>"The result y returned by f() must be a tensor."));const i=function(e,t,n){const r={},s={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const i=e[n],a=i.inputs;for(const e in a){const n=a[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){i.outputs.forEach((e=>r[e.id]=!0)),o=!0,s[i.id]=!0;break}if(o)break}}const i={};i[n.id]=!0;const a={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(i[n.outputs[e].id]){for(const e in r)i[r[e].id]=!0,a[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(s[n.id]&&a[n.id]){const e={};for(const t in n.inputs){const s=n.inputs[t];r[s.id]&&(e[t]=s)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,s);if(!r&&0===i.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[s.id]=null==n?function(e){const t=P(x(e),"float32");return ps.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,r){for(let s=t.length-1;s>=0;s--){const i=t[s],a=[];if(i.outputs.forEach((t=>{const n=e[t.id];null!=n?a.push(n):a.push(null)})),null==i.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);const o=i.gradient(a);for(const t in i.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const s=n((()=>o[t]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const a=i.inputs[t];if(!y(s.shape,a.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${a.shape}'`);if(null==e[a.id])e[a.id]=s;else{const t=e[a.id];e[a.id]=r(t,s),t.dispose()}}}}(e,i,(e=>this.tidy(e)),fs);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(e){return f(O(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;f(t.every((e=>e instanceof Kr)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return t.forEach(((e,t)=>{r[t]=e})),this.runKernelFunc({forwardFunc:(r,s)=>(n=e(...t,s),f(n.value instanceof Kr,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),f(O(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const s=n.gradFunc(e,r),i=Array.isArray(s)?s:[s];f(i.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),f(i.every((e=>e instanceof Kr)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const a={};return i.forEach(((e,t)=>{a[t]=()=>e})),a},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Rr(),n=await this.backend.time(e);return n.wallMs=Rr()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new cs;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function ds(){const e=J();if(null==e._tfengine){const t=new q(e);e._tfengine=new hs(t)}var t;return t=e._tfengine.ENV,Z=t,Hr=()=>e._tfengine,e._tfengine}hs.nextTensorId=0,hs.nextVariableId=0;const ps=ds();function fs(e,t){const n={a:e,b:t};return ps.runKernel(re,n)}function ms(e){if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function gs(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const bs=X();function xs(e,t){let n=e;if(T(e))return"string"===t?[]:[e.length];if("object"==typeof e&&"texture"in e){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||T(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&X().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&ys(e,r,[]),r}function ys(e,t,n){if(n=n||[],!Array.isArray(e)&&!T(e))return void f(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));f(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),f(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)ys(e[t],r,n.concat(t))}function ws(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function vs(e,t,n,r="numeric"){if(e instanceof Kr)return ws(r,e.dtype,t,n),e;let s=_(e);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),ws(r,s,t,n),null==e||!T(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const i=xs(e,s);T(e)||Array.isArray(e)||(e=[e]);const a="string"!==s?Fr(e,s):b(e,[],!0);return ps.makeTensor(a,i,s)}function ks(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,s)=>vs(e,`${t}[${s}]`,n,r)))}function Is(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const s=(...e)=>{ps.startScope(n);try{const t=r(...e);return j(t)&&console.error("Cannot return a Promise inside of tidy."),ps.endScope(t),t}catch(e){throw ps.endScope(null),e}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}bs.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),bs.registerFlag("IS_BROWSER",(()=>gs())),bs.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),bs.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),bs.registerFlag("PROD",(()=>!1)),bs.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>bs.getBool("DEBUG"))),bs.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),bs.registerFlag("IS_TEST",(()=>!1)),bs.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),bs.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),bs.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1)),bs.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),bs.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));const Cs=Is({complex_:function(e,t){const n=vs(e,"real","complex"),r=vs(t,"imag","complex");m(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return ps.runKernel(De,s)}});function Ds(e,t,n,r){if(null==r&&(r=_(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if("object"==typeof e&&"texture"in e){if("float32"!==r&&"int32"!==r)throw new Error(`Creating tensor from texture only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return e.channels=e.channels||"RGBA",ps.backend.createTensorFromTexture(e,t||n,r)}if(!T(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){V(t);const e=x(t),r=x(n);f(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],s=e!==n.length-1||r!==x(t.slice(e));f(n[e]===t[e]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return T(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?Fr(e,r):b(e,[],!0),ps.makeTensor(e,t,r)}function Es(e,t,n){return Ds(e,t,xs(e,n),n)}const Ns={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function Ss(e,t){const n=[],r=[],s=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let i=0;i<s.length;++i){const a=s[i],o=Array.isArray(e)?e[i].tensor:e[a];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${a}': ${o.dtype}`);const u={name:a,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let s=0;for(let e=0;e<t.length;e++){const n=t[e],i=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(i,s),s+=4,r.set(n,s),s+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(u.group=t),n.push(u)}return{data:$s(await Promise.all(r)),specs:n}}function $s(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let s=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength})),r.buffer}const Ts="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function As(e){return Ts?Buffer.byteLength(e):new Blob([e]).size}function Fs(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function Rs(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function _s(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:As(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:As(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function Os(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const s=new ArrayBuffer(4*r.length),i=new Uint32Array(s);for(let s=0;s<r.length;s++){const a=r[s],o=e[n[a>>10]+(1023&a)]+t[a>>10];i[s]=o}return new Float32Array(s)}}class Ms{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Ms.instance&&(Ms.instance=new Ms),Ms.instance}static registerSaveRouter(e){Ms.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Ms.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Ms.getHandlers(e,"save")}static getLoadHandlers(e,t){return Ms.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Ms.getInstance().loadRouters:Ms.getInstance().saveRouters).forEach((t=>{const s=t(e,n);null!==s&&r.push(s)})),r}}const Bs="tensorflowjs",Ls="models_store",zs="model_info_store";function Ps(){if(!X().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Ws(e){const t=e.result;t.createObjectStore(Ls,{keyPath:"modelPath"}),t.createObjectStore(zs,{keyPath:"modelPath"})}class Us{constructor(e){if(this.indexedDB=Ps(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(Bs,1);r.onupgradeneeded=()=>Ws(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction(Ls,"readonly"),r=t.objectStore(Ls).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{const r=_s(t),i=s.transaction(zs,"readwrite");let a=i.objectStore(zs);const o=a.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;o.onsuccess=()=>{u=s.transaction(Ls,"readwrite");const o=u.objectStore(Ls).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{a=i.objectStore(zs);const t=a.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(o.error)),t.onerror=e=>(s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),i.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)}))}}Us.URL_SCHEME="indexeddb://";const Vs=e=>{return X().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Us.URL_SCHEME)?(t=e.slice(Us.URL_SCHEME.length),new Us(t)):null;var t};Ms.registerSaveRouter(Vs),Ms.registerLoadRouter(Vs);class Gs{constructor(){this.indexedDB=Ps()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(Bs,1);n.onupgradeneeded=()=>Ws(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(zs,"readonly"),i=s.objectStore(zs).getAll();i.onsuccess=()=>{const t={};for(const e of i.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},i.onerror=e=>(r.close(),t(i.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(Us.URL_SCHEME)?t.slice(Us.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(Bs,1);r.onupgradeneeded=()=>Ws(r),r.onsuccess=()=>{const s=r.result,i=s.transaction(zs,"readwrite"),a=i.objectStore(zs),o=a.get(e);let u;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=a.delete(e),i=()=>{u=s.transaction(Ls,"readwrite");const r=u.objectStore(Ls).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=i,r.onerror=e=>(i(),s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),i.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}}const Hs="/",js="tensorflowjs_models",qs="info",Ks="model_topology",Xs="weight_specs",Ys="weight_data",Zs="model_metadata";function Js(e){return{info:[js,e,qs].join(Hs),topology:[js,e,Ks].join(Hs),weightSpecs:[js,e,Xs].join(Hs),weightData:[js,e,Ys].join(Hs),modelMetadata:[js,e,Zs].join(Hs)}}function Qs(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function ei(e){const t=e.split(Hs);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Hs)}class ti{constructor(e){if(!X().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Js(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=_s(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Ts)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:r}}catch(e){throw Qs(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const i=this.LS.getItem(this.keys.weightData);if(null==i)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Ts){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(i),t}}ti.URL_SCHEME="localstorage://";const ni=e=>{return X().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ti.URL_SCHEME)?(t=e.slice(ti.URL_SCHEME.length),new ti(t)):null;var t};Ms.registerSaveRouter(ni),Ms.registerLoadRouter(ni);class ri{constructor(){f(X().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),f("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=js+Hs,n=Hs+qs;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);s.startsWith(t)&&s.endsWith(n)&&(e[ei(s)]=JSON.parse(this.LS.getItem(s)))}return e}async removeModel(e){var t;const n=Js(e=(t=e).startsWith(ti.URL_SCHEME)?t.slice(ti.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return Qs(n),r}}class si{constructor(){this.managers={}}static getInstance(){return null==si.instance&&(si.instance=new si),si.instance}static registerManager(e,t){f(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),f(e.length>0,(()=>"scheme must not be an empty string."));const n=si.getInstance();f(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=si.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(si.getInstance().managers)}}class ii{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!=typeof window&&X().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{e.source===window&&e.data.name===this.messageName&&(e.stopPropagation(),(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))}),!0))):setTimeout(e,t)}}if(X().get("IS_BROWSER")){X().setPlatform("browser",new ii);try{si.registerManager(ti.URL_SCHEME,new ri)}catch(e){}try{si.registerManager(Us.URL_SCHEME,new Gs)}catch(e){}}let ai;function oi(e,t="float32",n){return t=t||"float32",V(e),new Gr(e,t,n)}X().get("IS_NODE")&&!X().get("IS_BROWSER")&&X().setPlatform("node",new class{constructor(){this.util=n(628),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=X().global.fetch?X().global.fetch(e,t):(null==ai&&(ai=n(410)),ai(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const ui=Is({cast_:function(e,t){const n=vs(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:t};return ps.runKernel(ke,r,s)}}),li=Is({clone_:function(e){const t={x:vs(e,"x","clone","string_or_numeric")};return ps.runKernel(pt,t)}});function ci(e){return new Promise((e=>setTimeout(e))).then(e)}ds(),jr={buffer:oi,cast:ui,clone:li,print:function(e,t=!1){console.log(e.toString(t))}};class hi{constructor(e){if(!X().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(hi.URL_SCHEME)&&(e=e.slice(hi.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=Rs(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=r,await ci((()=>s.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await ci((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:_s(e)}}}}function di(e,t,n,r){!function(e){f(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){f(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),f(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),f(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((i=>(i.then((i=>{const a=n+ ++s/e.length*(r-n);return t(a),i})),i))))}async function pi(e,t){null==t&&(t={});const n=null==t.fetchFunc?X().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),s=(null==t.onProgress?await Promise.all(r):await di(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(s):await di(s,t.onProgress,.5,1)}hi.URL_SCHEME="downloads://",Ms.registerSaveRouter((e=>X().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(hi.URL_SCHEME)?function(e="model"){return new hi(e)}(e.slice(hi.URL_SCHEME.length)):null));class fi{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(f("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=X().platform.fetch,f(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&f(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=Rs(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:_s(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return async function(e,t){let n,r;return null!=e.weightsManifest&&([n,r]=await t(e.weightsManifest)),function(e,t,n){const r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(r.initializerSignature=e.initializerSignature),r}(e,n,r)}(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),s=this.weightPathPrefix||n,i=function(e){const t=[];for(const n of e)t.push(...n.weights);return t}(e),a=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):a.push(s+e+r);return this.weightUrlConverter&&a.push(...await Promise.all(o)),[i,Fs(await pi(a,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function mi(e){return null!=e.match(fi.URL_SCHEME_REGEX)}fi.URL_SCHEME_REGEX=/^https?:\/\//;const gi=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>mi(e))):mi(e),n)return bi(e,t)}return null};function bi(e,t){return new fi(e,t)}function xi(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const i=n-1-s,a=e[i]||1;(t[t.length-1-s]||1)>1&&1===a&&r.unshift(i)}return r}function yi(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],i=t.length-r-1,a=t[i];(null==s||1===s&&a>1)&&n.unshift(i)}return n}function wi(e,t){const n=[],r=Math.max(e.length,t.length);for(let s=0;s<r;s++){let r=e[e.length-s-1];null==r&&(r=1);let i=t[t.length-s-1];if(null==i&&(i=1),1===r)n.unshift(i);else if(1===i)n.unshift(r);else{if(r!==i)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}function vi(e,t,n){const r=e.shape.length;f(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),f(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let s=0;s<r;++s)f(t[s]+n[s]<=e.shape[s],(()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`))}function ki(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Ii(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function Ci(e,t,n,r){const s=[...e];for(let e=s.length;e<r.length;e++)s.push(1);for(let e=0;e<n;e++)0===e?s[t]=1:(s.splice(t,0,1),s.pop());return s}function Di(e,t,n){return n<=e?n:n-(t-1)}function Ei(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function Ni(e,t,n,r,s,i,a,o,u){const l=e.length;let c=new Array(l),h=new Array(l),d=new Array(l);if(t.length&&n>0){const u=t[0],l=n+1;c=Si(a,u,l,r,e),h=$i(o,u,l,s,e),d=Ci(i,u,l,e)}else for(let t=0;t<l;t++)c[t]=Ai(a,r,i,e,t,u),h[t]=Fi(o,s,i,e,t,u),d[t]=Ti(i,t,u);return{begin:c,end:h,strides:d}}function Si(e,t,n,r,s){const i=[...s],a=Ei(n,t);for(let s=0;s<i.length;s++)if(a.indexOf(s)>-1)i[s]=0;else{const a=Di(t,n,s);let o=r[a];e&1<<a&&(o=0),i[s]=o}return i}function $i(e,t,n,r,s){const i=[...s],a=Ei(n,t);for(let s=0;s<i.length;s++)if(a.indexOf(s)>-1)i[s]=Number.MAX_SAFE_INTEGER;else{const a=Di(t,n,s);let o=r[a];e&1<<a&&(o=Number.MAX_SAFE_INTEGER),i[s]=o}for(let e=0;e<i.length;e++){const t=s[e];i[e]<0&&(i[e]+=t),i[e]=h(0,i[e],s[e])}return i}function Ti(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function Ai(e,t,n,r,s,i){let a=t[s];const o=n[s]||1;(e&1<<s||i&1<<s||null==a)&&(a=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[s];return a<0&&(a+=u),a=h(0,a,u-1),a}function Fi(e,t,n,r,s,i){let a=t[s];const o=n[s]||1;(e&1<<s||i&1<<s||null==a)&&(a=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[s];return a<0&&(a+=u),a=o>0?h(0,a,u):h(-1,a,u-1),a}function Ri(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function _i(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Oi(e,t,n){let r;const s=e.shape.length;let i;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{f(-1!==e,(()=>"slice() does not support negative begin indexing."))})),i=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,i=i.map(((t,n)=>t>=0?t:(f(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,i]}function Mi(e,t,n,r,s,i,a,o,u){let l;if(null==r?(l=new Array(t.length),l.fill(1)):l=r,null!=a&&0!=(a&a-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:l.slice(),beginMask:s,endMask:i,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:u};for(let e=0;e<h.dims;e++)c&&0!=(1<<e&o)&&h.numAddAxisAfterEllipsis++,1<<e&a&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const s=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<s;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(h,d);let p=!0,f=!0,m=!0;const g=[],b=[];for(let t=0;t<e.length;++t){if(0===d.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(d.shrinkAxisMask&1<<t),r=e[t];if(-1===r){g.push(n?1:-1);continue}const s=[d.beginMask&1<<t,d.endMask&1<<t],i=[d.strides[t]>0?0:-1,d.strides[t]>0?r:r-1];if(n&&d.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[t];const a=!!(d.beginMask&1<<t&&d.endMask&1<<t);if(d.beginValid&&d.endValid){if(n){const e=d.begin[t]<0?r+d.begin[t]:d.begin[t];if(d.begin[t]=e,d.end[t]=d.begin[t]+1,e<0||e>=r)throw Error(`slice index ${d.begin[t]} of dimension ${t} out of bounds.`)}else d.begin[t]=Bi(d.begin[t],0,d.strides[t],r,s,i),d.end[t]=Bi(d.end[t],1,d.strides[t],r,s,i);const e=1===d.strides[t]&&0===d.begin[t]&&d.end[t]===r;p=p&&e,f=f&&(0===t&&1===d.strides[t]||e)}else p=p&&1===d.strides[t]&&a,f=f&&(0===t&&1===d.strides[t]||a);let o,u=!1;if(d.beginValid&&d.endValid?(o=d.end[t]-d.begin[t],u=!0):n?(o=1,u=!0):a&&r>=0&&(o=d.strides[t]<0?-r:r,u=!0),u){let e;e=0===o||o<0!=d.strides[t]<0?0:Math.trunc(o/d.strides[t])+(o%d.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<d.finalShapeGatherIndices.length;++e){const t=d.finalShapeGatherIndices[e];t>=0?b.push(g[t]):-2===t&&b.push(1)}return{finalShapeSparse:b.filter(((e,t)=>-2!==d.finalShapeGatherIndices[t])),finalShape:b,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function Bi(e,t,n,r,s,i){if(s[t])return n>0?i[t]:i[t+1&1];{const t=e<0?r+e:e;return t<i[0]?i[0]:t>i[1]?i[1]:t}}Ms.registerSaveRouter(gi),Ms.registerLoadRouter(gi);class Li{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class zi{constructor(){this.classNameMap={}}static getMap(){return null==zi.instance&&(zi.instance=new zi),zi.instance}static register(e){zi.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Pi(e){f(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),f("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),f(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),zi.register(e)}function Wi(){return ps}function Ui(){return ps.memory()}function Vi(e,t){return ps.tidy(e,t)}function Gi(e){os(e).forEach((e=>e.dispose()))}function Hi(e){return ps.keep(e)}function ji(e,t,n=1){return ps.registerBackend(e,t,n)}function qi(e){return ps.customGrad(e)}function Ki(e,t){if((T(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&T(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Ds(e,[],[],t)}qr=function(e){X().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};class Xi extends Li{minimize(e,t=!1,n){const{value:r,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:s[e.name]})));this.applyGradients(e)}else this.applyGradients(s);return Gi(s),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){f(O(e),(()=>"The f passed in variableGrads(f) must be a function")),f(null==t||Array.isArray(t)&&t.every((e=>e instanceof Yr)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in ps.registeredVariables)t.push(ps.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,s=t.length;f((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`));const{value:i,grads:a}=ps.gradients(e,t,null,!0);f(a.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),f(0===i.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=a[t]&&(o[e.name]=a[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:i,grads:o}}(e,t)}dispose(){null!=this.iterations_&&Gi(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Ki(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Xi,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});const Yi=Is({abs_:function(e){const t=vs(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return ps.runKernel(Ee,e)}{const e={x:t};return ps.runKernel(ee,e)}}}),Zi=Is({add_:function(e,t){let n=vs(e,"a","add"),r=vs(t,"b","add");[n,r]=is(n,r);const s={a:n,b:r};return ps.runKernel(re,s)}}),Ji=Is({all_:function(e,t=null,n=!1){const r={x:vs(e,"x","all","bool")},s={axis:t,keepDims:n};return ps.runKernel(ie,r,s)}}),Qi=Is({any_:function(e,t=null,n=!1){const r={x:vs(e,"x","any","bool")},s={axis:t,keepDims:n};return ps.runKernel(ae,r,s)}}),ea=Is({argMax_:function(e,t=0){const n={x:vs(e,"x","argMax")},r={axis:t};return ps.runKernel(oe,n,r)}});function ta(e,t,n,r,s="NHWC",i){return sa(e,[...t,e[3]],n,i,r,null,null,pa(s))}function na(e,t,n,r,s,i,a="channelsLast"){const[o,u]=oa(t);let l;if("channelsLast"===a)l=[o,u,e[3],e[3]];else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);l=[o,u,e[1],e[1]]}return sa(e,l,n,r,s,i,!1,a)}function ra(e,t,n,r,s,i,a="NDHWC"){const[o,u,l]=ua(t);let c,h;if("NDHWC"===a)h="channelsLast",c=[o,u,l,e[4],e[4]];else{if("NCDHW"!==a)throw new Error(`Unknown dataFormat ${a}`);h="channelsFirst",c=[o,u,l,e[1],e[1]]}return ia(e,c,n,r,s,!1,h,i)}function sa(e,t,n,r,s,i,a=!1,o="channelsLast"){let[u,l,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[u,l,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,h,l,c]=e}const[d,p,,f]=t,[m,g]=oa(n),[b,x]=oa(r),y=la(d,b),w=la(p,x),{padInfo:v,outHeight:k,outWidth:I}=function(e,t,n,r,s,i,a,o,u){let l,c,h;if("number"==typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,s){null==r&&(r=aa(e,t,n));const i=e[1];return[ca((e[0]-t+2*r)/n+1,s),ca((i-t+2*r)/n+1,s)]}([t,n],i,r,e,o);c=s[0],h=s[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/s);const e=Math.max(0,(c-1)*r+i-t),o=Math.max(0,(h-1)*s+a-n),u=Math.floor(e/2),d=e-u,p=Math.floor(o/2);l={top:u,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-i+1)/r),h=Math.ceil((n-a+1)/s);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===u?e[1][0]:e[2][0],p="channelsLast"===u?e[1][1]:e[2][1],f="channelsLast"===u?e[2][0]:e[3][0],m="channelsLast"===u?e[2][1]:e[3][1];l={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},c=ca((t-i+d+p)/r+1,o),h=ca((n-a+f+m)/s+1,o)}}return{padInfo:l,outHeight:c,outWidth:h}}(s,l,c,m,g,y,w,i,o),C=a?f*h:f;let D;return"channelsFirst"===o?D=[u,C,k,I]:"channelsLast"===o&&(D=[u,k,I,C]),{batchSize:u,dataFormat:o,inHeight:l,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:C,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:y,effectiveFilterWidth:w,dilationHeight:b,dilationWidth:x,inShape:e,outShape:D,filterShape:t}}function ia(e,t,n,r,s,i=!1,a="channelsLast",o){let[u,l,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===a)[u,l,c,h,d]=e;else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);[u,d,l,c,h]=e}const[p,f,m,,g]=t,[b,x,y]=ua(n),[w,v,k]=ua(r),I=la(p,w),C=la(f,v),D=la(m,k),{padInfo:E,outDepth:N,outHeight:S,outWidth:$}=function(e,t,n,r,s,i,a,o,u,l,c){let h,d,p,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const i=function(e,t,n,r,s,i){null==s&&(s=aa(e,t,r));const a=e[1],o=e[2];return[ca((e[0]-t+2*s)/r+1,i),ca((a-t+2*s)/r+1,i),ca((o-t+2*s)/r+1,i),1]}([t,n,r,1],o,0,s,e,c);d=i[0],p=i[1],f=i[2]}else if("same"===e){d=Math.ceil(t/s),p=Math.ceil(n/i),f=Math.ceil(r/a);const e=(d-1)*s+o-t,c=(p-1)*i+u-n,m=(f-1)*a+l-r,g=Math.floor(e/2),b=e-g,x=Math.floor(c/2),y=c-x,w=Math.floor(m/2);h={top:x,bottom:y,left:w,right:m-w,front:g,back:b,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-o+1)/s),p=Math.ceil((n-u+1)/i),f=Math.ceil((r-l+1)/a)}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(s,l,c,h,b,x,y,I,C,D,o),T=i?g*d:g;let A;return"channelsFirst"===a?A=[u,T,N,S,$]:"channelsLast"===a&&(A=[u,N,S,$,T]),{batchSize:u,dataFormat:a,inDepth:l,inHeight:c,inWidth:h,inChannels:d,outDepth:N,outHeight:S,outWidth:$,outChannels:T,padInfo:E,strideDepth:b,strideHeight:x,strideWidth:y,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:C,effectiveFilterWidth:D,dilationDepth:w,dilationHeight:v,dilationWidth:k,inShape:e,outShape:A,filterShape:t}}function aa(e,t,n,r=1){const s=la(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}function oa(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function ua(e){return"number"==typeof e?[e,e,e]:e}function la(e,t){return t<=1?e:e+(e-1)*(t-1)}function ca(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function ha(e){const[t,n,r]=oa(e);return 1===t&&1===n&&1===r}function da(e,t){return ha(e)||ha(t)}function pa(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function fa(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)f(w(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{f(w(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}const ma=Is({reshape_:function(e,t){const n={x:vs(e,"x","reshape","string_or_numeric")},r={shape:t};return ps.runKernel(cn,n,r)}}),ga=Is({avgPool_:function(e,t,n,r,s){const i=vs(e,"x","avgPool","float32");f(da(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let a=i,o=!1;3===i.rank&&(o=!0,a=ma(i,[1,i.shape[0],i.shape[1],i.shape[2]])),f(4===a.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`)),fa("avgPool",r,s);const u={x:a},l={filterSize:t,strides:n,pad:r,dimRoundingMode:s};let c=ps.runKernel(fe,u,l);return c=ui(c,i.dtype),o?ma(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),ba=Is({avgPool3d_:function(e,t,n,r,s,i="NDHWC"){const a=vs(e,"x","avgPool3d","float32");let o=a,u=!1;4===a.rank&&(u=!0,o=ma(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),f(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),f("NDHWC"===i,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),fa("avgPool3d",r,s);const l={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:i};let h=ps.runKernel(ge,l,c);return h=ui(h,o.dtype),u?ma(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),xa=Is({batchNorm_:function(e,t,n,r,s,i){null==i&&(i=.001);const a=vs(e,"x","batchNorm"),o=vs(t,"mean","batchNorm"),u=vs(n,"variance","batchNorm");let l,c;null!=s&&(l=vs(s,"scale","batchNorm")),null!=r&&(c=vs(r,"offset","batchNorm")),f(o.rank===u.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),f(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),f(null==l||o.rank===l.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h=function(e){let t;return t=0===e.rank||1===e.rank?ma(e,[1,1,1,e.size]):2===e.rank?ma(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?ma(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(a),d={x:h,scale:l,offset:c,mean:o,variance:u},p={varianceEpsilon:i},m=ps.runKernel(ut,d,p);return ma(m,a.shape)}}),ya=Is({batchNorm2d_:function(e,t,n,r,s,i){const a=vs(e,"x","batchNorm"),o=vs(t,"mean","batchNorm"),u=vs(n,"variance","batchNorm");let l,c;return null!=s&&(l=vs(s,"scale","batchNorm")),null!=r&&(c=vs(r,"offset","batchNorm")),f(2===a.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`)),f(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),f(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=l&&f(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=c&&f(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),xa(a,o,u,c,l,i)}}),wa=Is({batchNorm3d_:function(e,t,n,r,s,i){const a=vs(e,"x","batchNorm"),o=vs(t,"mean","batchNorm"),u=vs(n,"variance","batchNorm");let l,c;return null!=s&&(l=vs(s,"scale","batchNorm")),null!=r&&(c=vs(r,"offset","batchNorm")),f(3===a.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`)),f(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),f(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=l&&f(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=c&&f(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),xa(a,o,u,c,l,i)}}),va=Is({batchNorm4d_:function(e,t,n,r,s,i){const a=vs(e,"x","batchNorm"),o=vs(t,"mean","batchNorm"),u=vs(n,"variance","batchNorm");let l,c;return null!=s&&(l=vs(s,"scale","batchNorm")),null!=r&&(c=vs(r,"offset","batchNorm")),f(4===a.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`)),f(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),f(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=l&&f(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=c&&f(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),xa(a,o,u,c,l,i)}}),ka=Is({broadcastTo_:function(e,t){let n=vs(e,"broadcastTo","x");const r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=ma(n,e)}const s=n.shape,i=Array.from(t);for(let e=t.length-1;e>=0;e--)if(s[e]===t[e])i[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===i.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return li(n);const a={x:n},o={reps:i};return ps.runKernel(Kn,a,o)}});function Ia(e,t,n){const r={shape:e,value:t,dtype:n};return ps.runKernel(st,{},r)}const Ca=Is({clipByValue_:function(e,t,n){const r=vs(e,"x","clipByValue");if(f(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return Ia(r.shape,t,r.dtype);const s={x:r},i={clipValueMin:t,clipValueMax:n};return ps.runKernel(Ce,s,i)}}),Da=Is({concat_:function(e,t=0){f(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=ks(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return li(n[0]);const r=n,s={axis:t};return ps.runKernel(Ne,r,s)}}),Ea=Is({concat1d_:function(e){return Da(e,0)}}),Na=Is({concat2d_:function(e,t){return Da(e,t)}}),Sa=Is({concat3d_:function(e,t){return Da(e,t)}}),$a=Is({concat4d_:function(e,t){return Da(e,t)}}),Ta=Is({conv2d_:function(e,t,n,r,s="NHWC",i=[1,1],a){const o=vs(e,"x","conv2d","float32"),u=vs(t,"filter","conv2d","float32");let l=o,c=!1;3===o.rank&&(c=!0,l=ma(o,[1,o.shape[0],o.shape[1],o.shape[2]])),f(4===l.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`)),f(4===u.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`)),fa("conv2d",r,a);const h="NHWC"===s?l.shape[3]:l.shape[1];f(h===u.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${u.shape[2]}.`)),f(da(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`));const d={x:l,filter:u},p={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a},m=ps.runKernel(Se,d,p);return c?ma(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),Aa=Is({conv1d_:function(e,t,n,r,s="NWC",i=1,a){const o=vs(e,"x","conv1d"),u=vs(t,"filter","conv1d");let l=o,c=!1;2===o.rank&&(c=!0,l=ma(o,[1,o.shape[0],o.shape[1]])),f(3===l.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`)),f(3===u.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`)),fa("conv1d",r,a),f(l.shape[2]===u.shape[1],(()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`)),f(da(n,i),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${i}'`)),f("NWC"===s,(()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`));const h=ma(u,[1,u.shape[0],u.shape[1],u.shape[2]]),d=ma(l,[l.shape[0],1,l.shape[1],l.shape[2]]),p=Ta(d,h,[1,n],r,"NHWC",[1,i],a);return ma(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}}),Fa=Is({conv2DBackpropInput_:function(e,t,n,r,s,i="NHWC",a){f(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,u=t,l=!1;3===t.rank&&(l=!0,u=ma(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),f(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),f(4===u.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`)),f(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===i?o[3]:o[1],h="NHWC"===i?u.shape[3]:u.shape[1];f(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),f(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),fa("conv2dDerInput",s,a);const d={dy:u,filter:n},p={strides:r,pad:s,dataFormat:i,dimRoundingMode:a,inputShape:o},m=ps.runKernel(Te,d,p);return l?ma(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),Ra=Is({conv2dTranspose_:function(e,t,n,r,s,i){const a=vs(e,"x","conv2dTranspose"),o=vs(t,"filter","conv2dTranspose");return Fa(n,a,o,r,s,"NHWC",i)}}),_a=Is({conv3d_:function(e,t,n,r,s="NDHWC",i=[1,1,1]){const a=vs(e,"x","conv3d"),o=vs(t,"filter","conv3d");let u=a,l=!1;4===a.rank&&(l=!0,u=ma(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),f(5===u.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`)),f(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),f(u.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),f(da(n,i),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),f("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`));const c={x:u,filter:o},h={strides:n,pad:r,dataFormat:s,dilations:i},d=ps.runKernel(Ae,c,h);return l?ma(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Oa=Is({conv3DBackpropInput_:function(e,t,n,r,s){f(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let i=e,a=t,o=!1;4===t.rank&&(o=!0,a=ma(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),i=[1,e[0],e[1],e[2],e[3]]);const u=i[4],l=a.shape[4];f(5===i.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`)),f(5===a.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`)),f(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),f(u===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`)),f(l===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`));const c={dy:a,filter:n},h={pad:s,strides:r,inputShape:i},d=ps.runKernel(Re,c,h);return o?ma(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Ma=Is({conv3dTranspose_:function(e,t,n,r,s){const i=vs(e,"x","conv3dTranspose"),a=vs(t,"filter","conv3dTranspose");return Oa(n,i,a,r,s)}}),Ba=Is({denseBincount_:function(e,t,n,r=!1){const s=vs(e,"x","denseBincount"),i=vs(t,"weights","denseBincount");f("int32"===s.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`)),f(s.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`)),f(n>=0,(()=>`size must be non-negative, but got ${n}.`)),f(i.size===s.size||0===i.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${i.shape}.`));const a={x:s,weights:i},o={size:n,binaryOutput:r};return ps.runKernel(ze,a,o)}}),La=Is({depthwiseConv2d_:function(e,t,n,r,s="NHWC",i=[1,1],a){const o=vs(e,"x","depthwiseConv2d","float32"),u=vs(t,"filter","depthwiseConv2d","float32");let l=o,c=!1;3===o.rank&&(c=!0,l=ma(o,[1,o.shape[0],o.shape[1],o.shape[2]])),f(4===l.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`)),f(4===u.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`));const h="NHWC"===s?l.shape[3]:l.shape[1];f(h===u.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${u.shape[2]}.`)),fa("depthwiseConv2d",r,a);const d={x:l,filter:u},p={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a},m=ps.runKernel(We,d,p);return c?ma(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),za=Is({floorDiv_:function(e,t){let n=vs(e,"a","floorDiv"),r=vs(t,"b","floorDiv");[n,r]=is(n,r);const s={a:n,b:r};return ps.runKernel(ot,s)}}),Pa=Is({div_:function(e,t){let n=vs(e,"a","div"),r=vs(t,"b","div");if([n,r]=is(n,r),"int32"===n.dtype&&"int32"===r.dtype)return za(n,r);const s={a:n,b:r};return ps.runKernel(Ke,s,{})}}),Wa=Is({elu_:function(e){const t={x:vs(e,"x","elu","float32")};return ps.runKernel(Ye,t)}}),Ua=Is({equal_:function(e,t){let n=vs(e,"a","equal","string_or_numeric"),r=vs(t,"b","equal","string_or_numeric");[n,r]=is(n,r),wi(n.shape,r.shape);const s={a:n,b:r};return ps.runKernel(Qe,s)}}),Va=Is({exp_:function(e){const t={x:vs(e,"x","exp")};return ps.runKernel(et,t)}}),Ga=Is({expandDims_:function(e,t=0){const n=vs(e,"x","expandDims","string_or_numeric");f(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},s={dim:t};return ps.runKernel(tt,r,s)}}),Ha=Is({tile_:function(e,t){const n=vs(e,"x","tile","string_or_numeric");f(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},s={reps:t};return ps.runKernel(Kn,r,s)}}),ja=Is({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const s=oi([e,t],r),i=e<=t?e:t;for(let e=0;e<i;++e)s.set(1,e,e);const a=ma(s.toTensor(),[e,t]);if(null==n)return a;if(1===n.length)return Ha(Ga(a,0),[n[0],1,1]);if(2===n.length)return Ha(Ga(Ga(a,0),0),[n[0],n[1],1,1]);if(3===n.length)return Ha(Ga(Ga(Ga(a,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),qa=Is({floor_:function(e){const t={x:vs(e,"x","floor","float32")};return ps.runKernel(at,t)}}),Ka=Is({gather_:function(e,t,n=0,r=0){const s={x:vs(e,"x","gather"),indices:vs(t,"indices","gather","int32")},i={axis:n,batchDims:r};return ps.runKernel(lt,s,i)}}),Xa=Is({greater_:function(e,t){let n=vs(e,"a","greater","string_or_numeric"),r=vs(t,"b","greater","string_or_numeric");[n,r]=is(n,r),wi(n.shape,r.shape);const s={a:n,b:r};return ps.runKernel(ht,s)}}),Ya=Is({greaterEqual_:function(e,t){let n=vs(e,"a","greaterEqual","string_or_numeric"),r=vs(t,"b","greaterEqual","string_or_numeric");[n,r]=is(n,r),wi(n.shape,r.shape);const s={a:n,b:r};return ps.runKernel(dt,s)}}),Za=Is({leakyRelu_:function(e,t=.2){const n={x:vs(e,"x","leakyRelu")},r={alpha:t};return ps.runKernel(yt,n,r)}}),Ja=Is({log_:function(e){const t={x:vs(e,"x","log","float32")};return ps.runKernel(It,t)}}),Qa=Is({log1p_:function(e){const t={x:vs(e,"x","log1p")};return ps.runKernel(Ct,t)}}),eo=Is({max_:function(e,t=null,n=!1){const r={x:vs(e,"x","max")},s={reductionIndices:t,keepDims:n};return ps.runKernel(Tt,r,s)}}),to=Is({mul_:function(e,t){let n=vs(e,"a","mul"),r=vs(t,"b","mul");[n,r]=is(n,r);const s={a:n,b:r};return ps.runKernel(Vt,s)}}),no=Is({sub_:function(e,t){let n=vs(e,"a","sub"),r=vs(t,"b","sub");[n,r]=is(n,r);const s={a:n,b:r};return ps.runKernel(Hn,s)}}),ro=Is({sum_:function(e,t=null,n=!1){let r=vs(e,"x","sum");"bool"===r.dtype&&(r=ui(r,"int32"));const s={x:r},i={axis:t,keepDims:n};return ps.runKernel(Tn,s,i)}}),so=Is({logSoftmax_:function(e,t=-1){const n=vs(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r=qi(((e,n)=>{const r=eo(e,t,!0),s=no(e,r),i=no(ui(s,"float32"),Ja(ro(Va(s),t,!0)));return n([i]),{value:i,gradFunc:(e,n)=>{const[r]=n,s=Va(r);return no(e,to(ro(e,t,!0),s))}}}));return r(n)}}),io=Is({logicalAnd_:function(e,t){const n=vs(e,"a","logicalAnd","bool"),r=vs(t,"b","logicalAnd","bool");wi(n.shape,r.shape);const s={a:n,b:r};return ps.runKernel(Dt,s)}}),ao=Is({matMul_:function(e,t,n=!1,r=!1){let s=vs(e,"a","matMul"),i=vs(t,"b","matMul");[s,i]=is(s,i);const a={a:s,b:i},o={transposeA:n,transposeB:r};return ps.runKernel(xe,a,o)}}),oo=Is({maxPool_:function(e,t,n,r,s){const i=vs(e,"x","maxPool");let a=i,o=!1;3===i.rank&&(o=!0,a=ma(i,[1,i.shape[0],i.shape[1],i.shape[2]])),f(4===a.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`)),f(da(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),fa("maxPool",r,s);const u={x:a},l={filterSize:t,strides:n,pad:r,dimRoundingMode:s},c=ps.runKernel(Ft,u,l);return o?ma(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),uo=Is({maxPool3d_:function(e,t=[1,1,1],n,r,s,i="NDHWC"){const a=vs(e,"x","maxPool3d");let o=a,u=!1;4===a.rank&&(u=!0,o=ma(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),f(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),f("NDHWC"===i,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),fa("maxPool3d",r,s);const l={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:i},h=ps.runKernel(_t,l,c);return u?ma(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),lo=Is({maximum_:function(e,t){let n=vs(e,"a","maximum"),r=vs(t,"b","maximum");[n,r]=is(n,r),"bool"===n.dtype&&(n=ui(n,"int32"),r=ui(r,"int32")),wi(n.shape,r.shape);const s={a:n,b:r};return ps.runKernel(At,s)}}),co=Is({mean_:function(e,t=null,n=!1){const r={x:vs(e,"x","mean")},s={axis:t,keepDims:n};return ps.runKernel(Bt,r,s)}}),ho=Is({min_:function(e,t=null,n=!1){const r={x:vs(e,"x","min")},s={axis:t,keepDims:n};return ps.runKernel(Lt,r,s)}}),po=Is({minimum_:function(e,t){let n=vs(e,"a","minimum"),r=vs(t,"b","minimum");[n,r]=is(n,r),"bool"===n.dtype&&(n=ui(n,"int32"),r=ui(r,"int32")),wi(n.shape,r.shape);const s={a:n,b:r};return ps.runKernel(zt,s)}});function fo(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function mo(e,t,n){const r=e.length+t.length,s=[];let i=0,a=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(e[i++]):s.push(t[a++]);return s}function go(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map((t=>e[t]))]}function bo(e,t){return mo(e,t.map((e=>1)),t)}function xo(e,t,n){f(fo(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function yo(e,t){if(fo(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function wo(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function vo(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const ko=Is({square_:function(e){const t=vs(e,"x","square");return ps.runKernel("Square",{x:t},{})}}),Io=Is({moments_:function(e,t=null,n=!1){const r=D(t,(e=vs(e,"x","moments")).shape),s=co(e,r,n);let i=s.shape;n||(i=bo(s.shape,r));const a=ko(no(ui(e,"float32"),ma(s,i)));return{mean:s,variance:co(a,r,n)}}}),Co=Is({neg_:function(e){const t={x:vs(e,"x","neg")};return ps.runKernel(Gt,t)}}),Do=Is({notEqual_:function(e,t){let n=vs(e,"a","notEqual","string_or_numeric"),r=vs(t,"b","notEqual","string_or_numeric");[n,r]=is(n,r),wi(n.shape,r.shape);const s={a:n,b:r};return ps.runKernel(Ht,s)}}),Eo=Is({oneHot_:function(e,t,n=1,r=0,s="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const i={indices:vs(e,"indices","oneHot","int32")},a={dtype:s,depth:t,onValue:n,offValue:r};return ps.runKernel(Yt,i,a)}});function No(e,t="float32"){if("complex64"===t){const t=No(e,"float32"),n=No(e,"float32");return Cs(t,n)}const n=W(x(e),t);return ps.makeTensor(n,e,t)}function So(e,t="float32"){if("complex64"===t){const t=So(e,"float32"),n=No(e,"float32");return Cs(t,n)}const n=P(x(e),t);return ps.makeTensor(n,e,t)}const $o=Is({onesLike_:function(e){const t={x:vs(e,"x","onesLike")};return ps.runKernel(Xt,t)}}),To=Is({pad_:function(e,t,n=0){const r=vs(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:t,constantValue:n},i={x:r};return ps.runKernel(Jt,i,s)}}),Ao=Is({prelu_:function(e,t){const n={x:vs(e,"x","prelu"),alpha:vs(t,"alpha","prelu")};return ps.runKernel(en,n)}});var Fo=n(377);class Ro{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=s||Math.random();this.random=Fo.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,s,i;do{r=2*this.random()-1,s=2*this.random()-1,i=r*r+s*s}while(i>=1||0===i);const a=Math.sqrt(-2*Math.log(i)/i);e=this.mean+this.stdDev*r*a,t=this.mean+this.stdDev*s*a,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class _o{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Fo.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Oo=Is({randomNormal_:function(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const i=new Ro(t,n,r,!1,s),a=oi(e,r);for(let e=0;e<a.values.length;e++)a.values[e]=i.nextValue();return a.toTensor()}}),Mo=Is({randomUniform_:function(e,t=0,n=1,r="float32",s){const i=oi(e,r),a=new _o(t,n,null,s);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),Bo=Is({relu_:function(e){const t={x:vs(e,"x","relu")};return ps.runKernel(ln,t)}}),Lo=Is({reverse_:function(e,t){const n={x:vs(e,"x","reverse")},r={dims:t};return ps.runKernel(gn,n,r)}}),zo=Is({selu_:function(e){const t={x:vs(e,"x","selu")};return ps.runKernel(kn,t)}}),Po=Is({separableConv2d_:function(e,t,n,r,s,i=[1,1],a="NHWC"){const o=vs(e,"x","separableConv2d"),u=vs(t,"depthwiseFilter","separableConv2d"),l=vs(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=ma(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===a)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");f(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),f(4===u.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`)),f(4===l.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`)),f(1===l.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`)),f(1===l.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`));const d=u.shape[2],p=u.shape[3];f(l.shape[2]===d*p,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${l.shape[2]}.`));const m=La(c,u,r,s,a,i),g=Ta(m,l,1,"valid",a);return h?ma(g,[g.shape[1],g.shape[2],g.shape[3]]):g}}),Wo=Is({sigmoid_:function(e){const t={x:vs(e,"x","sigmoid","float32")};return ps.runKernel(Nn,t)}}),Uo=Is({slice_:function(e,t,n){const r=vs(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},i={begin:t,size:n};return ps.runKernel(In,s,i)}}),Vo=Is({slice1d_:function(e,t,n){const r=vs(e,"x","slice1d");return f(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),Uo(r,[t],[n])}}),Go=Is({slice2d_:function(e,t,n){const r=vs(e,"x","slice2d");return f(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),Uo(r,t,n)}}),Ho=Is({slice3d_:function(e,t,n){const r=vs(e,"x","slice3d");return f(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),Uo(r,t,n)}}),jo=Is({slice4d_:function(e,t,n){const r=vs(e,"x","slice4d");return f(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),Uo(r,t,n)}}),qo=Is({softmax_:function(e,t=-1){const n=vs(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},s={dim:t};return ps.runKernel(Rn,r,s)}}),Ko=Is({softplus_:function(e){const t={x:vs(e,"x","softplus")};return ps.runKernel(Sn,t)}}),Xo=Is({split_:function(e,t,n=0){const r={x:vs(e,"x","split")},s={numOrSizeSplits:t,axis:n};return ps.runKernel(Fn,r,s)}}),Yo=Is({sqrt_:function(e){const t={x:vs(e,"x","sqrt","float32")};return ps.runKernel($n,t)}}),Zo=Is({squeeze_:function(e,t){const n=vs(e,"x","squeeze","string_or_numeric");return ma(n,E(n.shape,t).newShape)}}),Jo=Is({stack_:function(e,t=0){const n=ks(e,"tensors","stack","string_or_numeric");f(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&f(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,s={axis:t};return ps.runKernel(Zt,r,s)}}),Qo=Is({tanh_:function(e){const t={x:vs(e,"x","tanh","float32")};return ps.runKernel(qn,t)}});function eu(e,t){g(e);const n=xs(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Ds(e,null,n,t)}const tu=Is({truncatedNormal_:function(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const i=new Ro(t,n,r,!0,s),a=oi(e,r);for(let e=0;e<a.values.length;e++)a.values[e]=i.nextValue();return a.toTensor()}}),nu=Is({unstack_:function(e,t=0){const n=vs(e,"x","unstack","string_or_numeric");f(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},s={axis:t};return ps.runKernel(Qn,r,s)}}),ru=Is({where_:function(e,t,n){const r=vs(t,"a","where"),s=vs(n,"b","where"),i=vs(e,"condition","where","bool"),a=wi(wi(i.shape,r.shape),s.shape),o={condition:ka(i,a),t:ka(r,a),e:ka(s,a)};return ps.runKernel(vn,o)}}),su=Is({zerosLike_:function(e){const t={x:vs(e,"x","zerosLike")};return ps.runKernel(tr,t)}}),iu=Is({imag_:function(e){const t={input:vs(e,"input","imag")};return ps.runKernel(mt,t)}}),au=Is({real_:function(e){const t={input:vs(e,"input","real")};return ps.runKernel(on,t)}}),ou=Is({transpose_:function(e,t,n){const r=vs(e,"x","transpose");if(null==t&&(t=r.shape.map(((e,t)=>t)).reverse()),f(r.rank===t.length,(()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`)),t.forEach((e=>{f(e>=0&&e<r.rank,(()=>"All entries in 'perm' must be between 0 and "+(r.rank-1)+` but got ${t}`))})),r.rank<=1)return r.clone();const s={x:r},i={perm:t};return"complex64"===r.dtype?Vi((()=>{let e=au(r),t=iu(r);return e=ps.runKernel(Zn,{x:e},i),t=ps.runKernel(Zn,{x:t},i),n&&(t=Co(t)),Cs(e,t)})):ps.runKernel(Zn,s,i)}}),uu=Is({dropout_:function(e,t,n,r){const s=vs(e,"x","dropout");if(f("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),f(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof Kr?s.clone():s;const i=function(e,t){if(null==t)return e.shape.slice();if(y(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(s,n),a=1-t,o=Pa(qa(Zi(Mo(i,0,1,"float32",r),a)),a);return to(s,o)}}),lu=Is({fft_:function(e){f("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return ps.runKernel(rt,t)}}),cu=Is({rfft_:function(e,t){f("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map((e=>0)),i=e.shape.map((e=>e));i[e.shape.length-1]=t,s=Uo(e,r,i),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,s=Da([e,No(r)],e.shape.length-1),n=t}else s=e;const i=su(s),a=ma(Cs(s,i),[r,n]),o=lu(a),u=Math.floor(n/2)+1,l=au(o),c=iu(o),h=Xo(l,[u,n-u],l.shape.length-1),d=Xo(c,[u,n-u],c.shape.length-1),p=s.shape.slice();return p[s.shape.length-1]=u,ma(Cs(h[0],d[0]),p)}}),hu=Is({ifft_:function(e){f("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return ps.runKernel(ft,t)}}),du=Is({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const s=ma(e,[n,t]);r=hu(s)}else{const s=[n,2*(t-1)],i=ma(au(e),[n,t]),a=ma(iu(e),[n,t]),o=Lo(Uo(i,[0,1],[n,t-2]),1),u=to(Lo(Uo(a,[0,1],[n,t-2]),1),Ki(-1)),l=Da([i,o],1),c=Da([a,u],1),h=ma(Cs(l,c),[s[0],s[1]]);r=hu(h)}if(r=au(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=ma(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),pu=Is({conv2DBackpropFilter_:function(e,t,n,r,s,i="NHWC",a){let o=e;3===e.rank&&(o=ma(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=ma(t,[1,t.shape[0],t.shape[1],t.shape[2]])),f(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),f(4===u.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`)),f(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const l="NHWC"===i?o.shape[3]:o.shape[1],c="NHWC"===i?u.shape[3]:u.shape[1];f(l===n[2],(()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`)),f(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),fa("conv2dDerFilter",s,a);const h={x:o,dy:u},d={strides:r,pad:s,dataFormat:i,dimRoundingMode:a,filterShape:n};return ps.runKernel($e,h,d)}}),fu=Is({relu6_:function(e){const t={x:vs(e,"x","relu6")};return ps.runKernel(mn,t)}}),mu=Is({step_:function(e,t=0){const n={x:vs(e,"x","step")},r={alpha:t};return ps.runKernel(nr,n,r)}});function gu(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return to(e,mu(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function bu(e,t){let n=t;const r=yi(e.shape,t.shape);return r.length>0&&(n=ro(n,r)),ma(n,e.shape)}function xu(e,t,n,r){if("linear"===t)return e;if("relu"===t)return Bo(e);if("elu"===t)return Wa(e);if("relu6"===t)return fu(e);if("prelu"===t)return Ao(e,n);if("leakyrelu"===t)return Za(e,r);if("sigmoid"===t)return Wo(e);throw new Error(`Unknown fused activation ${t}.`)}const yu=(e,t)=>!(e>0)||"linear"===t,wu=Is({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:a,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(u=u||"linear",!1===yu(ps.state.gradientDepth,u)){f("NHWC"===s,(()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let h=Ta(e,t,n,r,s,i,a);return null!=o&&(h=Zi(h,o)),xu(h,u,l,c)}const h=vs(e,"x","conv2d","float32"),d=vs(t,"filter","conv2d","float32");let p=h,m=!1;3===h.rank&&(m=!0,p=ma(h,[1,h.shape[0],h.shape[1],h.shape[2]])),f(4===p.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`)),f(4===d.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`)),fa("fused conv2d",r,a);const g="NHWC"===s?p.shape[3]:p.shape[1];f(d.shape[2]===g,(()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${d.shape[2]}.`)),f(da(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`));const b=sa(p.shape,d.shape,n,i,r,a);let x,y;if(null!=o&&(x=vs(o,"bias","fused conv2d"),[x]=is(x,h),"NHWC"===s?wi(b.outShape,x.shape):(f(x.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${x.shape.length}.`)),f(0===x.shape.length||x.shape[0]===b.outChannels||1===x.shape[0],(()=>`Error in fused conv2d: bias shape (${x.shape}) is not compatible with the number of output channels (${b.outChannels})`)))),null!=l){const e=l.shape;if(f(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)f(1===e[0]||e[0]===b.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${b.outChannels}).`));else if(3===e.length)try{wi(e,b.outShape)}catch(t){const n=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${b.outShape}).`;throw Error(n)}y=vs(l,"prelu weights","fused conv2d")}const w=(e,t)=>{f("NHWC"===s,(()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`));const[a,o,l,c]=t,h=gu(e,l,u);f(ha(i),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`));const d=[Fa(o.shape,h,a,n,r),pu(o,h,a.shape,n,r)];if(null!=c){const e=bu(c,h);d.push(e)}return d},v={x:p,filter:d,bias:x,preluActivationWeights:y},k={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a,activation:u,leakyreluAlpha:c};if(null==o){const e=qi(((e,t,n)=>{let r=ps.runKernel(ir,v,k);return n([t,e,r]),m&&(r=ma(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:w}}));return e(p,d)}{const e=qi(((e,t,n,r)=>{let s=ps.runKernel(ir,v,k);return r([t,e,s,n]),m&&(s=ma(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:w}}));return e(p,d,x)}}}),vu=Is({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,s,i=[1,1],a){let o=e;3===e.rank&&(o=ma(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=ma(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={x:o,dy:u},c={strides:r,pad:s,dimRoundingMode:a,dilations:i,filterShape:n};return ps.runKernel(Ue,l,c)}}),ku=Is({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,s,i=[1,1],a){let o=t,u=!1;3===t.rank&&(u=!0,o=ma(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={dy:o,filter:n},c={strides:r,pad:s,dimRoundingMode:a,dilations:i,inputShape:e},h=ps.runKernel(Ve,l,c);return u?ma(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});Is({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:a,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(!1===yu(ps.state.gradientDepth,u)){let h=La(e,t,n,r,s,i,a);return null!=o&&(h=Zi(h,o)),xu(h,u,l,c)}const h=vs(e,"x","depthwiseConv2d","float32"),d=vs(t,"filter","depthwiseConv2d","float32");let p=h,m=!1;3===h.rank&&(m=!0,p=ma(h,[1,h.shape[0],h.shape[1],h.shape[2]])),f(4===p.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`)),f(4===d.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`)),f(p.shape[3]===d.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`)),null==i&&(i=[1,1]),f(da(n,i),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),fa("fused depthwiseConv2d",r,a);const g=sa(p.shape,d.shape,n,i,r,a,!0);let b,x;null!=o&&(b=vs(o,"bias","fused conv2d"),[b]=is(b,h),wi(g.outShape,b.shape)),null!=l&&(x=vs(l,"prelu weights","fused depthwiseConv2d"));const y=(e,t)=>{f(ha(i),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`));const[s,o,l,c]=t,h=gu(e,l,u),d=ku(o.shape,h,s,n,r,i,a),p=vu(o,h,s.shape,n,r,i,a);return null!=c?[d,p,bu(b,h)]:[d,p]},w={x:p,filter:d,bias:b,preluActivationWeights:x},v={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a,activation:u,leakyreluAlpha:c};if(null==o){const e=qi(((e,t,n)=>{let r=ps.runKernel(ar,w,v);return n([t,e,r]),m&&(r=ma(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}}));return e(p,d)}{const e=qi(((e,t,n,r)=>{let s=ps.runKernel(ar,w,v);return r([t,e,s,n]),m&&(s=ma(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:y}}));return e(p,d,b)}}});const Iu=Is({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:s,activation:i="linear",preluActivationWeights:a,leakyreluAlpha:o=.2}){if(!1===yu(ps.state.gradientDepth,i)){let u=ao(e,t,n,r);return null!=s&&(u=Zi(u,s)),xu(u,i,a,o)}let u=vs(e,"a","fused matMul"),l=vs(t,"b","fused matMul");[u,l]=is(u,l);const c=n?u.shape[u.rank-2]:u.shape[u.rank-1],h=r?l.shape[l.rank-1]:l.shape[l.rank-2],d=n?u.shape[u.rank-1]:u.shape[u.rank-2],p=r?l.shape[l.rank-2]:l.shape[l.rank-1],m=u.shape.slice(0,-2),g=l.shape.slice(0,-2),b=x(m),y=x(g);f(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`));const w=wi(u.shape.slice(0,-2),l.shape.slice(0,-2)).concat([d,p]),v=ma(u,n?[b,c,d]:[b,d,c]),k=ma(l,r?[y,p,h]:[y,h,p]);let I,C;null!=s&&(I=vs(s,"bias","fused matMul"),[I]=is(I,u),wi(w,I.shape)),null!=a&&(C=vs(a,"prelu weights","fused matMul"));const D=(e,t)=>{const[a,o,u,l]=t,c=gu(ma(e,u.shape),u,i);let h,d;return n||r?!n&&r?(h=ao(c,o,!1,!1),d=ao(c,a,!0,!1)):n&&!r?(h=ao(o,c,!1,!0),d=ao(a,c,!1,!1)):(h=ao(o,c,!0,!0),d=ao(c,a,!0,!0)):(h=ao(c,o,!1,!0),d=ao(a,c,!0,!1)),null!=s?[h,d,bu(l,c)]:[h,d]},E={a:v,b:k,bias:I,preluActivationWeights:C},N={transposeA:n,transposeB:r,activation:i,leakyreluAlpha:o};if(null==s){const e=qi(((e,t,n)=>{const r=ps.runKernel(sr,E,N);return n([e,t,r]),{value:ma(r,w),gradFunc:D}}));return e(v,k)}{const e=qi(((e,t,n,r)=>{const s=ps.runKernel(sr,E,N);return r([e,t,s,n]),{value:ma(s,w),gradFunc:D}}));return e(v,k,I)}}});function Cu(e,t,n){const r=1-e%2,s=new Float32Array(e);for(let i=0;i<e;++i){const a=2*Math.PI*i/(e+r-1);s[i]=t-n*Math.cos(a)}return eu(s,"float32")}Is({hammingWindow_:function(e){return Cu(e,.54,.46)}});const Du=Is({hannWindow_:function(e){return Cu(e,.5,.5)}});function Eu(e,t,n){if(g(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=xs(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Ds(e,t,r,n)}const Nu=Is({frame_:function(e,t,n,r=!1,s=0){let i=0;const a=[];for(;i+t<=e.size;)a.push(Uo(e,i,t)),i+=n;if(r)for(;i<e.size;){const r=i+t-e.size,o=Da([Uo(e,i,t-r),Ia([r],s)]);a.push(o),i+=n}return 0===a.length?Eu([],[0,t]):ma(Da(a),[a.length,t])}});Is({stft_:function(e,t,n,r,s=Du){var i;null==r&&(i=t,r=Math.floor(Math.pow(2,Math.ceil(Math.log(i)/Math.log(2)))));const a=Nu(e,t,n),o=to(a,s(t));return cu(o,r)}});const Su=Is({cropAndResize_:function(e,t,n,r,s="bilinear",i=0){const a=vs(e,"image","cropAndResize"),o=vs(t,"boxes","cropAndResize","float32"),u=vs(n,"boxInd","cropAndResize","int32"),l=o.shape[0];f(4===a.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`)),f(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${o.shape}.`)),f(1===u.rank&&u.shape[0]===l,(()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${o.shape}.`)),f(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),f(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),f("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const c={image:a,boxes:o,boxInd:u},h={method:s,extrapolationValue:i,cropSize:r};return ps.runKernel(Le,c,h)}}),$u=Is({flipLeftRight_:function(e){const t=vs(e,"image","flipLeftRight","float32");f(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return ps.runKernel(it,n,{})}}),Tu=Is({grayscaleToRGB_:function(e){const t=vs(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];f(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),f(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const s=new Array(t.rank);return s.fill(1,0,n),s[n]=3,Ha(t,s)}}),Au=Is({rotateWithOffset_:function(e,t,n=0,r=.5){const s=vs(e,"image","rotateWithOffset","float32");f(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const i={image:s},a={radians:t,fillValue:n,center:r};return ps.runKernel(rr,i,a)}});function Fu(e,t,n,r,s,i){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==i&&(i=0);const a=e.shape[0];return n=Math.min(n,a),f(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),f(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),f(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),f(1===t.rank,(()=>"scores must be a 1D tensor")),f(t.shape[0]===a,(()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${t.shape[0]}`)),f(0<=i&&i<=1,(()=>`softNmsSigma must be in [0, 1], but was '${i}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:i}}const Ru=Is({nonMaxSuppression_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const i=vs(e,"boxes","nonMaxSuppression","float32"),a=vs(t,"scores","nonMaxSuppression","float32"),o=Fu(i,a,n,r,s),u={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:s=o.scoreThreshold};return ps.runKernel(jt,{boxes:i,scores:a},u)}});function _u(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,s=e.length,i=0,a=!1;for(;r<s;){i=r+(s-r>>>1);const o=n(t,e[i]);o>0?r=i+1:(s=i,a=!o)}return a?r:-r-1}(e,t,n||Ou)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function Ou(e,t){return e>t?1:e<t?-1:0}function Mu(e,t,n,r,s){return zu(e,t,n,r,s,0)}function Bu(e,t,n,r,s,i){return zu(e,t,n,r,s,0,!1,i,!0)}function Lu(e,t,n,r,s,i){return zu(e,t,n,r,s,i,!0)}function zu(e,t,n,r,s,i,a=!1,o=!1,u=!1){const l=[];for(let e=0;e<t.length;e++)t[e]>s&&l.push({score:t[e],boxIndex:e,suppressBeginIndex:0});l.sort(Uu);const c=i>0?-.5/i:0,h=[],d=[];for(;h.length<n&&l.length>0;){const t=l.pop(),{score:n,boxIndex:i,suppressBeginIndex:a}=t;if(n<s)break;let o=!1;for(let n=h.length-1;n>=a;--n){const a=Pu(e,i,h[n]);if(a>=r){o=!0;break}if(t.score=t.score*Wu(r,c,a),t.score<=s)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(i),d.push(t.score)):t.score>s&&_u(l,t,Uu))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return a&&(m.selectedScores=d),u&&(m.validOutputs=p),m}function Pu(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),i=Math.min(r[0],r[2]),a=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(o-i)*(u-a),f=(h-l)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(i,l),g=Math.max(a,c),b=Math.min(o,h),x=Math.min(u,d),y=Math.max(b-m,0)*Math.max(x-g,0);return y/(p+f-y)}function Wu(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function Uu(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const Vu=Is({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,i=0){const a=vs(e,"boxes","nonMaxSuppression"),o=vs(t,"scores","nonMaxSuppression"),u=Fu(a,o,n,r,s,i),l={boxes:a,scores:o},c={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:s=u.scoreThreshold,softNmsSigma:i=u.softNmsSigma},h=ps.runKernel(Kt,l,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),Gu=Is({nonMaxSuppressionPadded_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,i=!1){const a=vs(e,"boxes","nonMaxSuppression"),o=vs(t,"scores","nonMaxSuppression"),u=Fu(a,o,n,r,s,null),l={boxes:a,scores:o},c={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:i},h=ps.runKernel(qt,l,c);return{selectedIndices:h[0],validOutputs:h[1]}}}),Hu=Is({resizeBilinear_:function(e,t,n=!1,r=!1){const s=vs(e,"images","resizeBilinear");f(3===s.rank||4===s.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`)),f(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),f(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let i=s,a=!1;3===s.rank&&(a=!0,i=ma(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:i},u={alignCorners:n,halfPixelCenters:r,size:t},l=ps.runKernel(pn,o,u);return a?ma(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),ju=Is({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const s=vs(e,"images","resizeNearestNeighbor");f(3===s.rank||4===s.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`)),f(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),f("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),f(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let i=s,a=!1;3===s.rank&&(a=!0,i=ma(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:i},u={alignCorners:n,halfPixelCenters:r,size:t},l=ps.runKernel(hn,o,u);return a?ma(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),qu=Is({bincount_:function(e,t,n){const r=vs(e,"x","bincount"),s=vs(t,"weights","bincount");f("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),f(n>=0,(()=>`size must be non-negative, but got ${n}.`)),f(s.size===r.size||0===s.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`));const i={x:r,weights:s},a={size:n};return ps.runKernel(we,i,a)}}),Ku=Is({lessEqual_:function(e,t){let n=vs(e,"a","lessEqual","string_or_numeric"),r=vs(t,"b","lessEqual","string_or_numeric");[n,r]=is(n,r),wi(n.shape,r.shape);const s={a:n,b:r};return ps.runKernel(vt,s)}}),Xu=Is({round_:function(e){const t={x:vs(e,"x","round")};return ps.runKernel(bn,t)}});function Yu(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:r};return ps.runKernel(an,{},s)}const Zu=Is({threshold_:function(e,t="binary",n=!1,r=.5){const s=vs(e,"image","threshold"),i=s.shape[0]*s.shape[1];let a,o,u,l,c=to(eu([r]),255);if(f(3===s.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`)),f(3===s.shape[2]||1===s.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`)),f("int32"===s.dtype||"float32"===s.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`)),f("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===s.shape[2]){[a,o,u]=Xo(s,[1,1,1],-1);const e=to(a,.2989),t=to(o,.587),n=to(u,.114);l=Zi(Zi(e,t),n)}else l=e;"otsu"===t&&(c=function(e,t){let n,r,s,i,a,o,u=eu([-1]),l=eu([0]),c=eu([0]);for(let h=0;h<e.size-1;h++){n=Uo(e,0,h+1),r=Uo(e,h+1),a=Pa(ro(n),t),o=Pa(ro(r),t);const d=ro(to(n,Yu(0,n.size)));s=Pa(d,ro(n));const p=Ia(r.shape,n.size),f=Zi(Yu(0,r.size),p),m=to(r,f);i=Pa(ro(m),ro(r));const g=no(s,i),b=no(s,i),x=to(a,o);c=to(to(x,g),b);const y=Xa(c,l);l=ru(y,c,l),u=ru(y,eu([h]),u)}return u}(qu(ui(Xu(l),"int32"),Es([]),256),i));const h=n?Ku(l,c):Xa(l,c);return ui(to(h,255),"int32")}}),Ju=Is({transform_:function(e,t,n="nearest",r="constant",s=0,i){const a=vs(e,"image","transform","float32"),o=vs(t,"transforms","transform","float32");f(4===a.rank,(()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`)),f(2===o.rank&&(o.shape[0]===a.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),f(null==i||2===i.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`));const u={image:a,transforms:o},l={interpolation:n,fillMode:r,fillValue:s,outputShape:i};return ps.runKernel(Yn,u,l)}}),Qu=Is({bandPart_:function(e,t,n){f(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),f(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=vs(e,"a","bandPart");f(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[i,a]=r.shape.slice(-2);if(!(t<=i))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${i}).`);if(!(n<=a))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${a}).`);t<0&&(t=i),n<0&&(n=a);const o=ma(Yu(0,i,1,"int32"),[-1,1]),u=Yu(0,a,1,"int32"),l=no(o,u),c=io(Ku(l,Ki(+t,"int32")),Ya(l,Ki(-n,"int32"))),h=No([i,a],r.dtype);return ma(Jo(nu(ma(r,[-1,i,a])).map((e=>ru(c,e,h)))),s)}}),el=Is({pow_:function(e,t){let n=vs(e,"base","pow"),r=vs(t,"exp","pow");[n,r]=is(n,r);const s={a:n,b:r};return ps.runKernel(Qt,s)}});function tl(e,t,n=null){if(0===e.rank)return Yi(e);if(1!==e.rank&&null===n)return tl(ma(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return ro(Yi(e),n);if(t===1/0)return eo(Yi(e),n);if(t===-1/0)return ho(Yi(e),n);if("euclidean"===t||2===t)return Yo(ro(el(Yi(e),Ki(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return eo(ro(Yi(e),n[0]),n[1]-1);if(t===1/0)return eo(ro(Yi(e),n[1]),n[0]);if(t===-1/0)return ho(ro(Yi(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Yo(ro(ko(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const nl=Is({norm_:function(e,t="euclidean",n=null,r=!1){const s=tl(e=vs(e,"x","norm"),t,n);let i=s.shape;if(r){const t=D(n,e.shape);i=bo(s.shape,t)}return ma(s,i)}}),rl=Is({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,f(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)f(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Xo(e,e.shape[0],0).map((e=>Zo(e,[0])));f(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(ps.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=to(ro(to(n[r],e)),n[r]);e=no(e,t)}return Pa(e,nl(e,"euclidean"))})));return t?Jo(n,0):n}});function sl(e,t=!1){return ps.tidy((()=>{f(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let s=ja(n),i=li(e);const a=Eu([[1]],[1,1]);let o=li(a);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=i,u=o,l=s;[o,i,s]=ps.tidy((()=>{const t=Uo(i,[e,e],[n-e,1]),u=nl(t),l=Uo(i,[e,e],[1,1]),c=ru(Xa(l,0),Eu([[-1]]),Eu([[1]])),h=no(l,to(c,u)),d=Pa(t,h);o=1===d.shape[0]?li(a):Da([a,Uo(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=Co(Pa(ao(c,h),u)),f=Uo(i,[e,0],[n-e,r]),m=to(p,o),g=ou(o);if(0===e)i=no(f,ao(m,ao(g,f)));else{const t=no(f,ao(m,ao(g,f)));i=Da([Uo(i,[0,0],[e,r]),t],0)}const b=ou(m),x=Uo(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=no(x,ao(ao(x,o),b));else{const t=no(x,ao(ao(x,o),b));s=Da([Uo(s,[0,0],[n,e]),t],1)}return[o,i,s]})),Gi([t,u,l])}return!t&&n>r&&(s=Uo(s,[0,0],[n,r]),i=Uo(i,[0,0],[r,r])),[s,i]}))}const il=Is({qr_:function(e,t=!1){if(f(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return sl(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=nu(ma(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],i=[];return r.forEach((e=>{const[n,r]=sl(e,t);s.push(n),i.push(r)})),[ma(Jo(s,0),e.shape),ma(Jo(i,0),e.shape)]}}});var al;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(al||(al={}));const ol=Is({computeWeightedLoss_:function(e,t,n=al.SUM_BY_NONZERO_WEIGHTS){const r=vs(e,"losses","computeWeightedLoss");let s=null;null!=t&&(s=vs(t,"weights","computeWeightedLoss"));const i=null==s?r:to(r,s);if(n===al.NONE)return i;if(n===al.SUM)return ro(i);if(n===al.MEAN){if(null==s)return co(i);{const e=r.size/s.size,t=Pa(ro(i),ro(s));return e>1?Pa(t,Ki(e)):t}}if(n===al.SUM_BY_NONZERO_WEIGHTS){if(null==s)return Pa(ro(i),Ki(r.size));{const e=to(s,So(r.shape)),t=ui(ro(Do(e,Ki(0))),"float32");return Pa(ro(i),t)}}throw Error(`Unknown reduction: ${n}`)}});Is({absoluteDifference_:function(e,t,n,r=al.SUM_BY_NONZERO_WEIGHTS){const s=vs(e,"labels","absoluteDifference"),i=vs(t,"predictions","absoluteDifference");let a=null;null!=n&&(a=vs(n,"weights","absoluteDifference")),m(s.shape,i.shape,"Error in absoluteDifference: ");const o=Yi(no(s,i));return ol(o,a,r)}}),Is({cosineDistance_:function(e,t,n,r,s=al.SUM_BY_NONZERO_WEIGHTS){const i=vs(e,"labels","cosineDistance"),a=vs(t,"predictions","cosineDistance");let o=null;null!=r&&(o=vs(r,"weights","cosineDistance")),m(i.shape,a.shape,"Error in cosineDistance: ");const u=Ki(1),l=no(u,ro(to(i,a),n,!0));return ol(l,o,s)}}),Is({hingeLoss_:function(e,t,n,r=al.SUM_BY_NONZERO_WEIGHTS){let s=vs(e,"labels","hingeLoss");const i=vs(t,"predictions","hingeLoss");let a=null;null!=n&&(a=vs(n,"weights","hingeLoss")),m(s.shape,i.shape,"Error in hingeLoss: ");const o=Ki(1);s=no(to(Ki(2),s),o);const u=Bo(no(o,to(s,i)));return ol(u,a,r)}}),Is({huberLoss_:function(e,t,n,r=1,s=al.SUM_BY_NONZERO_WEIGHTS){const i=vs(e,"labels","huberLoss"),a=vs(t,"predictions","huberLoss");let o=null;null!=n&&(o=vs(n,"weights","huberLoss")),m(i.shape,a.shape,"Error in huberLoss: ");const u=Ki(r),l=Yi(no(a,i)),c=po(l,u),h=no(l,c),d=Zi(to(Ki(.5),ko(c)),to(u,h));return ol(d,o,s)}}),Is({logLoss_:function(e,t,n,r=1e-7,s=al.SUM_BY_NONZERO_WEIGHTS){const i=vs(e,"labels","logLoss"),a=vs(t,"predictions","logLoss");let o=null;null!=n&&(o=vs(n,"weights","logLoss")),m(i.shape,a.shape,"Error in logLoss: ");const u=Ki(1),l=Ki(r),c=Co(to(i,Ja(Zi(a,l)))),h=to(no(u,i),Ja(Zi(no(u,a),l))),d=no(c,h);return ol(d,o,s)}});const ul=Is({squaredDifference_:function(e,t){let n=vs(e,"a","squaredDifference"),r=vs(t,"b","squaredDifference");[n,r]=is(n,r),wi(n.shape,r.shape);const s={a:n,b:r};return ps.runKernel(zn,s,{})}});Is({meanSquaredError_:function(e,t,n,r=al.SUM_BY_NONZERO_WEIGHTS){const s=vs(e,"labels","meanSquaredError"),i=vs(t,"predictions","meanSquaredError");let a=null;null!=n&&(a=vs(n,"weights","meanSquaredError")),m(s.shape,i.shape,"Error in meanSquaredError: ");const o=ul(s,i);return ol(o,a,r)}}),Is({sigmoidCrossEntropy_:function(e,t,n,r=0,s=al.SUM_BY_NONZERO_WEIGHTS){let i=vs(e,"multiClassLabels","sigmoidCrossEntropy");const a=vs(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=vs(n,"weights","sigmoidCrossEntropy")),m(i.shape,a.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=Ki(r),t=Ki(1),n=Ki(.5);i=Zi(to(i,no(t,e)),to(n,e))}const u=function(e,t){const n=vs(e,"labels","sigmoidCrossEntropyWithLogits"),r=vs(t,"logits","sigmoidCrossEntropyWithLogits");m(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=Bo(r),i=to(r,n),a=Qa(Va(Co(Yi(r))));return Zi(no(s,i),a)}(i,a);return ol(u,o,s)}});const ll=Is({logSumExp_:function(e,t=null,n=!1){const r=vs(e,"x","logSumExp"),s=D(t,r.shape),i=eo(r,s,!0),a=no(r,i),o=Va(a),u=ro(o,s),l=Ja(u),c=Zi(ma(i,l.shape),l);if(n){const e=bo(c.shape,s);return ma(c,e)}return c}});Is({softmaxCrossEntropy_:function(e,t,n,r=0,s=al.SUM_BY_NONZERO_WEIGHTS){let i=vs(e,"onehotLabels","softmaxCrossEntropy");const a=vs(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=vs(n,"weights","softmaxCrossEntropy")),m(i.shape,a.shape,"Error in softmaxCrossEntropy: "),r>0){const e=Ki(r),t=Ki(1),n=Ki(i.shape[1]);i=Zi(to(i,no(t,e)),Pa(e,n))}const u=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=qi(((e,t,r)=>{const s=ll(t,[n],!0),i=no(ui(t,"float32"),s);r([e,i]);const a=Co(to(i,e));return{value:ro(a,[n]),gradFunc:(e,t)=>{const[r,s]=t,i=bo(e.shape,[n]);return[to(ma(e,i),no(ui(r,"float32"),Va(s))),to(ma(e,i),no(Va(s),ui(r,"float32")))]}}}));return r(e,t)}(i,a);return ol(u,o,s)}}),Is({sparseFillEmptyRows_:function(e,t,n,r){const s=vs(e,"indices","sparseFillEmptyRows","int32"),i=vs(t,"values","sparseFillEmptyRows"),a=vs(n,"denseShape","sparseFillEmptyRows","int32"),o=vs(r,"defaultValue","sparseFillEmptyRows",i.dtype);if(2!==s.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==i.rank)throw new Error(`Values should be Tensor1D but received shape ${i.shape}`);if(1!==a.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${a.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const u={indices:s,values:i,denseShape:a,defaultValue:o},l=ps.runKernel(_n,u);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}}),Is({sparseReshape_:function(e,t,n){const r=vs(e,"inputIndices","sparseReshape","int32"),s=vs(t,"inputShape","sparseReshape","int32"),i=vs(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==s.rank)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw new Error(`New shape should be Tensor1D but received shape ${i.shape}`);const a={inputIndices:r,inputShape:s,newShape:i},o=ps.runKernel(On,a);return{outputIndices:o[0],outputShape:o[1]}}}),Is({sparseSegmentMean_:function(e,t,n){const r=vs(e,"data","sparseSegmentMean"),s=vs(t,"indices","sparseSegmentMean","int32"),i=vs(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${s.shape}`);if(1!==i.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${i.shape}`);const a={data:r,indices:s,segmentIds:i};return ps.runKernel(Mn,a)}}),Is({sparseSegmentSum_:function(e,t,n){const r=vs(e,"data","sparseSegmentSum"),s=vs(t,"indices","sparseSegmentSum","int32"),i=vs(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${s.shape}`);if(1!==i.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${i.shape}`);const a={data:r,indices:s,segmentIds:i};return ps.runKernel(Bn,a)}}),Is({stringNGrams_:function(e,t,n,r,s,i,a,o){const u=vs(e,"data","stringNGrams","string");if("string"!==u.dtype)throw new Error("Data must be of datatype string");if(1!==u.shape.length)throw new Error(`Data must be a vector, saw: ${u.shape}`);const l=vs(t,"dataSplits","stringNGrams");if("int32"!==l.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:s,rightPad:i,padWidth:a,preserveShortSequences:o},h={data:u,dataSplits:l},d=ps.runKernel(Un,h,c);return{nGrams:d[0],nGramsSplits:d[1]}}}),Is({stringSplit_:function(e,t,n=!0){const r=vs(e,"input","stringSplit","string"),s=vs(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==s.rank)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);const i={skipEmpty:n},a={input:r,delimiter:s},o=ps.runKernel(Vn,a,i);return{indices:o[0],values:o[1],shape:o[2]}}}),Is({stringToHashBucketFast_:function(e,t){const n=vs(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const s={input:n};return ps.runKernel(Gn,s,r)}});const cl={flipLeftRight:$u,grayscaleToRGB:Tu,resizeNearestNeighbor:ju,resizeBilinear:Hu,rotateWithOffset:Au,cropAndResize:Su,nonMaxSuppression:Ru,nonMaxSuppressionAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const i=vs(e,"boxes","nonMaxSuppressionAsync"),a=vs(t,"scores","nonMaxSuppressionAsync"),o=Fu(i,a,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const u=await Promise.all([i.data(),a.data()]),l=u[0],c=u[1],{selectedIndices:h}=Mu(l,c,n,r,s);return i!==e&&i.dispose(),a!==t&&a.dispose(),eu(h,"int32")},nonMaxSuppressionWithScore:Vu,nonMaxSuppressionWithScoreAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,i=0){const a=vs(e,"boxes","nonMaxSuppressionAsync"),o=vs(t,"scores","nonMaxSuppressionAsync"),u=Fu(a,o,n,r,s,i);n=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,i=u.softNmsSigma;const l=await Promise.all([a.data(),o.data()]),c=l[0],h=l[1],{selectedIndices:d,selectedScores:p}=Lu(c,h,n,r,s,i);return a!==e&&a.dispose(),o!==t&&o.dispose(),{selectedIndices:eu(d,"int32"),selectedScores:eu(p)}},nonMaxSuppressionPadded:Gu,nonMaxSuppressionPaddedAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,i=!1){const a=vs(e,"boxes","nonMaxSuppressionAsync"),o=vs(t,"scores","nonMaxSuppressionAsync"),u=Fu(a,o,n,r,s,null),l=u.maxOutputSize,c=u.iouThreshold,h=u.scoreThreshold,[d,p]=await Promise.all([a.data(),o.data()]),{selectedIndices:f,validOutputs:m}=Bu(d,p,l,c,h,i);return a!==e&&a.dispose(),o!==t&&o.dispose(),{selectedIndices:eu(f,"int32"),validOutputs:Ki(m,"int32")}},threshold:Zu,transform:Ju},hl={bandPart:Qu,gramSchmidt:rl,qr:il};class dl extends Xi{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=ps.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=ps.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:Vi((()=>su(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:Vi((()=>su(r).variable(!1)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const i=this.accumulatedGrads[n].variable,a=this.accumulatedUpdates[n].variable;Vi((()=>{const e=Zi(to(i,this.rho),to(ko(s),1-this.rho)),t=to(Pa(Yo(Zi(a,this.epsilon)),Yo(Zi(i,this.epsilon))),s),n=Zi(to(a,this.rho),to(ko(t),1-this.rho));i.assign(e),a.assign(n);const o=Zi(to(t,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Gi(this.accumulatedGrads.map((e=>e.variable))),Gi(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}dl.className="Adadelta",Pi(dl);class pl extends Xi{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=ps.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:Vi((()=>Ia(r.shape,this.initialAccumulatorValue).variable(e)))}}const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const i=this.accumulatedGrads[n].variable;Vi((()=>{const e=Zi(i,ko(s));i.assign(e);const t=Zi(to(Pa(s,Yo(Zi(e,ps.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Gi(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}pl.className="Adagrad",Pi(pl);class fl extends Xi{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Vi((()=>{this.accBeta1=Ki(t).variable(),this.accBeta2=Ki(n).variable()})),null==r&&(this.epsilon=ps.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Vi((()=>{const n=no(1,this.accBeta1),r=no(1,this.accBeta2);t.forEach(((t,s)=>{const i=ps.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:Vi((()=>su(i).variable(!1)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${t}/v`,variable:Vi((()=>su(i).variable(!1)))});const a=Array.isArray(e)?e[s].tensor:e[t];if(null==a)return;const o=this.accumulatedFirstMoment[s].variable,u=this.accumulatedSecondMoment[s].variable,l=Zi(to(o,this.beta1),to(a,1-this.beta1)),c=Zi(to(u,this.beta2),to(ko(a),1-this.beta2)),h=Pa(l,n),d=Pa(c,r);o.assign(l),u.assign(c);const p=Zi(to(Pa(h,Zi(Yo(d),this.epsilon)),-this.learningRate),i);i.assign(p)})),this.accBeta1.assign(to(this.accBeta1,this.beta1)),this.accBeta2.assign(to(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Gi(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&Gi(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Vi((()=>{this.accBeta1.assign(el(this.beta1,this.iterations_+1)),this.accBeta2.assign(el(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}fl.className="Adam",Pi(fl);class ml extends Xi{constructor(e,t,n,r=null,s=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Vi((()=>{this.iteration=Ki(0).variable(),this.accBeta1=Ki(t).variable()})),null==r&&(this.epsilon=ps.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Vi((()=>{const n=no(1,this.accBeta1),r=Pa(-this.learningRate,Zi(to(this.iteration,this.decay),1));t.forEach(((t,s)=>{const i=ps.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:su(i).variable(!1)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${t}/v`,variable:su(i).variable(!1)});const a=Array.isArray(e)?e[s].tensor:e[t];if(null==a)return;const o=this.accumulatedFirstMoment[s].variable,u=this.accumulatedWeightedInfNorm[s].variable,l=Zi(to(o,this.beta1),to(a,1-this.beta1)),c=to(u,this.beta2),h=Yi(a),d=lo(c,h);o.assign(l),u.assign(d);const p=Zi(to(Pa(r,n),Pa(l,Zi(d,this.epsilon))),i);i.assign(p)})),this.iteration.assign(Zi(this.iteration,1)),this.accBeta1.assign(to(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Gi(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&Gi(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}ml.className="Adamax",Pi(ml);class gl extends Xi{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=ps.registeredVariables[t];Vi((()=>{const e=Zi(to(this.c,r),s);s.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Hi(Ki(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}gl.className="SGD",Pi(gl);class bl extends gl{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Ki(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=ps.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:Vi((()=>su(r).variable(e)))}}const s=this.accumulations[n].variable,i=Array.isArray(e)?e[n].tensor:e[t];null!=i&&Vi((()=>{let e;const t=Zi(to(this.m,s),i);e=this.useNesterov?Zi(to(this.c,Zi(i,to(t,this.m))),r):Zi(to(this.c,t),r),s.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Gi(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}bl.className="Momentum",Pi(bl);class xl extends Xi{constructor(e,t=.9,n=0,r=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=ps.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=ps.registeredVariables[t],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:Vi((()=>su(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:Vi((()=>su(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:Vi((()=>su(r).variable(s)))});const i=Array.isArray(e)?e[n].tensor:e[t];if(null==i)return;const a=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Vi((()=>{const e=Zi(to(a,this.decay),to(ko(i),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,s=Zi(to(t,this.decay),to(i,1-this.decay)),u=Pa(to(i,this.learningRate),Yo(no(e,Zi(ko(s),this.epsilon)))),l=Zi(to(o,this.momentum),u);a.assign(e),t.assign(s),o.assign(l);const c=no(r,l);r.assign(c)}else{const e=Zi(to(a,this.decay),to(ko(i),1-this.decay)),t=Zi(to(o,this.momentum),Pa(to(i,this.learningRate),Yo(Zi(e,this.epsilon))));a.assign(e),o.assign(t);const n=no(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Gi(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Gi(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&Gi(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}xl.className="RMSProp",Pi(xl);class yl{static sgd(e){return new gl(e)}static momentum(e,t,n=!1){return new bl(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,s=!1){return new xl(e,t,n,r,s)}static adam(e=.001,t=.9,n=.999,r=null){return new fl(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new dl(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,s=0){return new ml(e,t,n,r,s)}static adagrad(e,t=.1){return new pl(e,t)}}const wl={sgd:yl.sgd,momentum:yl.momentum,adadelta:yl.adadelta,adagrad:yl.adagrad,rmsprop:yl.rmsprop,adamax:yl.adamax,adam:yl.adam},vl="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function kl(){return new Promise((e=>vl((()=>e()))))}function Il(e,t){const n=e[0].length;e.forEach(((e,t)=>{f(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),f(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,s)=>{for(let i=0;i<n;i++)f(i===t||e[i]===r[i],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function Cl(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var Dl;function El(e,t,n){let r=new Array;if(null==n&&null==t)return r;if(null==t)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(null==n)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let s=1;s<n.length;++s){const i=n[s],a=r[r.length-n.length+s],o=r[a];if(i>=0)if(o>=0){if(o!==i)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${s+e}] = ${i} but shape[${s+e}] = ${o}`)}else r[a]=i}return r}function Nl(e){const t={FIRST_DIM_SIZE:Dl.FIRST_DIM_SIZE,VALUE_ROWIDS:Dl.VALUE_ROWIDS,ROW_LENGTHS:Dl.ROW_LENGTHS,ROW_SPLITS:Dl.ROW_SPLITS,ROW_LIMITS:Dl.ROW_LIMITS,ROW_STARTS:Dl.ROW_STARTS},n=[];for(const r of e){if(!(r in t))break;n.push(t[r])}return n}function Sl(e){return 0===e.length?0:e[0]===Dl.FIRST_DIM_SIZE?e.length-1:e.length}function $l(e,t){if(null==e||null==t)return;const n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let s=0;s<Math.min(n,r-1);++s){const n=e[s],r=t[s+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${s-e.length}] = ${n} but ragged tensor input.flatValues.shape[${s-e.length}] = ${r}`)}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(Dl||(Dl={}));const Tl=30;function Al(e){return e<=Tl?e:M(e,Math.floor(Math.sqrt(e)))}function Fl(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Rl(e,t,n,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)s=s.concat([e[r+1]/t[r],t[r]]);s=s.concat(e.slice(n+1))}return s}function _l(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function Ol(e,t,n,r=!0){const s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?s.push(t[n-1]*e[n]):s.push(e[n]/t[n-1]):s.push(e[n]);return s}function Ml(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Bl(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}function Ll(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===x(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,i=s[s.length-1];let a=1;for(let e=0;e<s.length-1;++e)a*=s[e];const o=e.shape,u=s.slice();u.pop();let l=1;for(let e=i;e<n;++e)l*=o[e],u.push(o[e]);const c=[...B(e.shape).map((e=>e/l)),1].slice(0,i);return[u,a,l,c]}function zl(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(i+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(i+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+e.length-r)throw new Error(i+" update.rank != "+(s+e.length-r));for(let e=0;e<s;++e)if(n.shape[e]!==t.shape[e])throw new Error(i+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-s;++t)if(n.shape[t+s]!==e[t+r])throw new Error(i+` updates.shape[${t+s}] (${n.shape[t+s]}) != shape[${t+s}] (${e[t+s]})`)}function Pl(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}zl(n,t,e)}function Wl(e,t,n){const r=t.shape.length,s=r>1?t.shape[r-1]:1,i=n.length;let a=1;for(let e=s;e<i;++e)a*=n[e];const o=s<1?1:s;return{sliceRank:s,numUpdates:x(t.shape)/o,sliceSize:a,strides:[...B(n.slice(0,s)),1],outputSize:x(n)}}const Ul=1.7580993408473768,Vl=1.0507009873554805,Gl=.3275911,Hl=.254829592,jl=-.284496736,ql=1.421413741,Kl=-1.453152027,Xl=1.061405429;function Yl(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Zl(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function Jl(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Ql(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function ec(e,t){return{real:e[2*t],imag:e[2*t+1]}}function tc(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function nc(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const i=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(i),r[s]=Math.sin(i)}return{real:n,imag:r}}function rc(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const sc=/->/g;function ic(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(sc,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,s]=e.split("->");f(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const i=r.split(","),a=i.length;if(t!==a)throw new Error(`Expected ${a} input tensors, received ${t}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<s.length;++e){const t=s[e];if(!i.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===o.indexOf(t)&&","!==t&&o.push(t)}const u=new Array(i.length);for(let e=0;e<a;++e){if(new Set(i[e].split("")).size!==i[e].length)throw new Error(`Found duplicate axes in input component ${i[e]}. Support for duplicate axes in input is not implemented yet.`);u[e]=[];for(let t=0;t<i[e].length;++t)u[e].push(o.indexOf(i[e][t]))}const l=o.length,c=[];for(let e=s.length;e<l;++e)c.push(e);return{allDims:o,summedDims:c,idDims:u}}function ac(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function oc(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const s=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=s[n]:f(r[t[e][n]]===s[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(s)}, but got dimension ${s[n]}`))}}function uc(e,t){const n=e,r=[];let s=0;0===e.length&&n.push(-1),s=e.length+1;for(let e=0;e<s;++e)r.push([]);const i=[];for(let e=0;e<n.length;++e){const s=cc(t,n[e]);for(const t of s)-1===i.indexOf(t)&&(r[e].push(t),i.push(t))}return{path:n,steps:r}}function lc(e){return e.every(((e,t)=>e===t))}function cc(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function hc(e,t,n=0){let r=[];if("number"==typeof t)f(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const s=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);f(s<=1,(()=>"There should be only one negative value in split array."));const i=t.indexOf(-1);if(-1!==i){const r=t.reduce(((e,t)=>t>0?e+t:e));t[i]=e.shape[n]-r}f(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function dc(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function pc(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function fc(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function mc(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function gc(e,t){return`size ${e} must be non-negative, not ${t}`}function bc(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function xc(e,t){return`Input to reshape is a SparseTensor with ${x(e)}\n  dense values, but the requested shape requires a multiple of ${x(t)}. inputShape=${e} outputShape= ${t}`}function yc(e,t){return`Input to reshape is a tensor with ${x(e)} dense values, but the requested shape has ${x(t)}. inputShape=${e} outputShape=${t}`}function wc(){return"segment ids must be >= 0"}function vc(){return"segment ids are not increasing"}function kc(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Ic(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function Cc(e,t){let n,r=!1;for(e<=Tl?(n=e,r=!0):n=M(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=M(e,n+1);return n}function Dc(e,t,n){const r=[],s=e.length;for(let i=0;i<s;i++)i!==t?r.push(e[i]):r.push(n);return r}function Ec(e,t,n,r){const s=t.shape.length,i=e.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>i)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${i}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const a=e.shape[n],o=[];let u=1,l=1,c=1;for(let t=0;t<r;++t)o.push(e.shape[t]),u*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),l*=e.shape[t];for(let e=r;e<s;e++)o.push(t.shape[e]);for(let t=n+1;t<i;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:a,outputShape:o}}function Nc(e){try{return e.map((e=>Or(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Sc(e){return e.map((e=>_r(e)))}function $c(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=oi(e,"int32"),s=oi([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const i=r.indexToLoc(n[t]),a=t*e.length;s.values.set(i,a)}return s.toTensor()}const Tc={kernelName:ee,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>to(e,mu(ui(n,"float32"),-1))}}},Ac={kernelName:te,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=ko(ui(n,"float32")),r=Yo(no(Ki(1),t));return Co(Pa(e,r))}}}},Fc={kernelName:ne,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Yo(no(ko(ui(n,"float32")),1));return Pa(e,t)}}}},Rc={kernelName:re,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=wi(n.shape,r.shape);return{a:()=>{let t=e;const r=yi(n.shape,s);return r.length>0&&(t=ro(t,r)),ma(t,n.shape)},b:()=>{let t=e;const n=yi(r.shape,s);return n.length>0&&(t=ro(t,n)),ma(t,r.shape)}}}},_c={kernelName:se,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},Oc={kernelName:oe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>su(n)}}},Mc={kernelName:ue,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>su(n)}}},Bc={kernelName:le,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Pa(e,Yo(no(Ki(1),ko(ui(n,"float32")))))}}},Lc={kernelName:ce,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Yo(Zi(Ki(1),ko(ui(n,"float32"))));return Pa(e,t)}}}},zc={kernelName:pe,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=wi(n.shape,r.shape);return{a:()=>{const t=Zi(ko(n),ko(r));let i=to(e,Pa(r,t));const a=yi(n.shape,s);return a.length>0&&(i=ro(i,a)),ma(i,n.shape)},b:()=>{const t=Zi(ko(n),ko(r));let i=Co(to(e,Pa(n,t)));const a=yi(r.shape,s);return a.length>0&&(i=ro(i,a)),ma(i,r.shape)}}}},Pc={kernelName:he,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Pa(e,Zi(ko(ui(n,"float32")),1))}}},Wc={kernelName:de,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Pa(e,no(Ki(1),ko(ui(n,"float32"))))}}},Uc=Is({avgPool3dGrad_:function(e,t,n,r,s,i){const a=vs(e,"dy","avgPool3dGrad"),o=vs(t,"input","avgPool3dGrad");let u=a,l=o,c=!1;4===o.rank&&(c=!0,u=ma(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),l=ma(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),f(5===u.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`)),f(5===l.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`)),fa("avgPool3dGrad",s,i);const h={dy:u,input:l},d={filterSize:n,strides:r,pad:s,dimRoundingMode:i},p=ps.runKernel(be,h,d);return c?ma(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),Vc={kernelName:ge,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:i,pad:a,dimRoundingMode:o}=n;return{x:()=>Uc(e,r,s,i,a,o)}}},Gc=Is({avgPoolGrad_:function(e,t,n,r,s){const i=vs(e,"dy","avgPoolGrad"),a=vs(t,"input","avgPoolGrad");f(a.rank===i.rank,(()=>`Rank of input (${a.rank}) does not match rank of dy (${i.rank})`));let o=a,u=i,l=!1;3===a.rank&&(l=!0,o=ma(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=ma(i,[1,i.shape[0],i.shape[1],i.shape[2]])),f(4===u.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`)),f(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:u,input:o},h={filterSize:n,strides:r,pad:s},d=ps.runKernel(me,c,h);return l?ma(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Hc={kernelName:fe,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:i,pad:a}=n;return{x:()=>Gc(e,r,s,i,a)}}},jc={kernelName:xe,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,s]=t,{transposeA:i,transposeB:a}=n;return i||a?!i&&a?{a:()=>ao(e,s,!1,!1),b:()=>ao(e,r,!0,!1)}:i&&!a?{a:()=>ao(s,e,!1,!0),b:()=>ao(r,e,!1,!1)}:{a:()=>ao(s,e,!0,!0),b:()=>ao(e,r,!0,!0)}:{a:()=>ao(e,s,!1,!0),b:()=>ao(r,e,!0,!1)}}},qc=Is({spaceToBatchND_:function(e,t,n){const r=vs(e,"x","spaceToBatchND");f(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),f(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),f(r.shape.reduce(((e,r,s)=>s>0&&s<=t.length?e&&(r+n[s-1][0]+n[s-1][1])%t[s-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const s={x:r},i={blockShape:t,paddings:n};return ps.runKernel(An,s,i)}}),Kc={kernelName:ye,gradFunc:(e,t,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>qc(e,r,s)}}},Xc={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const r=n,s=r.inputShape,i=r.shape,a=Array.from(i);for(let e=s.length-1;e>=0;e--)if(s[e]===i[e])a[e]=1;else if(1!==s[e])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${i}].`);const o=[];for(let e=0;e<a.length;e++)a[e]>1&&o.push(e);return{x:()=>ro(e,o,!0)}}},Yc={kernelName:ke,gradFunc:e=>({x:()=>e.clone()})},Zc={kernelName:Ie,gradFunc:e=>({x:()=>su(e)})},Jc={kernelName:Ce,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:s,clipValueMax:i}=n;return{x:()=>ru(io(Ya(r,s),Ku(r,i)),e,su(e))}}},Qc={kernelName:Ee,inputsToSave:["x"],gradFunc:Tc.gradFunc},eh={kernelName:Ne,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:s}=n,i=D(s,t[0].shape)[0],a=r.map((e=>e[i]));return Xo(e,a,i).map((e=>()=>e))}},th={kernelName:Se,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{dilations:i,strides:a,pad:o,dataFormat:u}=n;return f(ha(i),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`)),{x:()=>Fa(r.shape,e,s,a,o,u),filter:()=>pu(r,e,s.shape,a,o,u)}}},nh={kernelName:Te,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{strides:i,pad:a,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>Ta(e,s,i,a,o,1,u),filter:()=>pu(e,r,s.shape,i,a,o,u)}}},rh=Is({conv3DBackpropFilter_:function(e,t,n,r,s){let i=e;4===e.rank&&(i=ma(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let a=t;4===a.rank&&(a=ma(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),f(5===i.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`)),f(5===a.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`)),f(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),f(i.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${n[3]}.`)),f(a.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:i,dy:a},u={strides:r,pad:s,filterShape:n};return ps.runKernel(Fe,o,u)}}),sh={kernelName:Ae,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:i}=n;f(ha(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[a,o]=t;return{x:()=>Oa(a.shape,e,o,s,i),filter:()=>rh(a,e,o.shape,s,i)}}},ih=Is({sin_:function(e){const t={x:vs(e,"x","sin","float32")};return ps.runKernel(Cn,t)}}),ah={kernelName:_e,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>to(Co(ih(ui(n,"float32"))),e)}}},oh=Is({sinh_:function(e){const t={x:vs(e,"x","sinh")};return ps.runKernel(Dn,t)}}),uh={kernelName:Oe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>to(oh(ui(n,"float32")),e)}}},lh=Is({cumsum_:function(e,t=0,n=!1,r=!1){const s={x:vs(e,"x","cumsum")},i={axis:t,exclusive:n,reverse:r};return ps.runKernel(Be,s,i)}}),ch={kernelName:Be,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s,exclusive:i,reverse:a}=n;return{x:()=>{const t=yo([s],r.rank);let n=lh(e,s,i,!a);return null!=t&&(n=ou(n,t)),n}}}},hh={kernelName:We,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:i,dimRoundingMode:a}=n,o=null==r?[1,1]:r;f(ha(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[u,l]=t;return f(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),f(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`)),f(u.shape[3]===l.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),f(da(s,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`)),fa("depthwiseConv2d",i,a),{x:()=>ku(u.shape,e,l,s,i,o,a),filter:()=>vu(u,e,l.shape,s,i,o,a)}}},dh={kernelName:He,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,i={x:r,filter:s,dy:e},a={x:r,filter:s,dy:e};return{x:()=>ps.runKernel(je,i,n),filter:()=>ps.runKernel(qe,a,n)}}},ph={kernelName:Ye,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>ps.runKernel(Ze,r)}}},fh={kernelName:Je,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=to(Va(Co(ko(n))),2/Math.sqrt(Math.PI));return{x:()=>to(e,r)}}},mh={kernelName:et,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>to(e,n)}}},gh={kernelName:tt,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>ma(e,n.shape)}}},bh={kernelName:nt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>to(e,Va(n))}}},xh={kernelName:at,gradFunc:e=>({x:()=>su(e)})},yh={kernelName:ot,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=wi(n.shape,r.shape);return{a:()=>{const t=Pa(e,ui(r,"float32")),i=yi(n.shape,s);return i.length>0?ma(ro(t,i),n.shape):t},b:()=>{let t=to(e,ui(n,"float32"));const i=yi(r.shape,s);i.length>0&&(t=ma(ro(t,i),r.shape));const a=ko(r);return Co(Pa(t,ui(a,"float32")))}}}},wh=Is({rsqrt_:function(e){const t={x:vs(e,"x","rsqrt","float32")};return ps.runKernel(xn,t)}}),vh={kernelName:ut,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[s,i,a,o]=t,u=null==o?Ki(1):o,l=yi(i.shape,s.shape),c=[];if(1===i.rank){for(let e=0;e<s.shape.length-1;++e)c.push(s.shape[e]);c.push(1)}const h=no(s,i),d=to(e,u),p=wh(Zi(a,Ki(r))),f=to(to(to(p,p),p),Ki(-.5));return{x:()=>1===i.rank?ma(to(to(e,Ha(ma(p,[1,1,1,i.shape[0]]),c)),u),s.shape):ma(to(to(e,p),u),s.shape),mean:()=>{let e=to(to(p,Ki(-1)),d);return 1===i.rank&&(e=ro(e,l)),ma(e,i.shape)},variance:()=>{let e=to(to(f,h),d);return 1===i.rank&&(e=ro(e,l)),ma(e,i.shape)},scale:()=>{const t=to(h,p);let n=to(e,t);return 1===i.rank&&(n=ro(n,l)),ma(n,i.shape)},offset:()=>{let t=e;return 1===i.rank&&(t=ro(t,l)),ma(t,i.shape)}}}},kh=Is({unsortedSegmentSum_:function(e,t,n){const r=vs(e,"x","unsortedSegmentSum"),s=vs(t,"segmentIds","unsortedSegmentSum","int32");f(w(n),(()=>"numSegments must be of dtype int"));const i={x:r,segmentIds:s},a={numSegments:n};return ps.runKernel(er,i,a)}}),Ih={kernelName:lt,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,s]=t,{axis:i}=n,a=D(i,r.shape)[0];return{x:()=>{const t=r.shape,n=s.size,o=t.slice(0,a),u=o.length,l=t.slice(i,t.length).slice(1),c=l.length,h=Ch(0,u),d=Ch(u+1,u+1+c),p=Dh([o,[n],l]),f=ma(e,p),m=ma(s,[n]),g=Dh([[u],h,d]),b=ou(f,g);let x=kh(b,m,r.shape[a]);const y=wo(g);return x=ou(x,y),x},indices:()=>s}}};function Ch(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Dh(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const Eh={kernelName:dt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>su(n),b:()=>su(r)}}},Nh={kernelName:pt,gradFunc:e=>({x:()=>ui(e,"float32")})},Sh={kernelName:gt,gradFunc:e=>({x:()=>su(e)})},$h={kernelName:bt,gradFunc:e=>({x:()=>su(e)})},Th={kernelName:xt,gradFunc:e=>({x:()=>su(e)})},Ah={kernelName:yt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:s}=n,i=Xa(r,0);return{x:()=>ru(i,e,to(e,s))}}},Fh={kernelName:Ct,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Pa(e,Zi(n,1))}}},Rh={kernelName:It,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Pa(e,ui(n,"float32"))}}},_h={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;return{logits:()=>{const t=Va(r);return no(e,to(ro(e,s,!0),t))}}}},Oh=Is({localResponseNormalizationBackprop_:function(e,t,n,r=5,s=1,i=1,a=.5){const o={x:e,y:t,dy:n},u={depthRadius:r,bias:s,alpha:i,beta:a};return ps.runKernel($t,o,u)}}),Mh={kernelName:St,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{depthRadius:i,bias:a,alpha:o,beta:u}=n;return{x:()=>Oh(r,s,e,i,a,o,u)}}};function Bh(e,t,n,r){return t.rank<n.rank&&(t=ma(t,bo(t.shape,r))),e.rank<n.rank&&(e=ma(e,bo(e.shape,r))),{x:()=>to(e,ui(Ua(n,t),e.dtype))}}const Lh={kernelName:Tt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:s}=r,i=t[0],a=Bh(e,t[1],i,D(s,i.shape));return{x:()=>a.x()}}},zh=Is({less_:function(e,t){let n=vs(e,"a","less","string_or_numeric"),r=vs(t,"b","less","string_or_numeric");[n,r]=is(n,r),wi(n.shape,r.shape);const s={a:n,b:r};return ps.runKernel(wt,s)}}),Ph={kernelName:At,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>to(e,ui(Ya(n,r),"float32")),b:()=>to(e,ui(zh(n,r),"float32"))}}},Wh=Is({maxPool3dGrad_:function(e,t,n,r,s,i,a){const o=vs(e,"dy","maxPool3dGrad"),u=vs(t,"input","maxPool3dGrad"),l=vs(n,"output","maxPool3dGrad");let c=o,h=u,d=l,p=!1;4===u.rank&&(p=!0,c=ma(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=ma(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),d=ma(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),f(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),f(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),f(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),fa("maxPool3dGrad",i,a);const m={dy:c,input:h,output:d},g={filterSize:r,strides:s,pad:i,dimRoundingMode:a},b=ps.runKernel(Ot,m,g);return p?ma(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}}),Uh={kernelName:_t,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:i,strides:a,pad:o,dimRoundingMode:u}=n;return{x:()=>Wh(e,r,s,i,a,o,u)}}},Vh=Is({maxPoolGrad_:function(e,t,n,r,s,i,a){const o=vs(e,"dy","maxPoolGrad"),u=vs(t,"input","maxPoolGrad"),l=vs(n,"output","maxPoolGrad");f(u.rank===o.rank,(()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`)),f(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),f(4===u.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`)),fa("maxPoolGrad",i,a);const c={dy:o,input:u,output:l},h={filterSize:r,strides:s,pad:i,dimRoundingMode:a};return ps.runKernel(Rt,c,h)}}),Gh={kernelName:Ft,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:i,strides:a,pad:o}=n;return{x:()=>Vh(e,r,s,i,a,o)}}},Hh={kernelName:Bt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n,i=D(s,r.shape),a=x(go(r.shape,i)[1]);return{x:()=>{const t=r.shape.slice();i.forEach((e=>{t[e]=1}));const n=ma(e,t);return Pa(to(n,So(r.shape,"float32")),a)}}}},jh={kernelName:Lt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:s}=r,[i,a]=t,o=Bh(e,a,i,D(s,i.shape));return{x:()=>o.x()}}},qh={kernelName:zt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>to(e,ui(Ku(n,r),"float32")),b:()=>to(e,ui(Xa(n,r),"float32"))}}},Kh={kernelName:Pt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,i=s.map((e=>e[0]));return{x:()=>Uo(e,i,r.shape)}}},Xh={kernelName:Wt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=wi(n.shape,r.shape);return{a:()=>{const t=yi(n.shape,s);return t.length>0?ma(ro(e,t),n.shape):e},b:()=>{const t=to(e,Co(qa(Pa(n,r)))),i=yi(r.shape,s);return i.length>0?ma(ro(t,i),r.shape):t}}}},Yh={kernelName:Vt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=wi(n.shape,r.shape);return{a:()=>{const t=to(e,ui(r,"float32")),i=yi(n.shape,s);return i.length>0?ma(ro(t,i),n.shape):t},b:()=>{const t=to(e,ui(n,"float32")),i=yi(r.shape,s);return i.length>0?ma(ro(t,i),r.shape):t}}}},Zh={kernelName:Gt,gradFunc:e=>({x:()=>Co(e)})},Jh={kernelName:Yt,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>No(n.shape,"float32")}}},Qh={kernelName:Xt,gradFunc:e=>({x:()=>su(e)})},ed={kernelName:Zt,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return nu(e,r).map((e=>()=>e))}},td={kernelName:Jt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,i=s.map((e=>e[0]));return{x:()=>Uo(e,i,r.shape)}}},nd={kernelName:Qt,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,s]=t,i=n,a=r,o=wi(i.shape,a.shape);return{a:()=>{const t=ui(a,"float32");let n=to(e,to(t,el(i,no(t,Ki(1)))));const r=yi(i.shape,o);return r.length>0&&(n=ro(n,r)),ma(n,i.shape)},b:()=>{const t=Xa(i,0),n=ru(t,Ja(i),su(i));let r=to(e,to(s,n));const u=yi(a.shape,o);return u.length>0&&(r=ro(r,u)),ma(r,a.shape)}}}},rd={kernelName:en,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,s=Xa(n,0);return{x:()=>ru(s,e,to(e,r)),alpha:()=>{let t=ru(s,su(e),to(e,n));const i=yi(r.shape,e.shape);return i.length>0&&(t=ro(t,i)),ma(t,r.shape)}}}},sd=Is({cumprod_:function(e,t=0,n=!1,r=!1){const s={x:vs(e,"x","cumprod")},i={axis:t,exclusive:n,reverse:r};return ps.runKernel(Me,s,i)}});const id={kernelName:tn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;let i=[];return i=null==s?r.shape.map(((e,t)=>t)):"number"==typeof s?[s]:s,{x:()=>function(e,t,n){const r=e.shape.length,s=r-n.length,i=yo(n,r);let a=e;null!=i&&(a=ou(e,i));const o=a.shape.slice(),u=o.splice(r-n.length,n.length).reduce(((e,t)=>e*t),1);o.push(u);let l=function(e,t,n){const r=e.shape.slice();r[n]=1;const s=ma(t,r),i=sd(e,n,!0,!1),a=sd(e,n,!0,!0),o=to(i,a);return to(s,o)}(a.reshape(o),t,s);if(l=l.reshape(a.shape),null!=i){const e=wo(i);l=ou(l,e)}return l}(r,e,i)}}},ad={kernelName:Ke,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=wi(n.shape,r.shape);return{a:()=>{const t=Pa(e,ui(r,"float32")),i=yi(n.shape,s);return i.length>0?ma(ro(t,i),n.shape):t},b:()=>{let t=to(e,ui(n,"float32"));const i=yi(r.shape,s);i.length>0&&(t=ma(ro(t,i),r.shape));const a=ko(r);return Co(Pa(t,ui(a,"float32")))}}}},od={kernelName:un,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Pa(e,Co(ko(n)))}}},ud={kernelName:mn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=to(Ku(n,6),mu(n));return{x:()=>to(e,ui(r,"float32"))}}},ld={kernelName:ln,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>to(e,ui(mu(n),"float32"))}}},cd={kernelName:cn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ma(e,n.shape)}}},hd={kernelName:pn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>ps.runKernel(fn,s,n)}}},dd={kernelName:hn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>ps.runKernel(dn,s,n)}}},pd={kernelName:gn,gradFunc:(e,t,n)=>{const{dims:r}=n,s=D(r,e.shape);return{x:()=>Lo(e,s)}}},fd={kernelName:bn,gradFunc:e=>({x:()=>su(e)})},md={kernelName:xn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Co(Pa(e,to(el(n,1.5),2)))}}},gd=Is({logicalNot_:function(e){const t={x:vs(e,"x","logicalNot","bool")};return ps.runKernel(Et,t)}}),bd={kernelName:vn,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>ui(su(n),"float32"),t:()=>to(e,ui(n,e.dtype)),e:()=>to(e,ui(gd(n),e.dtype))}}},xd={kernelName:kn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Xa(n,Ki(0)),r=Ki(Ul),s=Ki(Vl),i=to(e,s),a=to(to(e,r),Va(ui(n,"float32")));return ru(t,i,a)}}}},yd={kernelName:Nn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>to(e,to(n,no(Ki(1),n)))}}},wd={kernelName:En,gradFunc:e=>({x:()=>su(e)})},vd=Is({cos_:function(e){const t={x:vs(e,"x","cos","float32")};return ps.runKernel(_e,t)}}),kd={kernelName:Cn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>to(vd(ui(n,"float32")),e)}}},Id=Is({cosh_:function(e){const t={x:vs(e,"x","cosh","float32")};return ps.runKernel(Oe,t)}}),Cd={kernelName:Dn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>to(Id(ui(n,"float32")),e)}}},Dd={kernelName:In,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:s,size:i}=n,a=r.shape,[o,u]=Oi(r,s,i),l=[];for(let t=0;t<e.rank;t++)l.push([o[t],a[t]-o[t]-u[t]]);return{x:()=>To(e,l)}}},Ed={kernelName:Rn,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:s}=n,i=to(e,r);return{logits:()=>no(i,to(ro(i,[s],!0),r))}}},Nd={kernelName:Sn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>to(e,Wo(n))}}},Sd=Is({batchToSpaceND_:function(e,t,n){const r=vs(e,"x","batchToSpaceND"),s=t.reduce(((e,t)=>e*t));f(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),f(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),f(r.shape[0]%s==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`));const i={x:r},a={blockShape:t,crops:n};return ps.runKernel(ye,i,a)}}),$d={kernelName:An,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>Sd(e,r,s)}}},Td={kernelName:Fn,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>Da(e,r)}}},Ad=[Tc,Ac,Fc,Rc,_c,Oc,Mc,Bc,Lc,zc,Pc,Wc,Vc,Hc,jc,Kc,Xc,Yc,Zc,Jc,Qc,eh,nh,th,sh,ah,uh,ch,hh,dh,ad,ph,fh,mh,gh,bh,yh,xh,vh,Ih,Eh,Nh,Sh,$h,Th,Ah,Fh,Rh,_h,Mh,Lh,Lh,Ph,Uh,Gh,Hh,jh,qh,Kh,Xh,Yh,Zh,Jh,Qh,ed,td,td,nd,rd,id,od,ud,ld,cd,hd,dd,pd,fd,md,bd,xd,yd,wd,kd,Cd,Dd,Ed,Nd,$d,$d,Td,Td,{kernelName:$n,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Pa(e,to(Yo(ui(n,"float32")),2))}}},{kernelName:zn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ki(2);return{a:()=>to(e,to(s,no(n,r))),b:()=>to(e,to(s,no(r,n)))}}},{kernelName:Pn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>to(e,to(ui(n,"float32"),2))}}},{kernelName:nr,gradFunc:e=>({x:()=>su(e)})},{kernelName:Hn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=wi(n.shape,r.shape);return{a:()=>{let t=e;const r=yi(n.shape,s);return r.length>0&&(t=ro(t,r)),ma(t,n.shape)},b:()=>{let t=e;const n=yi(r.shape,s);return n.length>0&&(t=ro(t,n)),ma(Co(t),r.shape)}}}},{kernelName:Tn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,s=r.shape.slice(),{axis:i}=n;D(i,r.shape).forEach((e=>{s[e]=1}));const a=ma(e,s),o=to(a,So(r.shape,"float32"));return{x:()=>o}}},{kernelName:jn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Pa(e,ko(vd(n)))}}},{kernelName:qn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>to(no(Ki(1),ko(n)),e)}}},{kernelName:Kn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:s}=n;return{x:()=>{let t=su(r);if(1===r.rank)for(let n=0;n<s[0];++n)t=Zi(t,Uo(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)t=Zi(t,Uo(e,[n*r.shape[0],i*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)for(let a=0;a<s[2];++a)t=Zi(t,Uo(e,[n*r.shape[0],i*r.shape[1],a*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)for(let a=0;a<s[2];++a)for(let o=0;o<s[3];++o)t=Zi(t,Uo(e,[n*r.shape[0],i*r.shape[1],a*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:Zn,gradFunc:(e,t,n)=>{const r=n,{perm:s}=r,i=wo(s);return{x:()=>ou(e,i)}}},{kernelName:Qn,gradFunc:(e,t,n)=>{const r=n,{axis:s}=r;return{value:()=>Jo(e,s)}}},{kernelName:er,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=lo(t,su(t)),r=Ka(e,n);let s=Ya(t,Ki(0,"int32"));const i=r.rank-s.rank;for(let e=0;e<i;++e)s=Ga(s,e+1);s=io(s,So(r.shape,"bool"));const a=su(r);return ru(s,r,a)}(e,n)}}},{kernelName:tr,gradFunc:e=>({x:()=>su(e)})}];for(const e of Ad)mr(e);Xr().prototype.abs=function(){return this.throwIfDisposed(),Yi(this)};const Fd=Is({acos_:function(e){const t={x:vs(e,"x","acos")};return ps.runKernel(te,t)}});Xr().prototype.acos=function(){return this.throwIfDisposed(),Fd(this)};const Rd=Is({acosh_:function(e){const t={x:vs(e,"x","acosh")};return ps.runKernel(ne,t)}});Xr().prototype.acosh=function(){return this.throwIfDisposed(),Rd(this)},Xr().prototype.add=function(e){return this.throwIfDisposed(),Zi(this,e)},Xr().prototype.all=function(e,t){return this.throwIfDisposed(),Ji(this,e,t)},Xr().prototype.any=function(e,t){return this.throwIfDisposed(),Qi(this,e,t)},Xr().prototype.argMax=function(e){return this.throwIfDisposed(),ea(this,e)};const _d=Is({argMin_:function(e,t=0){const n={x:vs(e,"x","argMin")},r={axis:t};return ps.runKernel(ue,n,r)}});Xr().prototype.argMin=function(e){return this.throwIfDisposed(),_d(this,e)},Xr().prototype.asScalar=function(){return this.throwIfDisposed(),f(1===this.size,(()=>"The array must have only 1 element.")),ma(this,[])},Xr().prototype.asType=function(e){return this.throwIfDisposed(),ui(this,e)},Xr().prototype.as1D=function(){return this.throwIfDisposed(),ma(this,[this.size])},Xr().prototype.as2D=function(e,t){return this.throwIfDisposed(),ma(this,[e,t])},Xr().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),ma(this,[e,t,n])},Xr().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),ma(this,[e,t,n,r])},Xr().prototype.as5D=function(e,t,n,r,s){return this.throwIfDisposed(),ma(this,[e,t,n,r,s])};const Od=Is({asin_:function(e){const t={x:vs(e,"x","asin")};return ps.runKernel(le,t)}});Xr().prototype.asin=function(){return this.throwIfDisposed(),Od(this)};const Md=Is({asinh_:function(e){const t={x:vs(e,"x","asinh")};return ps.runKernel(ce,t)}});Xr().prototype.asinh=function(){return this.throwIfDisposed(),Md(this)};const Bd=Is({atan_:function(e){const t={x:vs(e,"x","atan")};return ps.runKernel(he,t)}});Xr().prototype.atan=function(){return this.throwIfDisposed(),Bd(this)};const Ld=Is({atan2_:function(e,t){let n=vs(e,"a","atan2"),r=vs(t,"b","atan2");[n,r]=is(n,r);const s={a:n,b:r};return ps.runKernel(pe,s)}});Xr().prototype.atan2=function(e){return this.throwIfDisposed(),Ld(this,e)};const zd=Is({atanh_:function(e){const t={x:vs(e,"x","atanh")};return ps.runKernel(de,t)}});Xr().prototype.atanh=function(){return this.throwIfDisposed(),zd(this)},Xr().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),ga(this,e,t,n,r)},Xr().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Sd(this,e,t)},Xr().prototype.batchNorm=function(e,t,n,r,s){return this.throwIfDisposed(),xa(this,e,t,n,r,s)},Xr().prototype.broadcastTo=function(e){return this.throwIfDisposed(),ka(this,e)},Xr().prototype.cast=function(e){return this.throwIfDisposed(),ui(this,e)};const Pd=Is({ceil_:function(e){const t={x:vs(e,"x","ceil","float32")};return ps.runKernel(Ie,t)}});Xr().prototype.ceil=function(){return this.throwIfDisposed(),Pd(this)},Xr().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Ca(this,e,t)},Xr().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Kr&&(e=[e]),Da([this,...e],t)},Xr().prototype.conv1d=function(e,t,n,r,s,i){return this.throwIfDisposed(),Aa(this,e,t,n,r,s,i)},Xr().prototype.conv2dTranspose=function(e,t,n,r,s){return this.throwIfDisposed(),Ra(this,e,t,n,r,s)},Xr().prototype.conv2d=function(e,t,n,r,s,i){return this.throwIfDisposed(),Ta(this,e,t,n,r,s,i)},Xr().prototype.cos=function(){return this.throwIfDisposed(),vd(this)},Xr().prototype.cosh=function(){return this.throwIfDisposed(),Id(this)},Xr().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),sd(this,e,t,n)},Xr().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),lh(this,e,t,n)};const Wd=Is({depthToSpace_:function(e,t,n="NHWC"){const r=vs(e,"x","depthToSpace","float32"),s="NHWC"===n?r.shape[1]:r.shape[2],i="NHWC"===n?r.shape[2]:r.shape[3],a="NHWC"===n?r.shape[3]:r.shape[1];f(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),f(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),f(i*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${i} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),f(a%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${a} for depthToSpace with input shape ${r.shape}`));const o={x:r},u={blockSize:t,dataFormat:n};return ps.runKernel(Pe,o,u)}});Xr().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Wd(this,e,t)},Xr().prototype.depthwiseConv2d=function(e,t,n,r,s,i){return this.throwIfDisposed(),La(this,e,t,n,r,s,i)};const Ud=Is({dilation2d_:function(e,t,n,r,s=[1,1],i="NHWC"){const a=vs(e,"x","dilation2d"),o=vs(t,"filter","dilation2d");f(3===a.rank||4===a.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`)),f(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),f("NHWC"===i,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`));let u=a,l=!1;3===a.rank&&(u=ma(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=!0);const c={x:u,filter:o},h={strides:n,pad:r,dilations:s},d=ps.runKernel(He,c,h);return l?ma(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});Xr().prototype.dilation2d=function(e,t,n,r,s){return this.throwIfDisposed(),Ud(this,e,t,n,r,s)};const Vd=Is({divNoNan_:function(e,t){let n=vs(e,"a","div"),r=vs(t,"b","div");[n,r]=is(n,r);const s=Pa(n,r),i=su(s),a=Ua(r,i);return ru(a,i,s)}});Xr().prototype.divNoNan=function(e){return this.throwIfDisposed(),Vd(this,e)},Xr().prototype.div=function(e){return this.throwIfDisposed(),Pa(this,e)};const Gd=Is({dot_:function(e,t){const n=vs(e,"t1","dot"),r=vs(t,"t2","dot");f(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const s=1===n.rank?n.size:n.shape[1],i=1===r.rank?r.size:r.shape[0];if(f(s===i,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${i}.`)),1===n.rank&&1===r.rank){const e=ma(n,[1,-1]),t=ma(r,[-1,1]),s=ao(e,t);return ma(s,[])}if(1===n.rank&&2===r.rank){const e=ma(n,[1,-1]),t=ma(r,[r.shape[0],r.shape[1]]),s=ao(e,t);return ma(s,[s.size])}if(2===n.rank&&1===r.rank){const e=ma(r,[-1,1]),t=ao(n,e);return ma(t,[t.size])}{const e=ma(r,[r.shape[0],r.shape[1]]);return ao(n,e)}}});Xr().prototype.dot=function(e){return this.throwIfDisposed(),Gd(this,e)},Xr().prototype.elu=function(){return this.throwIfDisposed(),Wa(this)},Xr().prototype.equal=function(e){return this.throwIfDisposed(),Ua(this,e)};const Hd=Is({erf_:function(e){let t=vs(e,"x","erf");f("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=ui(t,"float32"));const n={x:t};return ps.runKernel(Je,n)}});Xr().prototype.erf=function(){return this.throwIfDisposed(),Hd(this)};const jd=Is({euclideanNorm_:function(e,t=null,n=!1){return nl(e,"euclidean",t,n)}});Xr().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),jd(this,e,t)},Xr().prototype.exp=function(){return this.throwIfDisposed(),Va(this)},Xr().prototype.expandDims=function(e){return this.throwIfDisposed(),Ga(this,e)};const qd=Is({expm1_:function(e){const t={x:vs(e,"x","expm1")};return ps.runKernel(nt,t)}});Xr().prototype.expm1=function(){return this.throwIfDisposed(),qd(this)},Xr().prototype.fft=function(){return this.throwIfDisposed(),lu(this)},Xr().prototype.flatten=function(){return this.throwIfDisposed(),ma(this,[this.size])},Xr().prototype.floor=function(){return this.throwIfDisposed(),qa(this)},Xr().prototype.floorDiv=function(e){return this.throwIfDisposed(),za(this,e)},Xr().prototype.gather=function(e,t){return this.throwIfDisposed(),Ka(this,e,t)},Xr().prototype.greaterEqual=function(e){return this.throwIfDisposed(),Ya(this,e)},Xr().prototype.greater=function(e){return this.throwIfDisposed(),Xa(this,e)},Xr().prototype.ifft=function(){return this.throwIfDisposed(),hu(this)},Xr().prototype.irfft=function(){return this.throwIfDisposed(),du(this)};const Kd=Is({isFinite_:function(e){const t={x:vs(e,"x","isFinite")};return ps.runKernel(gt,t)}});Xr().prototype.isFinite=function(){return this.throwIfDisposed(),Kd(this)};const Xd=Is({isInf_:function(e){const t={x:vs(e,"x","isInf")};return ps.runKernel(bt,t)}});Xr().prototype.isInf=function(){return this.throwIfDisposed(),Xd(this)};const Yd=Is({isNaN_:function(e){const t={x:vs(e,"x","isNaN")};return ps.runKernel(xt,t)}});Xr().prototype.isNaN=function(){return this.throwIfDisposed(),Yd(this)},Xr().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Za(this,e)},Xr().prototype.lessEqual=function(e){return this.throwIfDisposed(),Ku(this,e)},Xr().prototype.less=function(e){return this.throwIfDisposed(),zh(this,e)};const Zd=Is({localResponseNormalization_:function(e,t=5,n=1,r=1,s=.5){const i=vs(e,"x","localResponseNormalization");f(4===i.rank||3===i.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${i.rank}.`)),f(w(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let a=i,o=!1;3===i.rank&&(o=!0,a=ma(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const u={x:a},l={depthRadius:t,bias:n,alpha:r,beta:s},c=ps.runKernel(St,u,l);return o?ma(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});Xr().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Zd(this,e,t,n,r)};const Jd=Is({logSigmoid_:function(e){const t=vs(e,"x","logSigmoid"),n=qi((e=>({value:Co(Ko(Co(e))),gradFunc:t=>to(t,Wo(Co(e)))})));return n(t)}});Xr().prototype.logSigmoid=function(){return this.throwIfDisposed(),Jd(this)},Xr().prototype.logSoftmax=function(e){return this.throwIfDisposed(),so(this,e)},Xr().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),ll(this,e,t)},Xr().prototype.log=function(){return this.throwIfDisposed(),Ja(this)},Xr().prototype.log1p=function(){return this.throwIfDisposed(),Qa(this)},Xr().prototype.logicalAnd=function(e){return this.throwIfDisposed(),io(this,e)},Xr().prototype.logicalNot=function(){return this.throwIfDisposed(),gd(this)};const Qd=Is({logicalOr_:function(e,t){const n=vs(e,"a","logicalOr","bool"),r=vs(t,"b","logicalOr","bool");wi(n.shape,r.shape);const s={a:n,b:r};return ps.runKernel(Nt,s)}});Xr().prototype.logicalOr=function(e){return this.throwIfDisposed(),Qd(this,e)};const ep=Is({logicalXor_:function(e,t){const n=vs(e,"a","logicalXor","bool"),r=vs(t,"b","logicalXor","bool");return wi(n.shape,r.shape),io(Qd(e,t),gd(io(e,t)))}});Xr().prototype.logicalXor=function(e){return this.throwIfDisposed(),ep(this,e)},Xr().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),ao(this,e,t,n)},Xr().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),oo(this,e,t,n,r)},Xr().prototype.max=function(e,t){return this.throwIfDisposed(),eo(this,e,t)},Xr().prototype.maximum=function(e){return this.throwIfDisposed(),lo(this,e)},Xr().prototype.mean=function(e,t){return this.throwIfDisposed(),co(this,e,t)},Xr().prototype.min=function(e,t){return this.throwIfDisposed(),ho(this,e,t)},Xr().prototype.minimum=function(e){return this.throwIfDisposed(),po(this,e)};const tp=Is({mirrorPad_:function(e,t,n){f("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=vs(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");f(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const s="reflect"===n?1:0;for(let e=0;e<r.rank;e++)f(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),f(t[e][0]>=0&&t[e][0]<=r.shape[e]-s&&t[e][1]>=0&&t[e][1]<=r.shape[e]-s,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-s} or less than 0 for input of shape ${r.shape}`));const i={paddings:t,mode:n},a={x:r};return ps.runKernel(Pt,a,i)}});Xr().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),tp(this,e,t)};const np=Is({mod_:function(e,t){let n=vs(e,"a","mod"),r=vs(t,"b","mod");[n,r]=is(n,r);const s={a:n,b:r};return ps.runKernel(Wt,s)}});Xr().prototype.mod=function(e){return this.throwIfDisposed(),np(this,e)},Xr().prototype.mul=function(e){return this.throwIfDisposed(),to(this,e)},Xr().prototype.neg=function(){return this.throwIfDisposed(),Co(this)},Xr().prototype.norm=function(e,t,n){return this.throwIfDisposed(),nl(this,e,t,n)},Xr().prototype.notEqual=function(e){return this.throwIfDisposed(),Do(this,e)},Xr().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Eo(this,e,t,n)},Xr().prototype.onesLike=function(){return this.throwIfDisposed(),$o(this)},Xr().prototype.pad=function(e,t){return this.throwIfDisposed(),To(this,e,t)};const rp=Is({pool_:function(e,t,n,r,s,i,a){null==s&&(s=[1,1]),null==i&&(i=1),0===r&&(r="valid");const o=vs(e,"x","maxPool");let u=o,l=!1;3===o.rank&&(l=!0,u=ma(o,[1,o.shape[0],o.shape[1],o.shape[2]])),f(da(i,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${s}'`));const c=na(u.shape,t,i,s,r),h=[c.dilationHeight,c.dilationWidth];let d;d="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),s=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],s[t]]))}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const p=1===h[0]&&1===h[1],[m,g]=function(e,t,n){const r=n.map((e=>e[0])),s=n.map((e=>e[1])),i=e.concat(r,s),a=t.map(((e,t)=>(e-i[t]%e)%e)),o=s.map(((e,t)=>e+a[t]));return[t.map(((e,t)=>[r[t],o[t]])),t.map(((e,t)=>[0,a[t]]))]}([c.inHeight,c.inWidth],h,d),b=p?r:"valid",x=p?u:qc(u,h,m),y=("avg"===n?()=>ga(x,t,i,b,a):()=>oo(x,t,i,b,a))(),w=p?y:Sd(y,h,g);return l?ma(w,[w.shape[1],w.shape[2],w.shape[3]]):w}});Xr().prototype.pool=function(e,t,n,r,s,i){return this.throwIfDisposed(),rp(this,e,t,n,r,s,i)},Xr().prototype.pow=function(e){return this.throwIfDisposed(),el(this,e)},Xr().prototype.prelu=function(e){return this.throwIfDisposed(),Ao(this,e)};const sp=Is({prod_:function(e,t=null,n=!1){let r=vs(e,"x","prod");"bool"===r.dtype&&(r=ui(r,"int32"));const s={x:r},i={axis:t,keepDims:n};return ps.runKernel(tn,s,i)}});Xr().prototype.prod=function(e,t){return this.throwIfDisposed(),sp(this,e,t)};const ip=Is({reciprocal_:function(e){const t={x:vs(e,"x","reciprocal")};return ps.runKernel(un,t)}});Xr().prototype.reciprocal=function(){return this.throwIfDisposed(),ip(this)},Xr().prototype.relu=function(){return this.throwIfDisposed(),Bo(this)},Xr().prototype.relu6=function(){return this.throwIfDisposed(),fu(this)},Xr().prototype.reshapeAs=function(e){return this.throwIfDisposed(),ma(this,e.shape)},Xr().prototype.reshape=function(e){return this.throwIfDisposed(),ma(this,e)},Xr().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Hu(this,e,t,n)},Xr().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),ju(this,e,t,n)},Xr().prototype.reverse=function(e){return this.throwIfDisposed(),Lo(this,e)},Xr().prototype.rfft=function(){return this.throwIfDisposed(),cu(this)},Xr().prototype.round=function(){return this.throwIfDisposed(),Xu(this)},Xr().prototype.rsqrt=function(){return this.throwIfDisposed(),wh(this)},Xr().prototype.selu=function(){return this.throwIfDisposed(),zo(this)},Xr().prototype.separableConv2d=function(e,t,n,r,s,i){return this.throwIfDisposed(),Po(this,e,t,n,r,s,i)},Xr().prototype.sigmoid=function(){return this.throwIfDisposed(),Wo(this)};const ap=Is({sign_:function(e){const t={x:vs(e,"x","sign")};return ps.runKernel(En,t)}});Xr().prototype.sign=function(){return this.throwIfDisposed(),ap(this)},Xr().prototype.sin=function(){return this.throwIfDisposed(),ih(this)},Xr().prototype.sinh=function(){return this.throwIfDisposed(),oh(this)},Xr().prototype.slice=function(e,t){return this.throwIfDisposed(),Uo(this,e,t)},Xr().prototype.softmax=function(e){return this.throwIfDisposed(),qo(this,e)},Xr().prototype.softplus=function(){return this.throwIfDisposed(),Ko(this)},Xr().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),qc(this,e,t)},Xr().prototype.split=function(e,t){return this.throwIfDisposed(),Xo(this,e,t)},Xr().prototype.sqrt=function(){return this.throwIfDisposed(),Yo(this)},Xr().prototype.square=function(){return this.throwIfDisposed(),ko(this)},Xr().prototype.squaredDifference=function(e){return this.throwIfDisposed(),ul(this,e)},Xr().prototype.squeeze=function(e){return this.throwIfDisposed(),Zo(this,e)},Xr().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Kr?[this,e]:[this,...e];return Jo(n,t)},Xr().prototype.step=function(e){return this.throwIfDisposed(),mu(this,e)};const op=Is({stridedSlice_:function(e,t,n,r,s=0,i=0,a=0,o=0,u=0){const l={x:vs(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:r,beginMask:s,endMask:i,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:u};return ps.runKernel(Wn,l,c)}});Xr().prototype.stridedSlice=function(e,t,n,r,s,i,a,o){return this.throwIfDisposed(),op(this,e,t,n,r,s,i,a,o)},Xr().prototype.sub=function(e){return this.throwIfDisposed(),no(this,e)},Xr().prototype.sum=function(e,t){return this.throwIfDisposed(),ro(this,e,t)};const up=Is({tan_:function(e){const t={x:vs(e,"x","tan","float32")};return ps.runKernel(jn,t)}});Xr().prototype.tan=function(){return this.throwIfDisposed(),up(this)},Xr().prototype.tanh=function(){return this.throwIfDisposed(),Qo(this)},Xr().prototype.tile=function(e){return this.throwIfDisposed(),Ha(this,e)},Xr().prototype.toBool=function(){return this.throwIfDisposed(),ui(this,"bool")},Xr().prototype.toFloat=function(){return this.throwIfDisposed(),ui(this,"float32")},Xr().prototype.toInt=function(){return this.throwIfDisposed(),ui(this,"int32")};const lp=Is({topk_:function(e,t=1,n=!0){const r=vs(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${t}`);const i={x:r},a={k:t,sorted:n},[o,u]=ps.runKernel(Xn,i,a);return{values:o,indices:u}}});Xr().prototype.topk=function(e,t){return this.throwIfDisposed(),lp(this,e,t)},Xr().prototype.transpose=function(e){return this.throwIfDisposed(),ou(this,e)};const cp=Is({unique_:function(e,t=0){const n=vs(e,"x","unique","string_or_numeric");f(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},s={axis:t},[i,a]=ps.runKernel(Jn,r,s);return{values:i,indices:a}}});Xr().prototype.unique=function(e){return this.throwIfDisposed(),cp(this,e)},Xr().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),kh(this,e,t)},Xr().prototype.unstack=function(e){return this.throwIfDisposed(),nu(this,e)},Xr().prototype.where=function(e,t){return this.throwIfDisposed(),ru(e,this,t)},Xr().prototype.zerosLike=function(){return this.throwIfDisposed(),su(this)};class hp extends Error{constructor(e){super(e),Object.setPrototypeOf(this,hp.prototype)}}class dp extends Error{constructor(e){super(e),Object.setPrototypeOf(this,dp.prototype)}}class pp extends Error{constructor(e){super(e),Object.setPrototypeOf(this,pp.prototype)}}class fp extends Error{constructor(e){super(e),Object.setPrototypeOf(this,fp.prototype)}}class mp extends Error{constructor(e){super(e),Object.setPrototypeOf(this,mp.prototype)}}class gp extends Error{constructor(e){super(e),Object.setPrototypeOf(this,gp.prototype)}}class bp{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function xp(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function yp(e,t){if(!e)throw new mp(t)}function wp(e,t){let n=0;for(const r of e)r===t&&n++;return n}function vp(e){return 1===e.length?e[0]:e}function kp(e){return Array.isArray(e)?e:[e]}function Ip(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function Cp(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let Dp={};function Ep(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Np(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>Np(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?Np(t):e[n]=t.value)}}}function Sp(e,t={},n={},r="object",s=!1){if("string"==typeof e){const s=e;let i;if(s in n)i=n[s];else if(s in Dp)i=Dp[s];else if(i=t[s],null==i)throw new pp(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}{const i=e;if(null==i.className||null==i.config)throw new pp(`${r}: Improper config format: ${JSON.stringify(i)}.\n'className' and 'config' must set.`);const a=i.className;let o,u;if(a in n?[o,u]=n[a]:a in Dp?[o,u]=Dp.className:a in t&&([o,u]=t[a]),null==o)throw new pp(`Unknown ${r}: ${a}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const e={};for(const t of Object.keys(Dp))e[t]=Dp[t];for(const t of Object.keys(n))e[t]=n[t];i.config.customObjects=e;const t=Object.assign({},Dp);for(const e of Object.keys(n))Dp[e]=n[e];Np(i.config);const r=u(o,i.config,n,s);return Dp=Object.assign({},t),r}{const e=Object.assign({},Dp);for(const e of Object.keys(n))Dp[e]=n[e];const t=new o(i.config);return Dp=Object.assign({},e),t}}}function $p(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function Tp(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function Ap(e){if(null==e)throw new pp(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function Fp(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new pp(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Rp(e,t,n=0,r=1/0){return yp(n>=0),yp(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function _p(e,t){Array.isArray(e)?(f(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>_p(e,`element ${n+1} of ${t}`)))):f(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${Op(e)}.`))}function Op(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>Op(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function Mp(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let Bp=0;function Lp(){return Bp++}const zp={};function Pp(e=""){return e in zp||(zp[e]=0),zp[e]+=1,e+zp[e].toString()}const Wp=["channelsFirst","channelsLast"],Up=["nearest","bilinear"],Vp=["valid","same","causal"],Gp=["max","avg"],Hp=["sum","mul","concat","ave"],jp=new Map;function qp(e){Fp(Wp,"DataFormat",e)}function Kp(e){Fp(Vp,"PaddingMode",e)}function Xp(e){Fp(Gp,"PoolMode",e)}const Yp=[];function Zp(e,t){Yp.push(e);try{const e=t();return Yp.pop(),e}catch(e){throw Yp.pop(),e}}function Jp(e){if(!tf(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Yp.length?"":Yp.join("/")+"/")+e}function Qp(e){if(!tf(e))throw new Error("Not a valid tensor name: '"+e+"'");jp.has(e)||jp.set(e,0);const t=jp.get(e);if(jp.set(e,jp.get(e)+1),t>0){const n=`${e}_${t}`;return jp.set(n,1),n}return e}const ef=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function tf(e){return!!e.match(ef)}function nf(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let s=t;s<n;++s)r*=e[s];return r}function rf(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function sf(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function af(e,t){if(t<e)throw new pp(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}let of;function uf(){return null==of&&(of=ps.backend.epsilon()),of}function lf(e,t){return ui(e,t)}function cf(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),ma(e,n)}function hf(e,t,n){return Vi((()=>{switch(e.rank){case 1:return Vo(e,t,n);case 2:return Go(e,[t,0],[n,e.shape[1]]);case 3:return Ho(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return jo(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Uo(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Uo(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new pp(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function df(e,t,n){return Vi((()=>{switch(e.rank){case 1:return Vo(e,t,n);case 2:return Go(e,[0,t],[e.shape[0],n]);case 3:return Ho(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return jo(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new pp(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function pf(e,t,n,r){return Vi((()=>{switch(e.rank){case 1:return Vo(e,t,n);case 2:switch(r){case 1:return hf(e,t,n);case 2:return df(e,t,n);default:throw new pp(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return hf(e,t,n);case 2:return Ho(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return df(e,t,n);default:throw new pp(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return hf(e,t,n);case 2:return jo(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return jo(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return df(e,t,n);default:throw new pp(`The axis is not within the rank of the tensor ${r}`)}default:throw new pp(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function ff(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),Da(e,t)}function mf(e,t){switch(e.rank){case 1:return Ea([e,t]);case 2:return Na([e,t],0);case 3:return Sa([e,t],0);case 4:return $a([e,t],0);default:throw new pp(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function gf(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new pp(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Ha(e,t)}function bf(e,t=0,n=1,r,s){return Oo(e,t,n,r,s)}function xf(e,t,n,r){if(e.rank<2||t.rank<2)throw new fp(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new fp(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return Iu({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?vf(e.rank,r,"channelsLast"):null,activation:n});{const s=e.shape.slice(),i=s.pop();e=ma(e,[-1,i]);const a=t.shape.slice(),o=a.pop(),u=a.pop(),l=[...a,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=ma(ou(t,c),[u,-1]);const h=[...s,...l];return ma(Iu({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?vf(e.rank,r,"channelsLast"):null,activation:n}),h)}}function yf(e,t,n){return Vi((()=>(t=Array.isArray(t)?eu(t,"int32"):ui(t,"int32"),Ka(e,t,n))))}function wf(e){return to(e,e)}function vf(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new pp(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?ma(t,[1,r[0],1,1,1]):ma(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?ma(t,[1,1,1,1,r[0]]):ma(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?ma(t,[1,r[0],1,1]):ma(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?ma(t,[1,1,1,r[0]]):ma(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?ma(t,[1,r[0],1]):ma(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?ma(t,[1,1,r[0]]):ma(t,[1].concat(r))}else if(e<3)return t;throw new pp(`Unsupported input rank by biasAdd: ${t.rank}`)}function kf(e,t,n){return Vi((()=>(null==n&&(n="channelsLast"),qp(n),Zi(e,vf(e.rank,t,n)))))}function If(e,t,n,r){return Vi((()=>uu(e,t,n,r)))}function Cf(e,t,n=!1){return n?e():t()}const Df=["fanIn","fanOut","fanAvg"],Ef=["normal","uniform","truncatedNormal"];class Nf extends Li{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Sf extends Nf{apply(e,t){return No(e,t)}}Sf.className="Zeros",Pi(Sf);class $f extends Nf{apply(e,t){return So(e,t)}}$f.className="Ones",Pi($f);class Tf extends Nf{constructor(e){if(super(),"object"!=typeof e)throw new pp(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new pp(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Vi((()=>to(Ki(this.value),So(e,t))))}getConfig(){return{value:this.value}}}Tf.className="Constant",Pi(Tf);class Af extends Nf{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Mo(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Af.className="RandomUniform",Pi(Af);class Ff extends Nf{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new fp(`randomNormal does not support dType ${t}.`);return bf(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Ff.className="RandomNormal",Pi(Ff);class Rf extends Nf{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new fp(`truncatedNormal does not support dType ${t}.`);return tu(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Rf.className="TruncatedNormal",Pi(Rf);class _f extends Nf{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Vi((()=>{if(2!==e.length||e[0]!==e[1])throw new pp("Identity matrix initializer can only be used for 2D square matrices.");return to(this.gain,ja(e[0]))}))}getConfig(){return{gain:this.gain}}}_f.className="Identity",Pi(_f);class Of extends Nf{constructor(e){if(super(),e.scale<0)throw new pp(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,Fp(Df,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){Fp(Ef,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(qp(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=nf(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=nf(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=nf(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],s=n[1];let i=this.scale;if("fanIn"===this.mode?i/=Math.max(1,r):"fanOut"===this.mode?i/=Math.max(1,s):i/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(i);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new fp(`${this.getClassName()} does not support dType ${t}.`);return tu(e,0,n,t,this.seed)}{const n=Math.sqrt(3*i);return Mo(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Of.className="VarianceScaling",Pi(Of);class Mf extends Of{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Of.className}}Mf.className="GlorotUniform",Pi(Mf);class Bf extends Of{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Of.className}}Bf.className="GlorotNormal",Pi(Bf);class Lf extends Of{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Of.className}}Lf.className="HeNormal",Pi(Lf);class zf extends Of{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Of.className}}zf.className="HeUniform",Pi(zf);class Pf extends Of{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Of.className}}Pf.className="LeCunNormal",Pi(Pf);class Wf extends Of{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Of.className}}Wf.className="LeCunNormal",Pi(Wf);class Uf extends Nf{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new fp("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return Vi((()=>{if(e.length<2)throw new fp("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=bf(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=hl.gramSchmidt(t);return e[0]>e[1]&&(n=ou(n)),to(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Uf.className="Orthogonal",Pi(Uf);const Vf={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Gf(e,t={}){return Sp(e,zi.getMap().classNameMap,t,"initializer")}function Hf(e){return Ep(e)}function jf(e){if("string"==typeof e){const t=e in Vf?Vf[e]:e;if("GlorotNormal"===t)return new Bf;if("GlorotUniform"===t)return new Mf;if("HeNormal"===t)return new Lf;if("HeUniform"===t)return new zf;if("LeCunNormal"===t)return new Pf;if("LeCunUniform"===t)return new Wf;{const e={};return e.className=t,e.config={},Gf(e)}}return e instanceof Nf?e:Gf(e)}function qf(e){return Array.isArray(e)&&Array.isArray(e[0])}function Kf(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Xf(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new pp(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Yf(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new pp(`Expected exactly 1 Shape; got ${e.length}`)}return e}function Zf(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}class Jf{constructor(e,t="float32",n="Variable",r=!0,s=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Lp(),n=null==n?"Variable":n,this.originalName=Jp(n),this.name=Qp(this.originalName),this.trainable_=r,this.constraint=s,this.val=function(e,t=!0,n,r){return ps.makeVariable(e,t,n,r)}(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function Qf(e){return e.map((e=>e.read()))}function em(e){e.forEach((e=>{e[0].write(e[1])}))}class tm{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class nm{constructor(e,t,n,r,s,i,a){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=a,this.id=Lp(),null!=i&&(this.originalName=Jp(i),this.name=Qp(this.originalName)),this.rank=t.length}}let rm=0;class sm{constructor(e,t){this.callArgs=t,this.id=rm++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let im=0;class am extends Li{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=im++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=Ip(e)+"_"+Pp(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new dp(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new pp(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return vp(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return vp(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new hp(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new hp(`Layer ${this.name} is not connected, no input to return.`);return vp(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new hp(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new hp(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return vp(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=kp(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=kp(this.inputSpec);if(e.length!==t.length)throw new pp(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],s=t[n];if(null==s)continue;const i=r.rank;if(null!=s.ndim&&i!==s.ndim)throw new pp(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${i}`);if(null!=s.maxNDim&&i>s.maxNDim)throw new pp(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${i}`);if(null!=s.minNDim&&i<s.minNDim)throw new pp(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${i}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new pp(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const e=r.shape;for(const t in s.axes){const r=Number(t),i=s.axes[t],a=r>=0?e[r]:e[e.length+r];if(null!=i&&-1===[i,null].indexOf(a))throw new pp(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${i} but got shape ${e}.`)}}if(null!=s.shape)for(let e=0;e<s.shape.length;++e){const t=s.shape[e],i=r.shape[e];if(null!=t&&null!=i&&t!==i)throw new pp(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=kp(e);let r=!0;for(const e of n)if(!(e instanceof nm)){r=!1;break}let s=!0;for(const e of n)if(e instanceof nm){s=!1;break}if(r===s)throw new pp("Arguments to apply() must be all SymbolicTensors or all Tensors");return Zp(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of kp(e))t.push(n.shape);this.build(vp(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let r=this.call(e,t);const s=kp(r),i=[];for(let e of s)-1!==n.indexOf(e)&&(e=e.clone()),i.push(e);if(r=vp(i),null!=this.activityRegularizer)throw new fp("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=kp(e);const t=[];for(const n of e)t.push(n.shape);return vp(t)}(e),r=this.computeOutputShape(n);let s;const i="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new nm(i,n,this,kp(e),t,this.name,r))):new nm(i,r,this,kp(e),t,this.name),this.addInboundNode(e,s,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new fp("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new hp(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new hp(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new dp(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Zf(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Qf(e?this.trainableWeights:this.weights)}setWeights(e){Vi((()=>{const t=this.weights;if(t.length!==e.length)throw new pp(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=Qf(t);for(let s=0;s<r.length;++s){const i=r[s],a=t[s],o=e[s];if(!y(i.shape,o.shape))throw new pp(`Layer weight shape ${i.shape} not compatible with provided weight shape ${o.shape}`);n.push([a,o])}em(n)}))}addWeight(e,t,n,r,s,i,a,o){if(-1!==this._addedWeightNames.indexOf(e))throw new pp(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():jf("zeros"));const u=r.apply(t,n),l=new Jf(u,n,e,i,a);return u.dispose(),null!=s&&this.addLoss((()=>s.apply(l.read()))),null==i&&(i=!0),i?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=kp(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,s,i,a=null){const o=kp(e);t=kp(t),n=kp(n),r=kp(r),s=Kf(s),i=Kf(i);const u=[],l=[],c=[];for(const e of o)u.push(e.sourceLayer),l.push(e.nodeIndex),c.push(e.tensorIndex);new sm({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:i},a);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function om(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=om(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class um extends am{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Pp("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new pp("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new pp("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new pp("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new nm(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new sm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new pp(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}um.className="InputLayer",Pi(um);class lm{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof lm)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new pp(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return ui(t,e.dtype)}catch(n){throw new pp(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof nm){if(null==this.id2Value[e.id])throw new pp(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new pp(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof nm){if(null==this.id2Value[e.id])throw new pp(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new pp(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&Gi(this.id2Mask)}}const cm=new bp,hm=new bp;function dm(e,t,n,r){const s=null!=n&&n.training,i=Array.isArray(e),a=i?e:[e],o=a.map((e=>e.name)),u=[],l=t.names();for(const e of o)-1!==l.indexOf(e)?u.push(t.getValue(e)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().sort().join(",");let h,d=cm.get(c);if(null==d){const e=function(e,t){f(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const s=fm(e[0],t);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const i of e){const{sorted:e,recipientMap:a}=fm(i,t);for(const t of e)s.has(t.name)||(n.push(t),s.add(t.name));for(const e in a)null==r[e]&&(r[e]=new Set),a[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:pm(r)}}(a,t);d=e.sorted,h=e.recipientCounts,cm.put(c,d),hm.put(c,h)}h={},s||Object.assign(h,hm.get(c));const p=new lm(t);for(let e=0;e<d.length;++e){if(null!=r){const e=Ui().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const i=d[e],a=i.sourceLayer;if(a instanceof um)continue;const l=[],c=[],f=[];let m=!1;for(const e of i.inputs){const n=p.getValue(e),r=p.getMask(e);l.push(n),c.push(r),null!=r&&(m=!0),s||(h[e.name]--,0!==h[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=c[0]);const g=kp(a.apply(l,n));let b=null;a.supportsMasking&&(b=a.computeMask(l,c));const x=mm(i),y=Array.isArray(x)?x:[x];for(let e=0;e<y.length;++e){p.hasKey(y[e])||p.add(y[e],g[e],Array.isArray(b)?b[0]:b);const t=o.indexOf(y[e].name);-1!==t&&(u[t]=g[e])}s||Gi(f)}return p.disposeMasks(),i?u:u[0]}function pm(e){const t={};for(const n in e)t[n]=e[n].size;return t}function fm(e,t){const n=new Set,r=[],s={};for(const e of t.names())n.add(e);const i=[],a=[];for(i.push(e);i.length>0;){const e=i[i.length-1];if(n.has(e.name)){i.pop();continue}const t=a[a.length-1]===i.length-1;if(0===e.inputs.length||t)i.pop(),r.push(e),n.add(e.name),t&&a.pop();else{a.push(i.length-1);for(const t of e.inputs)null==s[t.name]&&(s[t.name]=new Set),s[t.name].add(e.name),n.has(t.name)||i.push(t)}}return{sorted:r,recipientMap:s}}function mm(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function gm(e,t){return Vi((()=>Yo(ro(to(e,e),t,!0))))}X().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=cm&&cm.setMaxEntries(e),null!=hm&&hm.setMaxEntries(e)}));class bm extends Li{getConfig(){return{}}}class xm extends bm{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Vi((()=>{const t=gm(e,this.axis),n=Ca(t,0,this.maxValue);return to(e,Pa(n,Zi(uf(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}xm.className="MaxNorm",Pi(xm);class ym extends bm{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Vi((()=>Pa(e,Zi(uf(),gm(e,this.axis)))))}getConfig(){return{axis:this.axis}}}ym.className="UnitNorm",Pi(ym);class wm extends bm{apply(e){return Bo(e)}}wm.className="NonNeg",Pi(wm);class vm extends bm{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Vi((()=>{const t=gm(e,this.axis),n=Zi(to(this.rate,Ca(t,this.minValue,this.maxValue)),to(1-this.rate,t));return to(e,Pa(n,Zi(uf(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}vm.className="MinMaxNorm",Pi(vm);const km={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Im(e){return Ep(e)}function Cm(e,t={}){return Sp(e,zi.getMap().classNameMap,t,"constraint")}function Dm(e){return null==e?null:"string"==typeof e?Cm({className:e in km?km[e]:e,config:{}}):e instanceof bm?e:Cm(e)}async function Em(e){if(null==e)return;const t=[],n=[],r=[];for(const s in e){const i=e[s];if("number"!=typeof i){const e=i;t.push(e.data()),n.push(s),r.push(e)}}if(t.length>0){const s=await Promise.all(t);for(let t=0;t<s.length;++t)e[n[t]]=s[t][0];Gi(r)}}function Nm(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var Sm;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(Sm||(Sm={}));class $m{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Tm{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class Am extends $m{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const s=Vi((()=>Zi(this.totals[e],to(r,n))));this.totals[e]=s,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:Vi((()=>{const n=to(Pa(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),Hi(t[e])})))}}class Fm extends $m{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const s=this.history[r];for(let i=0;i<s.length;++i)if("number"!=typeof s[i]){const a=s[i];e.push(a.data()),t.push(r),n.push(i)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}class Rm extends $m{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||kl,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");R(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,s=null!=n?n():Rr();return(...i)=>{const a=null!=n?n():Rr();return a-s<t||(s=a,r=e(...i)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await Em(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await Em(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await Em(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await Em(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await Em(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):R(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await Em(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await Em(e),await this.trainEnd(e))}}function _m(e,t){return null==e&&(e={}),e instanceof $m?[e]:Array.isArray(e)&&e[0]instanceof $m?e:kp(e).map((e=>new Rm(e,t)))}class Om{constructor(){}static registerCallbackConstructor(e,t){f(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),Om.checkForDuplicate(t),null==Om.constructors[e]&&(Om.constructors[e]=[]),Om.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Om.constructors)Om.constructors[+t].forEach((t=>{if(t===e)throw new pp("Duplicate callback constructor.")}))}static clear(){Om.constructors={}}static createCallbacks(e){const t=[];for(const n in Om.constructors){const r=+n;e>=r&&t.push(...Om.constructors[r])}return t.map((e=>new e))}}function Mm(e,t,n,r,s,i,a,o,u){const l=new Fm,c=[new Am,...Om.createCallbacks(t)];null!=e&&c.push(...e),c.push(l);const h=new Tm(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:i,batchSize:a,verbose:t,doValidation:o,metrics:u}),{callbackList:h,history:l}}function Bm(e,t={},n=!1){return Sp(e,zi.getMap().classNameMap,t,"layer",n)}function Lm(e,t){return Vi((()=>{"float32"!==e.dtype&&(e=ui(e,"float32"));const n=ro(wf(e),t,!0),r=Ia(n.shape,uf()),s=Yo(lo(n,r));return Pa(e,s)}))}function zm(e,t){return Vi((()=>co(wf(no(t,e)),-1)))}function Pm(e,t){return Vi((()=>co(Yi(no(t,e)),-1)))}function Wm(e,t){return Vi((()=>{const n=no(e,t),r=Ca(Yi(e),uf(),Number.MAX_VALUE),s=Yi(Pa(n,r));return to(100,co(s,-1))}))}function Um(e,t,n=!1){return Vi((()=>{if(n)t=qo(t);else{const e=ro(t,t.shape.length-1,!0);t=Pa(t,e)}return t=Ca(t,uf(),1-uf()),Co(ro(to(ui(e,"float32"),Ja(t)),t.shape.length-1))}))}function Vm(e,t,n=!1){return Vi((()=>{const r=ui(qa(function(e){const t=[nf(e.shape)];return ma(e,t)}(e)),"int32"),s=(t=Ca(t,uf(),1-uf())).shape;return Um(ma(Eo(r,s[s.length-1]),s),t,n)}))}function Gm(e,t){return Vi((()=>{let n;return n=Ca(t,uf(),1-uf()),n=Ja(Pa(n,no(1,n))),co(function(e,t){if(!y(e.shape,t.shape))throw new pp(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Vi((()=>{const n=Bo(t),r=Co(Yi(t));return Zi(no(n,to(t,e)),Qa(Va(r)))}))}(e,n),-1)}))}function Hm(e,t){return Vi((()=>{const n=Lm(e,-1),r=Lm(t,-1),s=to(n,r);return Co(ro(s,-1))}))}Om.constructors={};const jm={meanSquaredError:zm,meanAbsoluteError:Pm,meanAbsolutePercentageError:Wm,meanSquaredLogarithmicError:function(e,t){return Vi((()=>{const n=Ca(t,uf(),Number.MAX_VALUE),r=Ja(Zi(1,n)),s=Ca(e,uf(),Number.MAX_VALUE),i=Ja(Zi(1,s));return co(wf(no(r,i)),-1)}))},squaredHinge:function(e,t){return Vi((()=>{const n=lo(0,no(1,to(e,t)));return co(wf(n),-1)}))},hinge:function(e,t){return Vi((()=>{const n=lo(0,no(1,to(e,t)));return co(n,-1)}))},categoricalHinge:function(e,t){return Vi((()=>{const n=ro(to(e,t),-1),r=eo(to(no(1,e),t),-1);return lo(0,Zi(1,no(r,n)))}))},logcosh:function(e,t){return Vi((()=>{const n=Math.log(2),r=no(t,e),s=no(Zi(r,Ko(to(-2,r))),n);return co(s,-1)}))},categoricalCrossentropy:Um,sparseCategoricalCrossentropy:Vm,binaryCrossentropy:Gm,kullbackLeiblerDivergence:function(e,t){return Vi((()=>{const n=Ca(e,uf(),1),r=Ca(t,uf(),1);return ro(to(e,Ja(Pa(n,r))),-1)}))},poisson:function(e,t){return Vi((()=>{const n=Ja(Zi(uf(),t));return co(no(t,to(e,n)),-1)}))},cosineProximity:Hm};function qm(e){if("string"==typeof e){if(e in jm)return jm[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new pp(t)}return e}function Km(e,t){return Vi((()=>{const n=to(.5,$o(t)),r=lf(Xa(t,n),e.dtype);return co(Ua(e,r),-1)}))}function Xm(e,t){return Vi((()=>lf(Ua(ea(e,-1),ea(t,-1)),"float32")))}function Ym(e,t){return Gm(e,t)}function Zm(e,t){return e.rank===t.rank&&(e=Zo(e,[e.rank-1])),(t=ea(t,-1)).dtype!==e.dtype&&(t=ui(t,e.dtype)),ui(Ua(e,t),"float32")}const Jm=Um,Qm=Vm,eg={binaryAccuracy:Km,categoricalAccuracy:Xm,precision:function(e,t){return Vi((()=>{const n=function(e,t){return Vi((()=>ui(ro(io(Ua(e,1),Ua(t,1))),"float32")))}(e,t),r=function(e,t){return Vi((()=>ui(ro(io(Ua(e,0),Ua(t,1))),"float32")))}(e,t),s=Zi(n,r);return ui(ru(Xa(s,0),Pa(n,s),0),"float32")}))},categoricalCrossentropy:Jm,sparseCategoricalCrossentropy:Qm,mse:zm,MSE:zm,mae:Pm,MAE:Pm,mape:Wm,MAPE:Wm,cosine:Hm};function tg(e){if("string"==typeof e&&e in eg)return eg[e];if("string"!=typeof e&&null!=e)return e;throw new pp(`Unknown metric ${e}`)}function ng(e){if(yp(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(jm))if(jm[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(eg))if(eg[n]===e){t=n;break}return void 0!==t?t:e.name}}function rg(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!sg(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function sg(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!sg(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!sg(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function ig(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function ag(e,t,n){let r,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){s="multiple"}try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}ig([`${e.name} (${e.getClassName()})`,s,r,e.countParams().toString()],t,n)}function og(e,t,n,r){let s,i;try{i=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){i="multiple"}try{s=JSON.stringify(e.outputShape)}catch(e){s="multiple"}const a=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],s=t.tensorIndices[e];a.push(`${n}[${r}][${s}]`)}const o=e.name,u=e.getClassName(),l=0===a.length?"":a[0];ig([`${o} (${u})`,i,s,e.countParams().toString(),l],t,r);for(let e=1;e<a.length;++e)ig(["","","","",a[e]],t,r)}function ug(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function lg(e,t){if(null===e)return null;if("string"==typeof e)return Cp(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];ug(t,s,r)?n.push(r):n.push(lg(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=Cp(n);t[e]=lg(r,e)}}return t}}function cg(e,t){if(null==e)return null;if("string"==typeof e)return Ip(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];ug(t,s,r)?n.push(r):n.push(cg(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];t[Ip(n)]="name"!==n&&"className"!==n||"string"!=typeof r?cg(r,n):r}return t}}class hg extends am{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Pp(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Tp(this.inputs).length!==this.inputs.length)throw new pp(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);Tp(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;yp(0===n,"input layer has >1 nodes"),yp(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof um))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},s={},i={},a=[],o=(e,t,n,r,s,u)=>{null!=r&&null!=s&&null!=u||(r=e.sourceLayer,s=e.nodeIndex,u=e.tensorIndex);const l=r.inboundNodes[s];if(-1!==n.indexOf(l))throw new dp(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(l))return;this.containerNodes.add(hg.nodeKey(r,s)),r.id in i||(i[r.id]=Object.keys(i).length),-1===n.indexOf(l)&&n.push(l);const c=l.inboundLayers.length;for(let e=0;e<c;e++){const r=l.inputTensors[e],s=l.inboundLayers[e],i=l.nodeIndices[e],a=l.tensorIndices[e];o(r,t,n,s,i,a)}for(t.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);a.push(l)},u=[],l=[];for(const e of this.outputs)o(e,u,l);const c=a.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let i=t[e.id];const a=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];i=Math.max(i,a),r[e.outboundLayer.id]=i,s[e.outboundLayer.id]=e.outboundLayer,t[e.id]=i;for(let r=0;r<e.inboundLayers.length;r++){const s=e.inboundLayers[r],a=e.nodeIndices[r],o=s.inboundNodes[a],u=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(i+1,u),n[o.id]=o}}const h={};for(const e in t){const r=t[e];r in h||(h[r]=[]),h[r].push(n[e])}const d={};for(const e in r){const t=r[e];t in d||(d[t]=[]),d[t].push(s[e])}let p=Object.keys(d).map((e=>parseInt(e,10))).sort($p);this.layers=[];for(const e of p){const t=d[e];t.sort(((e,t)=>{const n=i[e.id],r=i[t.id];return n<r?-1:n>r?1:0}));for(const e of t)e instanceof hg&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,p=Object.keys(h).map((e=>parseInt(e,10))).sort($p);const f=this.inputs.slice(),m=[];for(const e of p)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new dp(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new dp(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new sm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new pp("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new pp(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}const s=[];for(const r in e){let i=r;if(null==n[r]){const e=r.split("/");i=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[i])s.push([n[i],e[r]]);else if(t)throw new pp(`Provided weight data has no target variable: ${r}`);delete n[i]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new pp(`${e.length} of ${r} weights are not set: ${e}`)}em(s)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers 4.0.0",t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=cg(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Vi((()=>{e=kp(e);const n=new lm;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return dm(this.outputs,n,t)}))}computeMask(e,t){return Vi((()=>{let n;return e=kp(e),n=null==t?xp(null,e.length):kp(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=Kf(e);if(t.length!==this.inputLayers.length)throw new pp(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],s=t[e];n[r.name+"_0_0"]=s}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort($p);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const s=e.inboundLayers[t],i=e.nodeIndices[t],a=e.tensorIndices[t],o=n[`${s.name}_${i}_${a}`];r.push(o)}const s=Kf(t.computeOutputShape(vp(r))),i=t.inboundNodes.indexOf(e);for(let e=0;e<s.length;e++)n[`${t.name}_${i}_${e}`]=s[e]}}const s=[],i=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],s=`${t.name}_${n}_${r}`;i.push(s)}for(let e=0;e<i.length;e++){const t=i[e];yp(t in n),s.push(n[t])}return vp(s)}runInternalGraph(e,t){null==t&&(t=xp(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const s=this.inputs[r],i=e[r],a=t[r];n[s.id]=[i,a]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort($p);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,s=e.outputTensors,i=new Array;for(const e of r)e.id in n&&i.push(n[e.id]);if(i.length===r.length){let r,a,o,u,l={};if(null!=e.callArgs&&(l=e.callArgs),1===i.length){const[e,n]=i[0];null==l.mask&&(l.mask=n),o=kp(t.call(e,l)),u=kp(t.computeMask(e,n)),r=[e],a=[n]}else r=i.map((e=>e[0])),a=i.map((e=>e[1])),null==l.mask&&(l.mask=a),o=kp(t.call(r,l)),u=kp(t.computeMask(r,a));if(t.activityRegularizer)throw new fp("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<s.length;++e){const t=s[e],r=o[e],i=u[e];n[t.id]=[r,i]}}}}const s=[],i=[],a=[];for(const e of this.outputs){yp(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];a.push(t.shape),s.push(t),i.push(r)}return[s,i,a]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof hg?1:0;for(let r=0;r<e.inboundNodes.length;r++){const s=hg.nodeKey(e,r);this.containerNodes.has(s)&&(t[s]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new pp(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new pp("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new pp(`No such layer: ${e}`)}calculateLosses(){return Vi((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=hg.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),s=e.getConfig(),i=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],s=hg.nodeKey(e,n);let a={};if(this.containerNodes.has(s)){if(r.callArgs)try{JSON.stringify(r.callArgs),a=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),a={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const s=r.inboundLayers[n],i=r.nodeIndices[n],o=r.tensorIndices[n];let u=t[hg.nodeKey(s,i)];null==u&&(u=0),e.push([s.name,u,o,a])}i.push(e)}}}const a={};a.name=e.name,a.className=r,a.config=s,a.inboundNodes=i,n.push(a)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],s=this.inputLayersNodeIndices[e],i=hg.nodeKey(n,s);if(!this.containerNodes.has(i))continue;let a=t[i];null==a&&(a=0);const o=this.inputLayersTensorIndices[e];r.push([n.name,a,o])}e.inputLayers=r;const s=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],i=hg.nodeKey(n,r);if(!this.containerNodes.has(i))continue;let a=t[i];null==a&&(a=0);const o=this.outputLayersTensorIndices[e];s.push([n.name,a,o])}return e.outputLayers=s,e}static fromConfig(e,t,n={},r=!1){const s={},i={};function a(e,t){e.name in i?i[e.name].push(t):i[e.name]=[t]}function o(e,t){const n=[];let r;for(const i of t){const o=i[0],u=i[1],l=i[2];if(r=null==i[3]?{}:i[3],!(o in s))return void a(e,t);const c=s[o];if(c.inboundNodes.length<=u)return void a(e,t);const h=c.inboundNodes[u];n.push(h.outputTensors[l])}n.length>0&&e.apply(vp(n),r)}function u(e){const n=e.name,i=Bm(e,null!=t.customObjects?t.customObjects:{});i.setFastWeightInitDuringBuild(r),s[n]=i,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new pp(`Corrupted configuration, expected array for nodeData: ${e}`);a(i,e)}))}const l=t.name,c=t.layers;for(const e of c)u(e);for(;!Ap(i);)for(const e of c){const t=s[e.name];if(t.name in i){const e=i[t.name];delete i[t.name];for(const n of e)o(t,n)}}const h=[],d=[],p=t.inputLayers;for(const e of p){const t=e[0],n=e[1],r=e[2];yp(t in s);const i=s[t].inboundNodes[n].outputTensors;h.push(i[r])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],r=e[2];yp(t in s);const i=s[t].inboundNodes[n].outputTensors;d.push(i[r])}return new e({inputs:h,outputs:d,name:l})}get stateful(){if(this._stateful)throw new pp("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Vi((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function dg(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function pg(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=Vi((()=>{if(1===e.shape.length)return li(e);if(2===e.shape.length){if(e.shape[1]>1)return ea(e,1);if(1===e.shape[1])return ma(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());Gi(t);const s=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);s.push(n[e])})),eu(s,"float32")}return null}function fg(e,t){return to(e,t)}function mg(e,t){let n,r;const s=t;n=s.xs,r=s.ys,f(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const i=gg("input",e.inputNames,n),a=gg("output",e.outputNames,r),o=i[0].shape[0];f(i.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),f(a.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<i.length;t++)f(i[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<a.length;t++)f(a[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${a[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:i,ys:a}}function gg(e,t,n){if(n instanceof Kr)return[n];if(Array.isArray(n))return f(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const s of t){if(null==n[s])throw new pp(`The feature data generated by the dataset lacks the required ${e} key '${s}'.`);r.push(n[s])}return r}}function bg(e){return"function"==typeof e.iterator}function xg(e){f(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function yg(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>hf(e,t,n-t))):hf(e,t,n-t)}function wg(e,t){return Vi((()=>null==e?null:Array.isArray(e)?e.map((e=>wg(e,t))):yf(e,"int32"===t.dtype?t:ui(t,"int32"))))}function vg(e,t){const n=[];let r=0,s=null;for(;r<e;)s=r+t,s>=e&&(s=e),n.push([r,s]),r=s;return n}function kg(e){const t=[];e instanceof Kr&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(cf(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function Ig(e,t){if(null==e)return;const n=[];if(t instanceof Kr)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof Kr)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const t in e){const s=e[t];-1===n.indexOf(s.id)&&r.push(s)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function Cg(e){return Array.isArray(e)}function Dg(e){return!function(e){return e instanceof Kr}(e)&&!Cg(e)}function Eg(e,t,n,r=!0,s=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(Cg(e)&&e.length>0)t=!0;else if(Dg(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new pp(`Error when checking model ${s} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let i;if(Dg(e)){i=[];for(const n of t){if(null==e[n])throw new pp(`No data provided for "${n}". Need data for each key in: ${t}`);i.push(e[n])}}else if(Cg(e)){if(e.length!==t.length)throw new pp(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);i=e}else{if(t.length>1)throw new pp(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);i=[e]}if(i=kg(i),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const a=i[e];if(a.shape.length!==n[e].length)throw new pp(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${a.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!r)continue;const i=a.shape[t],o=n[e][t];if(null!=o&&o>=0&&i!==o)throw new pp(`${s} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${s} received an input with ${a.shape[0]} examples, each with shape [${a.shape.slice(1,a.shape.length)}] (tensor shape [${a.shape}])`)}}return i}function Ng(e,t,n,r=!0,s=""){let i;if(Array.isArray(e)){if(e.length!==t.length)throw new pp(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);i=e}else{if(t.length>1)throw new pp(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);i=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const a=i[e];if(a.shape.length!==n[e].length)throw new pp(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let i=0;i<n[e].length;++i){if(0===i&&!r)continue;const o=a.shape[i],u=n[e][i];if(null!=u&&u!==o)throw new pp(`Error when checking ${s}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}class Sg extends hg{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new pp("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,r=console.log){const s=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const s of n.inboundNodes)if(-1!==r.indexOf(s)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),i=["Layer (type)","Input Shape","Output shape","Param #"];let a;if(s?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!s){i.push("Receives inputs"),a=[];for(const t in e.nodesByDepth)a.push(...e.nodesByDepth[t])}r("_".repeat(t)),ig(i,n,r),r("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)s?ag(o[e],n,r):og(o[e],n,a,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=function(e){let t;return t=null!=e.collectedTrainableWeights?Zf(e.collectedTrainableWeights):Zf(e.trainableWeights),t}(e),l=Zf(e.nonTrainableWeights);r(`Total params: ${u+l}`),r(`Trainable params: ${u}`),r(`Non-trainable params: ${l}`),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>wl.adagrad(.01),Adadelta:()=>wl.adadelta(1,.95,uf()),Adam:()=>wl.adam(.001,.9,.999,uf()),Adamax:()=>wl.adamax(.002,.9,.999,uf(),0),RMSProp:()=>wl.rmsprop(.001,.9,0,uf()),SGD:()=>wl.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new pp(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Xi))throw new pp("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new pp(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>qm(e)))}else{const n=qm(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new pp(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(qm(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Zp("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),s=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Zp("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,i;for(const a of t){if("string"==typeof a&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(a)){const t=this.internalOutputShapes[e];let s;1===t[t.length-1]||this.lossFunctions[e]===Gm?-1!==["accuracy","acc"].indexOf(a)?r=Km:-1!==["crossentropy","ce"].indexOf(a)&&(r=Ym):this.lossFunctions[e]===Vm?-1!==["accuracy","acc"].indexOf(a)?r=Zm:-1!==["crossentropy","ce"].indexOf(a)&&(r=Qm):-1!==["accuracy","acc"].indexOf(a)?r=Xm:-1!==["crossentropy","ce"].indexOf(a)&&(r=Jm),-1!==["accuracy","acc"].indexOf(a)?s="acc":-1!==["crossentropy","ce"].indexOf(a)&&(s="ce"),i=r,n=""+s}else{const e=tg(a);i=e,n=""+ng(a)}let t;Zp(n,(()=>{t=i})),s(e,n,t)}})(r[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;xg(r);const s=this.standardizeUserDataXY(e,t,!0,r);try{const i=s[0].concat(s[1]);this.makeTestFunction();const a=this.testFunction;return vp(this.testLoop(a,i,r,n.verbose,n.steps))}finally{Ig(s[0],e),Ig(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,s=e.testFunction;let i=[];if(n.verbose>0)throw new fp("Verbose mode is not implemented yet.");f(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const a="function"==typeof t.next?t:await t.iterator();let o=0,u=0;for(;!r||u<n.batches;){const t=await a.next();if(i=Vi((()=>{if(t.value){const{xs:n,ys:r}=mg(e,t.value),a=n.concat(r),l=Vi((()=>s(a)));if(Gi(a),0===u)for(let e=0;e<l.length;++e)i.push(Ki(0));const c=a[0].shape[0];for(let e=0;e<l.length;++e){const t=l[e],n=i[e];i[e]=Vi((()=>Zi(i[e],to(c,t)))),u>0&&Gi(n)}Gi(l),o+=c,++u}return i})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<i.length;++e){const t=i[e];i[e]=Pa(i[e],o),Gi(t)}return vp(i)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let s;if(null!=n){if(s=null,null!=t)throw new pp(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new pp(`Either the input data should have a defined shape, or ${r} shoud be specified.`);s=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return s}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new pp("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],s=this.retrieveSymbolicTensors(r),i=new lm;if(e instanceof Kr&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new pp(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)i.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new pp(`No value is provided for the model's input ${t.name}`);i.add(t,n)}const a=dm(s,i);return n?a:a[0]}retrieveSymbolicTensors(e){const t=xp(null,e.length);let n=e.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],i=s.map((e=>e.name));for(let r=0;r<e.length;++r){const a=i.indexOf(e[r]);if(-1!==a&&(t[r]=s[a],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new pp(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return Vi((()=>{const r=this.checkNumSamples(e);if(n)throw new fp("Verbose predictLoop() is not implemented yet.");const s=vg(r,t),i=this.outputs.map((e=>[]));for(let t=0;t<s.length;++t)Vi((()=>{const n=s[t][0],r=s[t][1],i=yg(e,n,r),a=[];if(Array.isArray(i))for(let e=0;e<i.length;++e)a.push({key:this.inputs[e],value:i[e]});else a.push({key:this.inputs[0],value:i});const o=new lm(a);return dm(this.outputs,o)})).forEach(((e,t)=>i[t].push(e)));return vp(i.map((e=>Da(e,0))))}))}predict(e,t={}){const n=kg(e);Ng(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==t.batchSize?32:t.batchSize;return xg(r),this.predictLoop(n,r)}finally{Ig(n,e)}}predictOnBatch(e){Ng(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new dp("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===Vm?s.push(t.slice(0,t.length-1).concat([1])):s.push(t)}if(function(e,t,n){const r=Tp(e.map((e=>e.shape[0])));r.sort();const s=Tp(t.map((e=>e.shape[0])));if(s.sort(),r.length>1)throw new pp(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(s.length>1)throw new pp(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&s.length>0&&!y(r,s))throw new pp(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}(e=Eg(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Eg(t,this.feedOutputNames,s,!1,"target")),function(e,t,n){const r=[zm,Gm,Um];for(let s=0;s<e.length;++s){const i=e[s],a=t[s],o=n[s];if(null!=a){if(a===Um&&1===i.shape[i.shape.length-1])throw new pp(`You are passing a target array of shape ${i.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(a)){const e=i.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],s=t[n];if(null!=s&&r!==s)throw new pp(`A target Tensor with shape ${i.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new pp(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,s=!0,i){const[a,o]=this.standardizeUserDataXY(e,t,s,i);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const e=dg(r,this.outputNames);u=[];for(let t=0;t<e.length;++t)u.push(await pg(o[t],null,e[t]))}return[a,o,u]}testLoop(e,t,n,r=0,s){return Vi((()=>{const i=this.checkNumSamples(t,n,s,"steps"),a=[];if(r>0)throw new fp("Verbose mode is not implemented yet.");if(null!=s)throw new fp("steps mode in testLoop() is not implemented yet");{const r=vg(i,n),s=eu(af(0,i));for(let n=0;n<r.length;++n){const i=r[n][0],o=r[n][1],u=hf(s,i,o-i),l=wg(t,u),c=e(l);if(0===n)for(let e=0;e<c.length;++e)a.push(Ki(0));for(let e=0;e<c.length;++e){const t=c[e];a[e]=Zi(a[e],to(o-i,t))}}for(let e=0;e<a.length;++e)a[e]=Pa(a[e],i)}return a}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let s=r;wp(e,r)>1&&(s+=`_${wp(e.slice(0,n),r)}`),t.push(s)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),i=[],a=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const a=new lm(e),o=dm(this.outputs,a,{training:!0});let u;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],o[e]);null!=s[e]&&(n=fg(n,s[e]));const i=co(n);t.push(i),u=0===e?n:Zi(u,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],s=this.metricsTensors[e][1];n=co(t(r[s],o[s]))}Hi(n),i.push(n)}return u=co(u),this.calculateLosses().forEach((e=>{u=Zi(u,e)})),u}),!0,a)].concat(i)}}makeTestFunction(){this.testFunction=e=>Vi((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let e=0;e<this.inputs.length;++e)i.push({key:this.inputs[e],value:r[e]});const a=new lm(i),o=dm(this.outputs,a);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],i=co(r(s[e],o[e]));n=0===e?i:Zi(n,i),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],i=co(n(s[r],o[r]));t.push(i)}return t}))}async fit(e,t,n={}){return async function(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,i,a,o,u,l,h,d,p;e.isTraining=!0;try{const f=null==r.batchSize?32:r.batchSize;xg(f);const m=!1,g=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,m,f);s=g[0],i=g[1],p=g[2];let b,x=!1;if(null!=r.validationData&&r.validationData.length>0){if(x=!0,2!==r.validationData.length)throw 3===r.validationData.length?new fp("validationData including sample weights is not supported yet."):new pp(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);u=r.validationData[0],l=r.validationData[1];const t=!0,n=await e.standardizeUserData(u,l,null,null,t,f);h=n[0],d=n[1],b=h.concat(d)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){x=!0;const e=Math.floor(s[0].shape[0]*(1-r.validationSplit)),t=s[0].shape[0];h=yg(s,e,t),a=s,s=yg(s,0,e),d=yg(i,e,t),o=i,i=yg(i,0,e),b=h.concat(d)}else null!=r.validationSteps&&(x=!0);const y=s.concat(i).concat(p);e.checkTrainableWeightsConsistency();const w=e.makeTrainFunction(),v=e.getDedupedMetricsNames();let k,I;x?(e.makeTestFunction(),k=e.testFunction,I=v.slice().concat(v.map((e=>"val_"+e)))):(k=null,b=[],I=v.slice());const C=_m(r.callbacks,r.yieldEvery),D=await async function(e,t,n,r,s,i,a,o,u,l,h,d,p,f,m){null==s&&(s=32),null==i&&(i=1),null==h&&(h=!0),null==p&&(p=0);let g=!1;null!=u&&null!=l&&(g=!0);const b=e.checkNumSamples(n,s,f,"steps_per_epoch");let x;null!=b&&(x=af(0,b)),null==a&&(a=1);const{callbackList:y,history:w}=Mm(o,a,i,p,b,f,s,g,d);y.setModel(e),e.history=w,await y.onTrainBegin(),e.stopTraining_=!1;for(let a=p;a<i;++a){await y.onEpochBegin(a);const i={};{if("batch"===h)throw new fp("batch shuffling is not implemneted yet");h&&c(x);const a=eu(x),o=vg(b,s);for(let c=0;c<o.length;++c){const h={};if(await y.onBatchBegin(c,h),Vi((()=>{const d=o[c][0],p=o[c][1],f=hf(a,d,p-d);h.batch=c,h.size=p-d;const m=wg(n,f),b=t(m);for(let e=0;e<r.length;++e){const t=r[e],n=b[e];h[t]=n,Hi(n)}if(c===o.length-1&&g){const t=e.testLoop(u,l,s);for(let e=0;e<r.length;++e){const n=r[e],s=t[e];Hi(s),i["val_"+n]=s}}})),await y.onBatchEnd(c,h),Nm(h),e.stopTraining_)break}a.dispose()}if(await y.onEpochEnd(a,i),e.stopTraining_)break}return await y.onTrainEnd(),await e.history.syncData(),e.history}(e,w,y,v,f,r.epochs,r.verbose,C,k,b,r.shuffle,I,r.initialEpoch,null);return D}finally{e.isTraining=!1,Ig(s,t),Ig(i,n),Ig(a,t),Ig(o,n),Ig(h,u),Ig(d,l),null!=p&&Gi(p)}}(this,e,t,n)}async fitDataset(e,t){return async function(e,t,n){const r=null!=n.batchesPerEpoch;if(f(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),f(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),f(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),f(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),f(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const s=null!=n.validationData;let i,a;if(s)if(bg(n.validationData))f(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new fp("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);i=e.xs,a=e.ys}const o=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let l;l=s?u.slice().concat(u.map((e=>"val_"+e))):u.slice();const c=_m(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=Mm(c,h,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,s,l);d.setModel(e),e.history=p,await d.onTrainBegin(),e.stopTraining_=!1;let m=null==n.initialEpoch?0:n.initialEpoch,g=await t.iterator();for(;m<n.epochs;){const l={};await d.onEpochBegin(m);let c=0,h=0;for(r||(g=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await g.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:s}=mg(e,t.value),i={};i.batch=h,i.size=r[0].shape[0],await d.onBatchBegin(h,i);const a=[];if(null!=n.classWeight){const t=dg(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)a.push(await pg(s[e],null,t[e]))}const l=r.concat(s).concat(a),p=o(l);Gi(l);for(let e=0;e<u.length;++e){const t=u[e],n=p[e];i[t]=n,Hi(n)}await d.onBatchEnd(h,i),Nm(i),h++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(s){let t;t=bg(n.validationData)?kp(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):kp(e.evaluate(i,a,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)l[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(m,l),m++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],s=n[1],i=this.makeTrainFunction()(r.concat(s)),a=[];for(const e of i){const t=await e.data();a.push(t[0])}return Gi(i),Ig(n[0],e),Ig(n[1],t),vp(a)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:s[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=Ui().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Ui().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=Ip(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>Ip(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=Ip(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Ip(ng(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>Ip(ng(e))));{const e={};for(const t in this.metrics)e[t]=Ip(ng(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Bm(lg(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=Cp(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>Cp(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=Cp(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>Cp(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=Cp(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=(n=e,Ms.getSaveHandlers(n));if(0===t.length)throw new pp(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new pp(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}var n;if(null==e.save)throw new pp("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const r=await Ss(this.getNamedWeights(t)),s={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v4.0.0",convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){s.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:n}=await Ss(await this.optimizer.getWeights(),e);r.specs.push(...n),r.data=Fs([r.data,t])}if(null!=this.userDefinedMetadata){const e=!0;rg(this.userDefinedMetadata,this.name,e),s.userDefinedMetadata=this.userDefinedMetadata}return s.weightData=r.data,s.weightSpecs=r.specs,e.save(s)}setUserDefinedMetadata(e){rg(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Sg.className="Model",Pi(Sg);class $g extends Sg{}async function Tg(e,t){if(null==t&&(t={}),"string"==typeof e){const s=(n=e,r=t,Ms.getLoadHandlers(n,r));if(0===s.length)s.push(function(e,t){return bi(e,t)}(e,t));else if(s.length>1)throw new pp(`Found more than one (${s.length}) load handlers for URL '${e}'`);e=s[0]}var n,r;return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new pp("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await e.load();let s=r.modelTopology;null!=s.model_config&&(s=s.model_config);const i=null==n.strict||n.strict,a=null!=r.weightData&&null!=r.weightSpecs&&i,o=Bm(lg(s),void 0,a),u=r.trainingConfig;if(null!=u&&o.loadTrainingConfig(u),null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new pp("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=function(e,t){const n={};let r,s=0;for(const i of t){const t=i.name,a=i.dtype,o=i.shape,u=x(o);let l;if("quantization"in i){const n=i.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${i.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${i.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==a)throw new Error(`Weight ${i.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${a}.`)}const o=Ns[n.dtype],c=e.slice(s,s+u*o),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===a)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];l[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=Os()),l=r(h)}else{if("int32"!==a)throw new Error(`Unsupported dtype in weight '${t}': ${a}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);l=new Int32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];l[e]=Math.round(t*n.scale+n.min)}}s+=u*o}else if("string"===a){const t=x(i.shape);l=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(s,s+4))[0];s+=4;const n=new Uint8Array(e.slice(s,s+t));l.push(n),s+=t}}else{const r=Ns[a],i=e.slice(s,s+u*r);if("float32"===a)l=new Float32Array(i);else if("int32"===a)l=new Int32Array(i);else if("bool"===a)l=new Uint8Array(i);else{if("complex64"!==a)throw new Error(`Unsupported dtype in weight '${t}': ${a}`);{l=new Float32Array(i);const e=new Float32Array(l.length/2),r=new Float32Array(l.length/2);for(let t=0;t<e.length;t++)e[t]=l[2*t],r[t]=l[2*t+1];const s=Es(e,o,"float32"),a=Es(r,o,"float32");n[t]=Cs(s,a),s.dispose(),a.dispose()}}s+=u*r}"complex64"!==a&&(n[t]=Es(l,o,a))}return n}(e,t),r={},s=[];return t.forEach((e=>{"optimizer"===e.group?s.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]})),{modelWeights:r,optimizerWeights:s}}(r.weightData,r.weightSpecs);o.loadWeights(e,i),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),Gi(e),Gi(t.map((e=>e.tensor)))}return o}(e,0,t)}$g.className="Functional",Pi($g);class Ag extends Sg{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Pp("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new pp(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Ag||e instanceof Sg;let n;if(t){if(n=e,1!==n.outputs.length)throw new pp("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new pp("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new pp("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new pp("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new um({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new pp(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new pp("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=om(this.outputs[0])}this.inboundNodes=[],new sm({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:xp(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Yf(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Sg({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new dp("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new dp("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new dp("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new dp("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let s,i={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new pp("Legacy serialization format not supported yet.");s=t}else f(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),s=t.layers,delete t.layers,i=t;const a=new e(i);if(!(a instanceof Ag))throw new fp(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const e of s){const t=Bm(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),a.add(t)}return a}set stopTraining(e){if(null==this.model)throw new pp("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new pp("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}Ag.className="Sequential",Pi(Ag);class Fg extends Li{getConfig(){return{}}}class Rg extends Fg{apply(e,t=1){return function(e,t=1){if(1!==t)throw new fp(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Wa(e)}(e,t)}}Rg.className="elu",Pi(Rg);class _g extends Fg{apply(e){return zo(e)}}_g.className="selu",Pi(_g);class Og extends Fg{apply(e){return Bo(e)}}Og.className="relu",Pi(Og);class Mg extends Fg{apply(e){return Vi((()=>po(6,Bo(e))))}}Mg.className="relu6",Pi(Mg);class Bg extends Fg{apply(e){return e}}Bg.className="linear",Pi(Bg);class Lg extends Fg{apply(e){return Wo(e)}}Lg.className="sigmoid",Pi(Lg);class zg extends Fg{apply(e){return function(e){return Vi((()=>{const t=Zi(.5,to(.2,e));return Ca(t,0,1)}))}(e)}}zg.className="hardSigmoid",Pi(zg);class Pg extends Fg{apply(e){return Ko(e)}}Pg.className="softplus",Pi(Pg);class Wg extends Fg{apply(e){return function(e){return Vi((()=>Pa(e,Zi(Yi(e),1))))}(e)}}Wg.className="softsign",Pi(Wg);class Ug extends Fg{apply(e){return Qo(e)}}Ug.className="tanh",Pi(Ug);class Vg extends Fg{apply(e,t=-1){return qo(e,t)}}Vg.className="softmax",Pi(Vg);class Gg extends Fg{apply(e,t=-1){return so(e,t)}}Gg.className="logSoftmax",Pi(Gg);class Hg extends Fg{apply(e,t=1){return Vi((()=>to(Wo(to(e,t)),e)))}}Hg.className="swish",Pi(Hg);class jg extends Fg{apply(e){return Vi((()=>to(e,Qo(Ko(e)))))}}function qg(e){return e.getClassName()}function Kg(e,t={}){return Sp(e,zi.getMap().classNameMap,t,"activation")}function Xg(e){if(null==e){return Kg({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},Kg(t)}return e instanceof Fg?e:Kg(e)}jg.className="mish",Pi(jg);class Yg extends Li{}class Zg extends Yg{constructor(e){super(),function(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Vi((()=>{let t=No([1]);return this.hasL1&&(t=Zi(t,ro(to(this.l1,Yi(e))))),this.hasL2&&(t=Zi(t,ro(to(this.l2,wf(e))))),ma(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Zg.className="L1L2",Pi(Zg);const Jg={l1l2:"L1L2"};function Qg(e){return Ep(e)}function eb(e,t={}){return Sp(e,zi.getMap().classNameMap,t,"regularizer")}function tb(e){return null==e?null:"string"==typeof e?eb({className:e in Jg?Jg[e]:e,config:{}}):e instanceof Yg?e:eb(e)}class nb extends am{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Xf(e);let n=Bo(e);return null!=this.maxValue&&(n=Ca(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}nb.className="ReLU",Pi(nb);class rb extends am{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Xf(e);return Za(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}rb.className="LeakyReLU",Pi(rb);class sb extends am{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=jf(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=tb(e.alphaRegularizer),this.alphaConstraint=Dm(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new pp(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=Yf(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new tm({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Xf(e),Ao(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Hf(this.alphaInitializer),alphaRegularizer:Qg(this.alphaRegularizer),alphaConstraint:Im(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}sb.className="PReLU",Pi(sb);class ib extends am{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new fp(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Xf(e);return Wa(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}ib.className="ELU",Pi(ib);class ab extends am{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Xf(e);return to(n,ui(Xa(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}ab.className="ThresholdedReLU",Pi(ab);class ob extends am{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Vg).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=Xf(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function ub(e,t,n){if("number"==typeof e)return xp(e,t);if(e.length!==t)throw new pp(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){const i=e[s];if((r=i)!==parseInt(r.toString(),10))throw new pp(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${i}`)}return e;var r}function lb(e,t,n,r,s=1){if(null==e)return e;let i;return i="same"===n?e:e-(t+(t-1)*(s-1))+1,Math.floor((i+r-1)/r)}function cb(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+sf([n-t,0]);else{if("same"!==r)throw new pp(`Unsupport padding mode: ${r}.`);e*=t}return e}function hb(e,t){return Vi((()=>(qp(t),"channelsFirst"===t?ou(e,[0,2,3,1]):e)))}function db(e,t){return Vi((()=>(qp(t),"channelsFirst"===t?ou(e,[0,2,3,4,1]):e)))}function pb(e,t,n,r=[1,1],s="valid",i,a,o=null){return Vi((()=>{if(null==i&&(i="channelsLast"),qp(i),3!==e.rank&&4!==e.rank)throw new pp(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new pp(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=hb(e,i);if("causal"===s)throw new fp("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=wu({x:u,filter:t,strides:r,pad:"same"===s?"same":"valid",dilations:a,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===i&&(u=ou(u,[0,3,1,2])),u}))}ob.className="Softmax",Pi(ob);class fb extends am{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",fb.verifyArgs(t),this.rank=e,_p(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new fp(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=ub(t.kernelSize,e,"kernelSize"),this.strides=ub(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Kp(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,qp(this.dataFormat),this.activation=Xg(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=jf(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Dm(t.biasConstraint),this.biasRegularizer=tb(t.biasRegularizer),this.activityRegularizer=tb(t.activityRegularizer),this.dilationRate=ub(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new pp(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new pp(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new pp(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(yp("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!Rp(e.kernelSize,"number",1,3))throw new pp(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:qg(this.activation),useBias:this.useBias,biasInitializer:Hf(this.biasInitializer),biasRegularizer:Qg(this.biasRegularizer),activityRegularizer:Qg(this.activityRegularizer),biasConstraint:Im(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class mb extends fb{constructor(e,t){super(e,t),this.kernel=null,mb.verifyArgs(t),this.filters=t.filters,_p(this.filters,"filters"),this.kernelInitializer=jf(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Dm(t.kernelConstraint),this.kernelRegularizer=tb(t.kernelRegularizer)}build(e){e=Yf(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new pp(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Vi((()=>{let t;e=Xf(e);const n=null==this.bias?null:this.bias.read(),r=Mp(this.activation.getClassName());if(null!=r&&2===this.rank)t=pb(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,s="valid",i,a=1){return Vi((()=>{if(null==i&&(i="channelsLast"),qp(i),3!==e.shape.length)throw new pp(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new pp(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new pp(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===i&&(e=ou(e,[0,2,1])),"causal"===s)throw new fp("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Aa(e,t,r,"same"===s?"same":"valid","NWC",a);return null!=n&&(o=kf(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=pb(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new fp("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],s="valid",i,a){return Vi((()=>{if(null==i&&(i="channelsLast"),qp(i),4!==e.rank&&5!==e.rank)throw new pp(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new pp(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=db(e,i);if("causal"===s)throw new fp("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=_a(o,t,r,"same"===s?"same":"valid","NDHWC",a),null!=n&&(o=kf(o,n)),"channelsFirst"===i&&(o=ou(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=Yf(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=lb(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:Hf(this.kernelInitializer),kernelRegularizer:Qg(this.kernelRegularizer),kernelConstraint:Im(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new pp(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class gb extends mb{constructor(e){super(2,e),gb.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Rp(e.kernelSize,"number",1,2))throw new pp(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}gb.className="Conv2D",Pi(gb);class bb extends mb{constructor(e){super(3,e),bb.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new pp(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}bb.className="Conv3D",Pi(bb);class xb extends gb{constructor(e){if(super(e),this.inputSpec=[new tm({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new pp(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=Yf(e)).length)throw new pp("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new pp("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new tm({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return Vi((()=>{let t=Xf(e);if(4!==t.shape.length)throw new pp(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,i;"channelsFirst"===this.dataFormat?(s=2,i=3):(s=1,i=2);const a=n[s],o=n[i],u=this.kernelSize[0],l=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=[r,cb(a,c,u,this.padding),cb(o,h,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=ou(t,[0,2,3,1]));let p=Ra(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=ou(p,[0,3,1,2])),null!=this.bias&&(p=kf(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(e){const t=(e=Yf(e)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const i=this.kernelSize[0],a=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[r]=cb(t[r],o,i,this.padding),t[s]=cb(t[s],u,a,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}xb.className="Conv2DTranspose",Pi(xb);class yb extends bb{constructor(e){if(super(e),this.inputSpec=[new tm({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new pp(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=Yf(e)).length)throw new pp("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new pp("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new tm({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return Vi((()=>{let t=Xf(e);if(5!==t.shape.length)throw new pp(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,i,a;"channelsFirst"===this.dataFormat?(a=2,s=3,i=4):(a=1,s=2,i=3);const o=n[a],u=n[s],l=n[i],c=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],f=this.strides[1],m=this.strides[2],g=[r,cb(o,p,c,this.padding),cb(u,f,h,this.padding),cb(l,m,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=ou(t,[0,2,3,4,1]));let b=Ma(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(b=ou(b,[0,4,1,2,3])),null!==this.bias&&(b=kf(b,this.bias.read(),this.dataFormat)),null!==this.activation&&(b=this.activation.apply(b)),b}))}computeOutputShape(e){const t=(e=Yf(e)).slice();let n,r,s,i;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3,i=4):(n=4,r=1,s=2,i=3);const a=this.kernelSize[0],o=this.kernelSize[1],u=this.kernelSize[2],l=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[r]=cb(t[r],l,a,this.padding),t[s]=cb(t[s],c,o,this.padding),t[i]=cb(t[i],h,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}yb.className="Conv3DTranspose",Pi(yb);class wb extends mb{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new pp("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new pp("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new pp(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=jf(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=tb(t.depthwiseRegularizer),this.depthwiseConstraint=Dm(t.depthwiseConstraint),this.pointwiseInitializer=jf(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=tb(t.pointwiseRegularizer),this.pointwiseConstraint=Dm(t.pointwiseConstraint)}build(e){if((e=Yf(e)).length<this.rank+2)throw new pp(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new pp(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let e=0;e<this.rank;++e)s.push(1);s.push(n*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new tm({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Vi((()=>{let t;if(e=Xf(e),1===this.rank)throw new fp("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=ou(e,[0,2,3,1])),t=Po(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=kf(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=ou(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Hf(this.depthwiseInitializer),e.pointwiseInitializer=Hf(this.pointwiseInitializer),e.depthwiseRegularizer=Qg(this.depthwiseRegularizer),e.pointwiseRegularizer=Qg(this.pointwiseRegularizer),e.depthwiseConstraint=Im(this.depthwiseConstraint),e.pointwiseConstraint=Im(this.pointwiseConstraint),e}}wb.className="SeparableConv";class vb extends wb{constructor(e){super(2,e)}}vb.className="SeparableConv2D",Pi(vb);class kb extends mb{constructor(e){super(1,e),kb.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Rp(e.kernelSize,"number",1,1))throw new pp(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}kb.className="Conv1D",Pi(kb);class Ib extends am{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Vi((()=>{if(e=Xf(e),"channelsLast"===this.dataFormat){const t=pf(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return pf(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=pf(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return pf(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Ib.className="Cropping2D",Pi(Ib);class Cb extends am{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,qp(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,Fp(Up,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return Vi((()=>{let t=Xf(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=ou(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?cl.resizeNearestNeighbor(t,[e,r]):cl.resizeBilinear(t,[e,r]);return ou(s,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?cl.resizeNearestNeighbor(t,[e,r]):cl.resizeBilinear(t,[e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}Cb.className="UpSampling2D",Pi(Cb);class Db extends fb{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=jf(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Dm(e.depthwiseConstraint),this.depthwiseRegularizer=tb(e.depthwiseRegularizer)}build(e){if((e=Yf(e)).length<4)throw new pp(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new pp(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Vi((()=>{let t=function(e,t,n=[1,1],r="valid",s,i){return Vi((()=>{null==s&&(s="channelsLast"),qp(s);let a=hb(e,s);if(4!==e.rank)throw new pp(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new pp(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return a=La(a,t,n,"same"===r?"same":"valid","NHWC",i),"channelsFirst"===s&&(a=ou(a,[0,3,1,2])),a}))}(e=Xf(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=kf(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=Yf(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=lb(t,this.kernelSize[0],this.padding,this.strides[0]),i=lb(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,s,i]:[e[0],s,i,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Hf(this.depthwiseInitializer),e.depthwiseRegularizer=Qg(this.depthwiseRegularizer),e.depthwiseConstraint=Im(this.depthwiseRegularizer),e}}function Eb(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new pp("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function s(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=s(t),constants:n=s(n)}}function Nb(e,t,n,r=!1,s,i,a=!1,o=!1){return Vi((()=>{const u=t.shape.length;if(u<3)throw new pp(`Input should be at least 3D, but is ${u}D.`);const l=[1,0].concat(af(2,u));if(t=ou(t,l),null!=i)throw new fp("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=ui(ui(s,"bool"),"float32")).rank===u-1&&(s=Ga(s,-1)),s=ou(s,l)),r&&(t=Lo(t,0),null!=s&&(s=Lo(s,0)));const c=[];let h,d=n;const p=t.shape[0],f=nu(t);let m,g;null!=s&&(m=nu(s));for(let t=0;t<p;++t){const n=f[t],r=Vi((()=>e(n,d)));if(null==s)h=r[0],d=r[1];else{const e=Vi((()=>{const e=m[t],n=no($o(e),e);return{output:Zi(to(r[0],e),to(d[0],n)),newStates:d.map(((t,s)=>Zi(to(r[1][s],e),to(t,n))))}}));h=e.output,d=e.newStates}o&&c.push(h)}return o&&(g=Jo(c,1)),[h,g,d]}))}Db.className="DepthwiseConv2D",Pi(Db);class Sb extends am{constructor(e){let t;if(super(e),null==e.cell)throw new pp("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Mb({cells:e.cell}):e.cell,null==t.stateSize)throw new pp("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new tm({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?af(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){qf(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return Vi((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new fp("Constants support is not implemented in RNN yet.");qf(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new tm({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!y(this.stateSpec.map((e=>e.shape[e.shape.length-1])),s))throw new pp(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map((e=>new tm({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){Vi((()=>{if(!this.stateful)throw new hp("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new pp("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>No([n,e]))):this.states_=[No([n,this.cell.stateSize])];else if(null==e)Gi(this.states_),null!=this.keptStates&&(Gi(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>No([n,e]))):this.states_[0]=No([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new pp(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):Gi(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,i=[n,s];if(!y(r.shape,i))throw new pp(`State ${t} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>Hi(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=Eb(e,n,r,this.numConstants);e=s.inputs,n=s.initialState,r=s.constants;let i=[],a=[];if(null!=n){t.initialState=n,i=i.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new tm({shape:e.shape}));a=a.concat(this.stateSpec)}if(null!=r&&(t.constants=r,i=i.concat(r),this.numConstants=r.length),i[0]instanceof nm){const n=[e].concat(i),r=this.inputSpec.concat(a),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return Vi((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let s=null==t?null:t.initialState;e=Xf(e),null==s&&(s=this.stateful?this.states_:this.getInitialState(e));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==i)throw new pp(`RNN Layer has ${i} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:r},o=Nb(((e,t)=>{const n=this.cell.call([e].concat(t),a);return[n[0],n.slice(1)]}),e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],l=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?l:u;return this.returnState?[h].concat(c):h}))}getInitialState(e){return Vi((()=>{let t=No(e.shape);return t=ro(t,[1,2]),t=cf(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?gf(t,[1,e]):t)):this.cell.stateSize>1?[gf(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Sb.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t,n={}){const r=Bm(t.cell,n);return new e(Object.assign(t,{cell:r}))}}Sb.className="RNN",Pi(Sb);class $b extends am{}class Tb extends $b{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,_p(this.units,"units"),this.activation=Xg(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=jf(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=jf(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=jf(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=tb(e.kernelRegularizer),this.recurrentRegularizer=tb(e.recurrentRegularizer),this.biasRegularizer=tb(e.biasRegularizer),this.kernelConstraint=Dm(e.kernelConstraint),this.recurrentConstraint=Dm(e.recurrentConstraint),this.biasConstraint=Dm(e.biasConstraint),this.dropout=rf([1,sf([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=rf([1,sf([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Yf(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Vi((()=>{if(2!==e.length)throw new pp(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Bb({ones:()=>$o(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Bb({ones:()=>$o(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,a=this.recurrentDropoutMask;s=xf(null!=i?to(e,i):e,this.kernel.read()),null!=this.bias&&(s=kf(s,this.bias.read())),null!=a&&(n=to(n,a));let o=Zi(s,xf(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:qg(this.activation),useBias:this.useBias,kernelInitializer:Hf(this.kernelInitializer),recurrentInitializer:Hf(this.recurrentInitializer),biasInitializer:Hf(this.biasInitializer),kernelRegularizer:Qg(this.kernelRegularizer),recurrentRegularizer:Qg(this.recurrentRegularizer),biasRegularizer:Qg(this.biasRegularizer),activityRegularizer:Qg(this.activityRegularizer),kernelConstraint:Im(this.kernelConstraint),recurrentConstraint:Im(this.recurrentConstraint),biasConstraint:Im(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}Tb.className="SimpleRNNCell",Pi(Tb);class Ab extends Sb{constructor(e){e.cell=new Tb(e),super(e)}call(e,t){return Vi((()=>{null!=this.cell.dropoutMask&&(Gi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Gi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return new e(t)}}Ab.className="SimpleRNN",Pi(Ab);class Fb extends $b{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new pp("GRUCell does not support reset_after parameter set to true.");this.units=e.units,_p(this.units,"units"),this.activation=Xg(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Xg(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=jf(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=jf(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=jf(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=tb(e.kernelRegularizer),this.recurrentRegularizer=tb(e.recurrentRegularizer),this.biasRegularizer=tb(e.biasRegularizer),this.kernelConstraint=Dm(e.kernelConstraint),this.recurrentConstraint=Dm(e.recurrentConstraint),this.biasConstraint=Dm(e.biasConstraint),this.dropout=rf([1,sf([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=rf([1,sf([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=Yf(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Vi((()=>{if(2!==e.length)throw new pp(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Bb({ones:()=>$o(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Bb({ones:()=>$o(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,i=this.recurrentDropoutMask;let a,o,u;0<this.dropout&&this.dropout<1&&(e=to(e,s[0]));let l=xf(e,this.kernel.read());this.useBias&&(l=kf(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=to(r,i[0]));const c=this.recurrentKernel.read(),[h,d]=Xo(c,[2*this.units,this.units],c.rank-1),p=xf(r,h),[f,m,g]=Xo(l,3,l.rank-1),[b,x]=Xo(p,2,p.rank-1);a=this.recurrentActivation.apply(Zi(f,b)),o=this.recurrentActivation.apply(Zi(m,x));const y=xf(to(o,r),d);u=this.activation.apply(Zi(g,y));const w=Zi(to(a,r),to(Zi(1,Co(a)),u));return[w,w]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:qg(this.activation),recurrentActivation:qg(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Hf(this.kernelInitializer),recurrentInitializer:Hf(this.recurrentInitializer),biasInitializer:Hf(this.biasInitializer),kernelRegularizer:Qg(this.kernelRegularizer),recurrentRegularizer:Qg(this.recurrentRegularizer),biasRegularizer:Qg(this.biasRegularizer),activityRegularizer:Qg(this.activityRegularizer),kernelConstraint:Im(this.kernelConstraint),recurrentConstraint:Im(this.recurrentConstraint),biasConstraint:Im(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}Fb.className="GRUCell",Pi(Fb);class Rb extends Sb{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Fb(e),super(e)}call(e,t){return Vi((()=>{null!=this.cell.dropoutMask&&(Gi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Gi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Rb.className="GRU",Pi(Rb);class _b extends $b{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,_p(this.units,"units"),this.activation=Xg(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Xg(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=jf(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=jf(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=jf(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=tb(e.kernelRegularizer),this.recurrentRegularizer=tb(e.recurrentRegularizer),this.biasRegularizer=tb(e.biasRegularizer),this.kernelConstraint=Dm(e.kernelConstraint),this.recurrentConstraint=Dm(e.recurrentConstraint),this.biasConstraint=Dm(e.biasConstraint),this.dropout=rf([1,sf([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=rf([1,sf([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=Yf(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends Nf{apply(t,r){const s=e.apply([n]),i=(new $f).apply([n]),a=e.apply([2*n]);return mf(mf(s,i),a)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Vi((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new pp(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Bb({ones:()=>$o(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Bb({ones:()=>$o(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,a=this.recurrentDropoutMask;let o,u,l,c;0<this.dropout&&this.dropout<1&&(e=to(e,i[0]));let h=xf(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=to(r,a[0])),h=Zi(h,xf(r,this.recurrentKernel.read())),this.useBias&&(h=kf(h,this.bias.read()));const[d,p,f,m]=Xo(h,4,h.rank-1);o=this.recurrentActivation.apply(d),u=this.recurrentActivation.apply(p),l=Zi(to(u,s),to(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=to(c,this.activation.apply(l));return[g,g,l]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:qg(this.activation),recurrentActivation:qg(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Hf(this.kernelInitializer),recurrentInitializer:Hf(this.recurrentInitializer),biasInitializer:Hf(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Qg(this.kernelRegularizer),recurrentRegularizer:Qg(this.recurrentRegularizer),biasRegularizer:Qg(this.biasRegularizer),activityRegularizer:Qg(this.activityRegularizer),kernelConstraint:Im(this.kernelConstraint),recurrentConstraint:Im(this.recurrentConstraint),biasConstraint:Im(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}_b.className="LSTMCell",Pi(_b);class Ob extends Sb{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new _b(e),super(e)}call(e,t){return Vi((()=>{null!=this.cell.dropoutMask&&(Gi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Gi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Ob.className="LSTM",Pi(Ob);class Mb extends $b{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Vi((()=>{let n=e.slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let i;for(let a=0;a<this.cells.length;++a){const o=this.cells[a];n=r[a],i=0===a?[e[0]].concat(n):[i[0]].concat(n),i=o.call(i,t),s.push(i.slice(1))}n=[];for(const e of s.slice().reverse())n.push(...e);return[i[0]].concat(n)}))}build(e){let t;qf(e)&&(e=e[0]),this.cells.forEach(((n,r)=>{Zp(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(Bm(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Qf(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,s=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],s[e]])}em(t)}}function Bb(e){const{ones:t,rate:n,training:r=!1,count:s=1,dropoutFunc:i}=e,a=()=>null!=i?i(t(),n):If(t(),n),o=()=>Cf(a,t,r);return!s||s<=1?Hi(o().clone()):Array(s).fill(void 0).map(o).map((e=>Hi(e.clone())))}Mb.className="StackedRNNCells",Pi(Mb);class Lb extends Sb{constructor(e){if(e.unroll)throw new fp("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new fp("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new tm({ndim:5})]}call(e,t){return Vi((()=>{if(null!=this.cell.dropoutMask&&(Gi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Gi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new pp("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Vi((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),s=No([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(s):[s]}))}resetStates(e,t=!1){Vi((()=>{if(!this.stateful)throw new hp("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new pp("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>No(s))):this.states_=[No(s)];else if(null==e)Gi(this.states_),null!=this.keptStates&&(Gi(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>No(s))):this.states_[0]=No(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new pp(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Gi(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=s;if(!y(n.shape,r))throw new pp(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>Hi(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:s,strides:i,dilationRate:a}=this.cell,o="channelsFirst"===t,u=e[o?3:2],l=e[o?4:3],c=lb(u,r[0],s,i[0],a[0]),h=lb(l,r[1],s,i[1],a[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}Lb.className="ConvRNN2D";class zb extends _b{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:s,dataFormat:i,dilationRate:a}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,_p(this.filters,"filters"),this.kernelSize=ub(n,2,"kernelSize"),this.kernelSize.forEach((e=>_p(e,"kernelSize"))),this.strides=ub(r||1,2,"strides"),this.strides.forEach((e=>_p(e,"strides"))),this.padding=s||"valid",Kp(this.padding),this.dataFormat=i||"channelsLast",qp(this.dataFormat),this.dilationRate=ub(a||1,2,"dilationRate"),this.dilationRate.forEach((e=>_p(e,"dilationRate")))}build(e){var t;e=Yf(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new pp(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const i=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends Nf{apply(e,t){return ff([n.apply([r]),So([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Vi((()=>{if(3!==e.length)throw new pp(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],s=e[1],i=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Bb({ones:()=>$o(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,o=(e,t,n)=>t&&t[n]?to(t[n],e):e;let u=o(r,a,0),l=o(r,a,1),c=o(r,a,2),h=o(r,a,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Bb({ones:()=>$o(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let p=o(s,d,0),f=o(s,d,1),m=o(s,d,2),g=o(s,d,3);const[b,x,y,w]=Xo(this.kernel.read(),4,3),[v,k,I,C]=this.useBias?Xo(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,b,v,this.padding),l=this.inputConv(l,x,k,this.padding),c=this.inputConv(c,y,I,this.padding),h=this.inputConv(h,w,C,this.padding);const[D,E,N,S]=Xo(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,D),f=this.recurrentConv(f,E),m=this.recurrentConv(m,N),g=this.recurrentConv(g,S);const $=this.recurrentActivation.apply(Zi(u,p)),T=this.recurrentActivation.apply(Zi(l,f)),A=Zi(to(T,i),to($,this.activation.apply(Zi(c,m)))),F=to(this.recurrentActivation.apply(Zi(h,g)),this.activation.apply(A));return[F,F,A]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(e);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(e,r[s])&&(n[r[s]]=e[r[s]])}return n}(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),r)}inputConv(e,t,n,r){const s=Ta(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?kf(s,n,this.dataFormat):s}recurrentConv(e,t){return Ta(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}zb.className="ConvLSTM2DCell",Pi(zb);class Pb extends Lb{constructor(e){const t=new zb(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}Pb.className="ConvLSTM2D",Pi(Pb);class Wb extends am{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return Vi((()=>{this.invokeCallHook(e,t);const n=Xf(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return Cf((()=>If(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Wb.className="Dropout",Pi(Wb);class Ub extends Wb{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}Ub.className="SpatialDropout1D",Pi(Ub);class Vb extends am{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,_p(this.units,"units"),this.activation=Xg(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=jf(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=jf(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Dm(e.kernelConstraint),this.biasConstraint=Dm(e.biasConstraint),this.kernelRegularizer=tb(e.kernelRegularizer),this.biasRegularizer=tb(e.biasRegularizer),this.activityRegularizer=tb(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=Yf(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=Yf(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return Vi((()=>{this.invokeCallHook(e,t);const n=Xf(e),r=Mp(this.activation.getClassName());let s;return null!=r?s=xf(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=xf(n,this.kernel.read()),null!=this.bias&&(s=kf(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const e={units:this.units,activation:qg(this.activation),useBias:this.useBias,kernelInitializer:Hf(this.kernelInitializer),biasInitializer:Hf(this.biasInitializer),kernelRegularizer:Qg(this.kernelRegularizer),biasRegularizer:Qg(this.biasRegularizer),activityRegularizer:Qg(this.activityRegularizer),kernelConstraint:Im(this.kernelConstraint),biasConstraint:Im(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Vb.className="Dense",Pi(Vb);class Gb extends am{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Yf(e);for(const t of e.slice(1))if(null==t)throw new pp(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],nf(e,1)]}call(e,t){return Vi((()=>{this.invokeCallHook(e,t);let n=Xf(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=ou(n,e)}return function(e){if(e.rank<=1)throw new pp(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],nf(e.shape,1)];return ma(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}Gb.className="Flatten",Pi(Gb);class Hb extends am{constructor(e){super(e),this.supportsMasking=!0,this.activation=Xg(e.activation)}call(e,t){return Vi((()=>{this.invokeCallHook(e,t);const n=Xf(e);return this.activation.apply(n)}))}getConfig(){const e={activation:qg(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}Hb.className="Activation",Pi(Hb);class jb extends am{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Vi((()=>{return e=Xf(e),t=e,n=this.n,Vi((()=>{if(2!==t.shape.length)throw new pp(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return gf(cf(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}jb.className="RepeatVector",Pi(jb);class qb extends am{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let s=1,i=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==i)throw new pp("Can only specifiy one unknown dimension.");i=e}else s*=t}const a=nf(e);if(null!==i){if(0===s||a%s!=0)throw new pp(n);r[i]=a/s}else if(a!==s)throw new pp(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Vi((()=>{this.invokeCallHook(e,t);const n=Xf(e),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return ma(n,s)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}qb.className="Reshape",Pi(qb);class Kb extends am{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=af(1,e.dims.length+1);if(!y(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new tm({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=Yf(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return ou(Xf(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Kb.className="Permute",Pi(Kb);class Xb extends am{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=Xf(e);return Qi(Do(n,this.maskValue),-1)}call(e,t){return Vi((()=>{this.invokeCallHook(e,t);const n=Xf(e),r=Qi(Do(n,this.maskValue),-1,!0);return to(n,ui(r,n.dtype))}))}}Xb.className="Masking",Pi(Xb);class Yb extends am{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(kp(e.inputLength))}this.inputDim=e.inputDim,_p(this.inputDim,"inputDim"),this.outputDim=e.outputDim,_p(this.outputDim,"outputDim"),this.embeddingsInitializer=jf(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=tb(e.embeddingsRegularizer),this.activityRegularizer=tb(e.activityRegularizer),this.embeddingsConstraint=Dm(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Vi((()=>this.maskZero?(e=Xf(e),Do(e,su(e))):null))}computeOutputShape(e){if(e=Yf(e),null==this.inputLength)return[...e,this.outputDim];const t=kp(this.inputLength);if(t.length!==e.length-1)throw new pp(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const s=t[r],i=e[r+1];if(null!=s&&null!=i&&s!==i)throw new pp(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==s&&(t[n]=i),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Vi((()=>{this.invokeCallHook(e,t);let n=Xf(e);"int32"!==n.dtype&&(n=lf(n,"int32"));const r=yf(this.embeddings.read(),ma(n,[n.size]));return ma(r,Yf(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Hf(this.embeddingsInitializer),embeddingsRegularizer:Qg(this.embeddingsRegularizer),activityRegularizer:Qg(this.activityRegularizer),embeddingsConstraint:Im(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}Yb.className="Embedding",Pi(Yb);class Zb extends am{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new fp}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const s=e[e.length-t.length+r],i=t[r];if(null==s||null==i||s<0||i<0)n.push(null);else if(1===s)n.push(i);else if(1===i)n.push(s);else{if(s!==i)throw new pp("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Yf(e)]),e.length<2)throw new pp(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=Tp(t),t.length>1)throw new pp(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===Tp(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Vi((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=sf(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=cf(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,s=e[0],i=e.slice(1).concat([s]);let a=ma(r,[s].concat(nf(e.slice(1))));a=ou(a,[1,0]),a=ma(a,i),t.push(a),n=!0}else if(e>1){const s=af(1,e).concat([0]);t.push(ou(r,s)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const s=r.rank;if(n)if(null==s){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=ma(ou(ma(r,[-1,t]),[1,0]),n)}else if(s>1){const e=[s-1].concat(af(0,s-1));r=ou(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=Tp(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return Vi((()=>{if(null==t)return null;if(!Array.isArray(t))throw new pp("`mask` should be an Array");if(!Array.isArray(e))throw new pp("`inputs` should be an Array");if(t.length!==e.length)throw new pp(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:Ga(e,0))))[0];for(let e=1;e<t.length-1;++e)n=io(n,t[e]);return n}))}}class Jb extends Zb{constructor(e){super(e)}mergeFunction(e){return Vi((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Zi(t,e[n]);return t}))}}Jb.className="Add",Pi(Jb);class Qb extends Zb{constructor(e){super(e)}mergeFunction(e){return Vi((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=to(t,e[n]);return t}))}}Qb.className="Multiply",Pi(Qb);class ex extends Zb{constructor(e){super(e)}mergeFunction(e){return Vi((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Zi(t,e[n]);return to(1/e.length,t)}))}}ex.className="Average",Pi(ex);class tx extends Zb{constructor(e){super(e)}mergeFunction(e){return Vi((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=lo(t,e[n]);return t}))}}tx.className="Maximum",Pi(tx);class nx extends Zb{constructor(e){super(e)}mergeFunction(e){return Vi((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=po(t,e[n]);return t}))}}nx.className="Minimum",Pi(nx);class rx extends Zb{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new pp("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let s=!1;for(const e of n)if(y(e,r)){s=!0;break}s||n.push(r)}if(n.length>1)throw new pp("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Vi((()=>ff(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new pp("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new pp("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new pp("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new pp(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return Vi((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(ui($o(e[n]),"bool")):t[n].rank<e[n].rank?r.push(Ga(t[n],-1)):r.push(t[n]);const s=Da(r,this.axis);return Ji(s,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function sx(e,t){for(;e<0;)e+=t;return e}rx.className="Concatenate",Pi(rx);class ix extends Zb{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){f(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new fp("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new pp(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new pp(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>sx(t,e[n].shape.length))):[sx(this.axes,n.shape.length),sx(this.axes,r.shape.length)],this.normalize&&(n=Lm(n,t[0]),r=Lm(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new fp("batchDot is not implemented for tensors of 4D or higher rank yet");if(f(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),f(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new fp("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,s=t.shape.length;null==n&&(n=[r-1,s-2]);const i=n;return Vi((()=>{let n,a;if(r>s){n=r-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=ma(t,t.shape.concat(e))}else if(s>r){n=s-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=ma(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)a=i[0]===i[1]?ro(to(e,t),i[0]):ro(to(ou(e,[1,0]),t),i[1]);else{const n=i[0]!==e.shape.length-1,r=i[1]===t.shape.length-1;a=ao(e,t,n,r)}if(n>0){let e;e=r>s?r+s-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);a=Zo(a,t)}return 1===a.shape.length&&(a=Ga(a,1)),a}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[sx(this.axes,e.length),sx(this.axes,t.length)],n}computeOutputShape(e){f(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new fp("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=t.concat(n);return 1===s.length&&s.push(1),s}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}ix.className="Dot",Pi(ix);class ax extends am{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Vi((()=>{this.invokeCallHook(e,t);const n=Xf(e);return Cf((()=>Zi(bf(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}ax.className="GaussianNoise",Pi(ax);class ox extends am{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Vi((()=>{this.invokeCallHook(e,t);const n=Xf(e);return this.rate>0&&this.rate<1?Cf((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return to(n,bf(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}ox.className="GaussianDropout",Pi(ox);class ux extends am{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Xf(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Vi((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return Cf((()=>{const t=Xf(e),r=-1.7580993408473766;let s=Ya(Mo(n),this.rate);s=lf(s,"float32");const i=((1-this.rate)*(1+this.rate*r**2))**-.5,a=-i*r*this.rate,o=Zi(to(t,s),to(Zi(s,-1),r));return Zi(to(o,i),a)}),(()=>Xf(e)),t.training||!1)}return e}))}}function lx(e,t,n,r,s,i=.001){let a;if(2===e.rank)a=ya(e,t,n,r,s,i);else if(3===e.rank)a=wa(e,t,n,r,s,i);else{if(4!==e.rank)throw new fp(`batchNormalization is not implemented for array of rank ${e.rank} yet`);a=va(e,t,n,r,s,i)}return a}ux.className="AlphaDropout",Pi(ux);class cx extends am{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=jf(e.betaInitializer||"zeros"),this.gammaInitializer=jf(e.gammaInitializer||"ones"),this.movingMeanInitializer=jf(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=jf(e.movingVarianceInitializer||"ones"),this.betaConstraint=Dm(e.betaConstraint),this.gammaConstraint=Dm(e.gammaConstraint),this.betaRegularizer=tb(e.betaRegularizer),this.gammaRegularizer=tb(e.gammaRegularizer)}build(e){e=Yf(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new pp(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new tm({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Vi((()=>{const n=null!=t.training&&t.training,r=Xf(e),s=r.shape,i=s.length,a=af(0,i),o=this.axis>=0?this.axis:this.axis+i;a.splice(o,1);const u=xp(1,i);u[o]=s[o];const l=a.slice();l.sort();const c=!y(l,af(0,i).slice(0,i-1));if(!n)return(()=>{if(c){const e=ma(this.movingMean.read(),u),t=ma(this.movingVariance.read(),u),n=this.center?ma(this.beta.read(),u):null,s=this.scale?ma(this.gamma.read(),u):null;return lx(r,e,t,n,s,this.epsilon)}return lx(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=function(e,t,n,r,s=.001){return y(r.slice().sort(),af(0,e.rank-1))?function(e,t,n,r,s=.001){return Vi((()=>{const i=Io(e,r),a=i.mean,o=i.variance;return[lx(e,a,o,n,t,s),a,o]}))}(e,t,n,r,s):function(e,t,n,r,s=.001){return Vi((()=>{const i=Io(e,r),a=i.mean,o=i.variance,u=[];for(const t of af(0,e.rank))-1!==r.indexOf(t)?u.push(1):u.push(e.shape[t]);const l=ma(a,u),c=ma(o,u),h=null==t?null:ma(t,u),d=null==n?null:ma(n,u);return[lx(e,l,c,d,h,s),a,o]}))}(e,t,n,r,s)}(r,this.gamma.read(),this.beta.read(),a,this.epsilon),f=(e,t,n)=>{Vi((()=>{const r=1-n,s=e.read(),i=to(no(s,t),r);e.write(no(s,i))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Hf(this.betaInitializer),gammaInitializer:Hf(this.gammaInitializer),movingMeanInitializer:Hf(this.movingMeanInitializer),movingVarianceInitializer:Hf(this.movingVarianceInitializer),betaRegularizer:Qg(this.betaRegularizer),gammaRegularizer:Qg(this.gammaRegularizer),betaConstraint:Im(this.betaConstraint),gammaConstraint:Im(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}cx.className="BatchNormalization",Pi(cx);class hx extends am{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=jf(e.betaInitializer||"zeros"),this.gammaInitializer=jf(e.gammaInitializer||"ones"),this.betaRegularizer=tb(e.betaRegularizer),this.gammaRegularizer=tb(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=Yf(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==Tp(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){const n=Xf(e),r=n.shape,s=r.length;return Vi((()=>{let{mean:e,variance:t}=Io(n,this.axis,!0);const i=xp(1,s);for(const e of this.axis)i[e]=r[e];const a=e=>null!=e&&e.shape.length!==s?ma(e,i):e;let o=this.scale?a(this.gamma.read()):null,u=this.center?a(this.beta.read()):null;const l=[],c=[];for(let e=0;e<s;++e)-1!==this.axis.indexOf(e)?(l.push(r[e]),c.push(1)):(l.push(1),c.push(r[e]));return e=Ha(e,l),t=Ha(t,l),null!=o&&(o=Ha(o,c)),null!=u&&(u=Ha(u,c)),lx(n,e,t,u,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Hf(this.betaInitializer),gammaInitializer:Hf(this.gammaInitializer),betaRegularizer:Qg(this.betaRegularizer),gammaRegularizer:Qg(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}hx.className="LayerNormalization",Pi(hx);class dx extends am{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new pp(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new pp(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new pp(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new tm({ndim:4})]}computeOutputShape(e){let t,n;return e=Yf(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Vi((()=>{return t=Xf(e),n=this.padding,r=this.dataFormat,Vi((()=>{if(4!==t.rank)throw new pp(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new pp("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new pp(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],To(t,e)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function px(e,t,n,r,s,i){return Vi((()=>{let a;qp(s),Xp(i),Kp(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==i&&(i="max"),e=hb(e,s);const o="same"===r?"same":"valid";return a="max"===i?oo(e,t,n,o):ga(e,t,n,o),"channelsFirst"===s&&(a=ou(a,[0,3,1,2])),a}))}function fx(e,t,n,r,s,i){return Vi((()=>{let a;qp(s),Xp(i),Kp(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==i&&(i="max"),e=db(e,s);const o="same"===r?"same":"valid";return a="max"===i?uo(e,t,n,o):ba(e,t,n,o),"channelsFirst"===s&&(a=ou(a,[0,4,1,2,3])),a}))}dx.className="ZeroPadding2D",Pi(dx);class mx extends am{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new pp(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(_p(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new pp(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}_p(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Kp(this.padding),this.inputSpec=[new tm({ndim:3})]}computeOutputShape(e){const t=lb((e=Yf(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Vi((()=>{this.invokeCallHook(e,t),e=cf(Xf(e),2);const n=this.poolingFunction(Xf(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Zo(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class gx extends mx{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return qp(s),Kp(r),px(e,t,n,r,s,"max")}}gx.className="MaxPooling1D",Pi(gx);class bx extends mx{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return qp(s),Kp(r),px(e,t,n,r,s,"avg")}}bx.className="AveragePooling1D",Pi(bx);class xx extends am{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new pp(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];_p(this.poolSize,"poolSize"),_p(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,qp(this.dataFormat),Kp(this.padding),this.inputSpec=[new tm({ndim:4})]}computeOutputShape(e){e=Yf(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=lb(t,this.poolSize[0],this.padding,this.strides[0]),n=lb(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Vi((()=>(this.invokeCallHook(e,t),this.poolingFunction(Xf(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class yx extends xx{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return qp(s),Kp(r),px(e,t,n,r,s,"max")}}yx.className="MaxPooling2D",Pi(yx);class wx extends xx{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return qp(s),Kp(r),px(e,t,n,r,s,"avg")}}wx.className="AveragePooling2D",Pi(wx);class vx extends am{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new pp(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];_p(this.poolSize,"poolSize"),_p(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,qp(this.dataFormat),Kp(this.padding),this.inputSpec=[new tm({ndim:5})]}computeOutputShape(e){e=Yf(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=lb(t,this.poolSize[0],this.padding,this.strides[0]),n=lb(n,this.poolSize[1],this.padding,this.strides[1]),r=lb(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return Vi((()=>(this.invokeCallHook(e,t),this.poolingFunction(Xf(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class kx extends vx{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return qp(s),Kp(r),fx(e,t,n,r,s,"max")}}kx.className="MaxPooling3D",Pi(kx);class Ix extends vx{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return qp(s),Kp(r),fx(e,t,n,r,s,"avg")}}Ix.className="AveragePooling3D",Pi(Ix);class Cx extends am{constructor(e){super(e),this.inputSpec=[new tm({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new fp}}class Dx extends Cx{constructor(e){super(e||{})}call(e,t){return Vi((()=>{const t=Xf(e);return co(t,1)}))}}Dx.className="GlobalAveragePooling1D",Pi(Dx);class Ex extends Cx{constructor(e){super(e||{})}call(e,t){return Vi((()=>{const t=Xf(e);return eo(t,1)}))}}Ex.className="GlobalMaxPooling1D",Pi(Ex);class Nx extends am{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,qp(this.dataFormat),this.inputSpec=[new tm({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new fp}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Sx extends Nx{call(e,t){return Vi((()=>{const t=Xf(e);return"channelsLast"===this.dataFormat?co(t,[1,2]):co(t,[2,3])}))}}Sx.className="GlobalAveragePooling2D",Pi(Sx);class $x extends Nx{call(e,t){return Vi((()=>{const t=Xf(e);return"channelsLast"===this.dataFormat?eo(t,[1,2]):eo(t,[2,3])}))}}$x.className="GlobalMaxPooling2D",Pi($x);class Tx extends am{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=Bm(t.layer,n);delete t.layer;const s={layer:r};return Object.assign(s,t),new e(s)}}class Ax extends Tx{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Yf(e)).length<3)throw new pp(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=Yf(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return Vi((()=>Nb(((e,n)=>[Xf(this.layer.call(e,t)),[]]),e=Xf(e),[],!1,null,null,!1,!0)[1]))}}Ax.className="TimeDistributed",Pi(Ax);class Fx extends Tx{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Bm(n),t.goBackwards=!0!==t.goBackwards;const r={};var s;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=Bm(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,s=this.mergeMode,Fp(Hp,"BidirectionalMergeMode",s),e.weights)throw new fp("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),this.returnState?(r=s.slice(1),t=s[0]):t=s[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):vp(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=Eb(e,n,r,this.numConstants);if(e=s.inputs,n=s.initialState,r=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const i=[],a=[];if(null!=n){const e=n.length;if(e%2>0)throw new pp("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,i.push(...n);const r=n.map((e=>new tm({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),a.push(...r)}if(null!=r)throw new fp("Support for constants in Bidirectional layers is not implemented yet.");const o=i[0]instanceof nm;for(const e of i)if(e instanceof nm!==o)throw new pp("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(i),r=this.inputSpec.concat(a),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return Vi((()=>{const n=t.initialState;let r,s,i,a;if(null==n)r=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{const i=n.slice(0,n.length/2),a=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:i})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:a}))}return this.returnState&&(Array.isArray(r)&&(i=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=Lo(s,1)),"concat"===this.mergeMode?a=ff([r,s]):"sum"===this.mergeMode?a=Zi(r,s):"ave"===this.mergeMode?a=to(.5,Zi(r,s)):"mul"===this.mergeMode?a=to(r,s):null==this.mergeMode&&(a=[r,s]),this.returnState?null==this.mergeMode?a.concat(i):[a].concat(i):a}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Zp(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Zp(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=Bm(t.layer);if(delete t.layer,null!=t.numConstants)throw new fp("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}Fx.className="Bidirectional",Pi(Fx);class Rx extends am{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return Vi((()=>("float32"!==(e=Xf(e)).dtype&&(e=lf(e,"float32")),Zi(to(e,this.scale),this.offset))))}}Rx.className="Rescaling",Pi(Rx);const _x=new Set(["bilinear","nearest"]);class Ox extends am{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!_x.has(e.interpolation))throw new pp(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){const t=(e=Yf(e))[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return Vi((()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return cl.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return cl.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[..._x]} are supported`)}))}}Ox.className="Resizing",Pi(Ox);class Mx extends am{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=Yf(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return Vi((()=>{let n;if("int32"!==(e=Xf(e)).dtype&&(e=lf(e,"int32")),void 0!==t.countWeights){if("count"!==this.outputMode)throw new pp(`countWeights is not used when outputMode !== count.\n              Received countWeights=${t.countWeights}`);n=Xf(t.countWeights)}const r=eo(e),s=ho(e),i=Xa(this.numTokens,r).bufferSync().get(0),a=Ya(s,0).bufferSync().get(0);if(!i||!a)throw new pp(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return function(e,t,n,r){let s=Xf(e);if("int32"!==s.dtype&&(s=lf(s,"int32")),"int"===t)return s;const i=s.shape;if(0===s.rank&&(s=Ga(s,-1)),"oneHot"===t&&1!==s.shape[s.shape.length-1]&&(s=Ga(s,-1)),s.rank>2)throw new pp(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${i} which would result in output rank ${s.rank}.`);const a=["multiHot","oneHot"].includes(t);let o;if(o=Ba(s,void 0!==r&&"count"===t?r:[],n,a),"tfIdf"!==t)return o;if(r)return to(o,r);throw new pp("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)}))}}var Bx,Lx,zx,Px;function Wx(e,t,n=new Map,r=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(Hx(e)){const s=Array.isArray(e)?[]:{};r.add(e);for(const i in e){const a=Wx(e[i],t,n,r);s[i]=a}return r.delete(e),e.__proto__&&(s.__proto__=e.__proto__),s}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,s.value),s.value}function Ux(e,t=Gx){return Vx(e,t)}function Vx(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(Hx(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const i in r){const r=Vx(e.map((e=>e[i])),t,n);s[i]=r}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function Gx(e){return null===e?null:Hx(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function Hx(e){let t=!1;if(X().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:r}=n(977);t=e instanceof r}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof Kr)&&!(e instanceof Promise)&&!t)}function jx(e){return Wx(e,qx)}function qx(e){return e instanceof Kr?{value:e.clone(),recurse:!1}:Hx(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}Mx.className="CategoryEncoding",Pi(Mx),X().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(Bx||(Bx={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(Lx||(Lx={}));class Kx{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class Xx extends Kx{constructor(){super(Xx.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}Xx.INITIAL_CAPACITY=32;class Yx{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new iy(this,e)}filter(e){return new ry(this,e)}map(e){return new sy(this,e)}mapAsync(e){return new ay(this,e)}serialMapAsync(e){return new ay(this,e).serial()}flatmap(e){return new uy(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new ny(this,e,t)}columnMajorBatch(e,t=!0,n=Gx){return this.rowMajorBatch(e,t).map((e=>Ux(e,n)))}concatenate(e,t){return new ly(new Zx([this,e]),t)}take(e){return e<0||null==e?this:new ty(this,e)}skip(e){return e<0||null==e?this:new ey(this,e)}prefetch(e){return new cy(this,e)}shuffle(e,t){return new hy(this,e,t)}serial(){return new Qx(this)}}class Zx extends Yx{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:jx(e),done:!1}}}class Jx extends Yx{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class Qx extends Yx{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class ey extends Yx{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;Gi(e.value)}return this.upstream.next()}}class ty extends Yx{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class ny extends Yx{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class ry extends Yx{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Gi(e.value)}}}class sy extends Yx{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=os(e.value),n=this.transform(e.value),r=os(n);for(const e of t)as(e,r)||e.dispose();return{value:n,done:!1}}}class iy extends Yx{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class ay extends Yx{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=os(e.value),n=await this.transform(e.value),r=os(n);for(const e of t)as(e,r)||e.dispose();return{value:n,done:!1}}}class oy extends Yx{constructor(){super(),this.outputQueue=new Xx,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class uy extends oy{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=os(e.value),n=this.transform(e.value),r=os(n);this.outputQueue.pushAll(n);for(const e of t)as(e,r)||e.dispose();return!0}}class ly extends Yx{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}(Px=zx||(zx={}))[Px.FAIL=0]="FAIL",Px[Px.SHORTEST=1]="SHORTEST",Px[Px.LONGEST=2]="LONGEST";class cy extends Yx{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new Kx(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class hy extends cy{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=Fo.alea(n||Rr().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class dy{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return f(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),py((async()=>(await n.iterator()).columnMajorBatch(e,t,fy)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,py((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,py((async()=>(await t.iterator()).filter((t=>Vi((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return py((async()=>(await t.iterator()).map((t=>Vi((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return py((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return py((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,py((async()=>{return n=(s=async()=>({value:await t.iterator(),done:!1}),new Jx(s)).take(e),new ly(n,r);var n,r,s}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,py((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=Fo.alea(t||Rr().toString());return py((async()=>{let t=s.int32();return n&&(t+=s.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,py((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function py(e,t=null){return new class extends dy{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function fy(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof Kr||T(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Kr?Jo(e):Es(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}function my(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&f("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}dy.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const gy=$c;class by extends u{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new o(this,Wi())}nextDataId(){return by.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,X().get("IS_NODE")&&or("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&F(n[0])){const s=n.map((e=>_r(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r,s){this.data.set(e,{values:t,dtype:r,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);return"complex64"===t?Yl(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>Or(e)));return oi(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return oi(e.shape,e.dtype,t)}makeOutput(e,t,n){return Wi().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Rr();return e(),{kernelMs:Rr()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){my([e],"where");const t=this.readSync(e.dataId);return gy(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function xy(e,t,n){return({inputs:r,attrs:s,backend:i})=>{const{x:a}=r;if(my(a,e),"string"===a.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=i,u=o.data.get(a.dataId).values,l=x(a.shape),c=n||a.dtype,h=S(c,l);for(let e=0;e<l;++e)h[e]=t(u[e],s);return o.makeTensorInfo(a.shape,c,h)}}function yy(e,t,n){return({inputs:r,attrs:s,backend:i})=>{const{x:a}=r;if(my(a,e),"string"===a.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=i,u=o.data.get(a.dataId).values,l=n||a.dtype,c=t(u,l,s);return o.makeTensorInfo(a.shape,l,c)}}by.nextDataId=0,ji("cpu",(()=>new by),1);const wy=xy(Ye,(e=>e>=0?e:Math.exp(e)-1)),vy={kernelName:Ye,backendName:"cpu",kernelFunc:wy};function ky(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Iy={kernelName:pt,backendName:"cpu",kernelFunc:ky};function Cy(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:i}=r;my([s],"leakyRelu");const a=x(s.shape),o=n.data.get(s.dataId).values,u=N("float32",a);for(let e=0;e<o.length;e++)u[e]=o[e]<0?i*o[e]:o[e];return n.makeTensorInfo(s.shape,"float32",u)}const Dy={kernelName:yt,backendName:"cpu",kernelFunc:Cy};function Ey(e){return(t,n,r,s,i)=>{const a=wi(t,n),o=a.length,u=B(a),l=N(i,x(a)),c=t.length,h=n.length,d=B(t),p=B(n),f=xi(t,a),m=xi(n,a);if(f.length+m.length===0)for(let t=0;t<l.length;++t)l[t]=e(r[t%r.length],s[t%s.length]);else for(let t=0;t<l.length;++t){const n=H(t,o,u),i=n.slice(-c);f.forEach((e=>i[e]=0));const a=G(i,c,d),g=n.slice(-h);m.forEach((e=>g[e]=0));const b=G(g,h,p);l[t]=e(r[a],s[b])}return[l,a]}}const Ny=Ey(((e,t)=>e<0?t*e:e));function Sy(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t;my([r,s],"prelu");const i=n.data.get(r.dataId).values,a=n.data.get(s.dataId).values,[o,u]=Ny(r.shape,s.shape,i,a,"float32");return n.makeTensorInfo(u,"float32",o)}const $y={kernelName:en,backendName:"cpu",kernelFunc:Sy},Ty=xy(ln,(e=>Math.max(0,e))),Ay={kernelName:ln,backendName:"cpu",kernelFunc:Ty},Fy=xy(mn,(e=>Math.min(Math.max(0,e),6))),Ry={kernelName:mn,backendName:"cpu",kernelFunc:Fy};function _y(e){return(t,n,r)=>{const s=N(n,t.length);for(let n=0;n<t.length;++n)s[n]=e(t[n],r);return s}}const Oy=_y((e=>1/(1+Math.exp(-e)))),My=xy(Nn,(e=>1/(1+Math.exp(-e)))),By={kernelName:Nn,backendName:"cpu",kernelFunc:My};function Ly(e,t,n,r,s){if("linear"===n)return ky({inputs:{x:t},backend:e});if("relu"===n)return Ty({inputs:{x:t},backend:e});if("elu"===n)return wy({inputs:{x:t},backend:e});if("relu6"===n)return Fy({inputs:{x:t},backend:e});if("prelu"===n)return Sy({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return Cy({inputs:{x:t},backend:e,attrs:{alpha:s}});if("sigmoid"===n)return My({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function zy(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,i=n.data.get(r.dataId).values,a=n.data.get(s.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",i),imag:n.makeTensorInfo(s.shape,"float32",a)},o}const Py={kernelName:De,backendName:"cpu",kernelFunc:zy};function Wy(e,t,n="float32"){if("complex64"===n)return zy({inputs:{real:Wy(e,t,"float32"),imag:Wy(e,t,"float32")},backend:e});const r=W(x(t),n);return e.makeTensorInfo(t,n,r)}function Uy(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.real,i=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,i)}const Vy={kernelName:on,backendName:"cpu",kernelFunc:Uy};function Gy(e,t,n,r){if("int32"===r)return[t,"int32",Int32Array.from(e)];if("bool"===r){const r=Fr([0],n),[s,i]=Ey(((e,t)=>e!==t?1:0))(t,[],e,r,"bool");return[i,"bool",s]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function Hy(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:i}=r;if("complex64"===i){if("complex64"===s.dtype)return ky({inputs:{x:s},backend:n});const e=Wy(n,s.shape,s.dtype),t=Hy({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=zy({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===s.dtype){const e=Uy({inputs:{input:s},backend:n}),t=Hy({inputs:{x:e},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(e),t}if(!$(s.dtype,i)){const e=ky({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:i}}const a=n.data.get(s.dataId).values,[o,u,l]=Gy(a,s.shape,s.dtype,i);return n.makeTensorInfo(o,u,l)}const jy={kernelName:ke,backendName:"cpu",kernelFunc:Hy};function qy(e,t,n,r){return null==n?({inputs:n,backend:s})=>{const{a:i,b:a}=n,o=s;my([i,a],e);const u=o.data.get(i.dataId).values,l=o.data.get(a.dataId).values,c="string"===i.dtype?Nc(u):u,h="string"===i.dtype?Nc(l):l,d=r||i.dtype,[p,f]=t(i.shape,a.shape,c,h,d);return o.makeTensorInfo(f,d,p)}:({inputs:e,backend:s})=>{const{a:i,b:a}=e,o=s;if("complex64"===i.dtype||"complex64"===a.dtype){const e=Hy({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,s=t.complexTensorInfos.imag,u=o.data.get(r.dataId).values,l=o.data.get(s.dataId).values,c=Hy({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=o.data.get(d.dataId).values,m=o.data.get(p.dataId).values,[g,b,x]=n(i.shape,a.shape,u,l,f,m),y=o.makeTensorInfo(x,"float32",g),w=o.makeTensorInfo(x,"float32",b),v=zy({inputs:{real:y,imag:w},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(y),o.disposeIntermediateTensorInfo(w),v}{const e=o.data.get(i.dataId).values,n=o.data.get(a.dataId).values,s=r||i.dtype,[u,l]=t(i.shape,a.shape,e,n,s);return o.makeTensorInfo(l,s,u)}}}function Ky(e){return(t,n,r,s,i,a)=>{const o=wi(t,n),u=x(o),l=o.length,c=B(o),h=N("float32",u),d=N("float32",u),p=xi(t,o),f=xi(n,o),m=Yl(r,s),g=Yl(i,a),b=t.length,y=B(t),w=n.length,v=B(n);if(p.length+f.length===0)for(let t=0;t<h.length;t++){const n=t%m.length,r=t%g.length,s=e(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);h[t]=s.real,d[t]=s.imag}else for(let t=0;t<h.length;t++){const n=H(t,l,c),r=n.slice(-b);p.forEach((e=>r[e]=0));const s=G(r,b,y),i=n.slice(-w);f.forEach((e=>i[e]=0));const a=G(i,w,v),o=e(m[2*s],m[2*s+1],g[2*a],g[2*a+1]);h[t]=o.real,d[t]=o.imag}return[h,d,o]}}const Xy=Ey(((e,t)=>e+t)),Yy=Ky(((e,t,n,r)=>({real:e+n,imag:t+r}))),Zy=qy(re,Xy,Yy),Jy={kernelName:re,backendName:"cpu",kernelFunc:Zy};function Qy(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:i}=r,a=x(s.shape),o=C(i,a),u=x(o);f(a===u,(()=>`The new shape (${o}) has ${u} elements and the old shape (${s.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const l=n.data.get(s.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:s.dataId,shape:o,dtype:s.dtype}}const ew={kernelName:cn,backendName:"cpu",kernelFunc:Qy};function tw(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:i}=t,{transposeA:a,transposeB:o}=r;my([s,i],"matMul");const u=s.shape.length,l=i.shape.length,c=a?s.shape[u-2]:s.shape[u-1],h=o?i.shape[l-1]:i.shape[l-2],d=a?s.shape[u-1]:s.shape[u-2],p=o?i.shape[l-2]:i.shape[l-1],m=s.shape.slice(0,-2),g=i.shape.slice(0,-2),b=x(m),y=x(g),w=wi(s.shape.slice(0,-2),i.shape.slice(0,-2)).concat([d,p]);f(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${s.shape} and ${i.shape} and transposeA=${a} and transposeB=${o} must match.`));const v=o?[y,p,h]:[y,h,p],k=Qy({inputs:{x:s},backend:n,attrs:{shape:a?[b,c,d]:[b,d,c]}}),I=Qy({inputs:{x:i},backend:n,attrs:{shape:v}}),C=a?k.shape[1]:k.shape[2],D=a?k.shape[2]:k.shape[1],E=o?I.shape[1]:I.shape[2],N=Math.max(b,y),S=n.data.get(k.dataId).values,$=n.data.get(I.dataId).values,T=B(k.shape),A=B(I.shape),[F,R,_]=a?[T[0],1,T[1]]:[T[0],T[1],1],[O,M,L]=o?[1,A[1],A[0]]:[A[1],1,A[0]],z=D*E,P=oi([N,D,E],k.dtype),W=P.values,U=n.blockSize;for(let e=0;e<N;e++)for(let t=0;t<D;t+=U)for(let n=0;n<E;n+=U)for(let r=0;r<C;r+=U){const s=Math.min(t+U,D),i=Math.min(n+U,E),a=Math.min(r+U,C);for(let o=t;o<s;o++)for(let t=n;t<i;t++){let n=0;for(let s=r;s<a;s++){const r=Math.min(e,b-1)*F,i=Math.min(e,y-1)*L;n+=S[r+o*R+s*_]*$[s*O+t*M+i]}W[e*z+(o*E+t)]+=n}}return n.disposeIntermediateTensorInfo(k),n.disposeIntermediateTensorInfo(I),n.makeTensorInfo(w,P.dtype,P.values)}const nw={kernelName:xe,backendName:"cpu",kernelFunc:tw},rw={kernelName:sr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:i,bias:a,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;let d,p,f;const m=[];d=tw({inputs:{a:s,b:i},attrs:{transposeA:u,transposeB:l},backend:n}),a&&(p=Zy({inputs:{a:d,b:a},backend:n}),m.push(d),d=p),c&&(f=Ly(n,d,c,o,h),m.push(d),d=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return d}};function sw(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const iw={kernelName:ee,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;my(t,"abs");let r=new Float32Array(x(t.shape));return r=sw(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}},aw=xy(te,(e=>Math.acos(e))),ow={kernelName:te,backendName:"cpu",kernelFunc:aw},uw=xy(ne,(e=>Math.acosh(e))),lw={kernelName:ne,backendName:"cpu",kernelFunc:uw},cw={kernelName:se,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;my(t,"addN");const s=r.map((e=>n.data.get(e.dataId).values)),i=oi(r[0].shape,r[0].dtype),a=i.values;for(let e=0;e<r.length;e++){const t=s[e];for(let e=0;e<a.length;e++)a[e]+=t[e]}return n.makeTensorInfo(i.shape,i.dtype,i.values)}};function hw(e,t,n,r,s){const i=t.length,a=x(t),o=B(t),u=B(s),l=N(n,x(s));for(let t=0;t<a;++t){const n=H(t,i,o),s=new Array(n.length);for(let e=0;e<s.length;e++)s[e]=n[r[e]];l[G(s,i,u)]=e[t]}return l}function dw(e){const{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{perm:i}=n;my(s,"transpose");const a=s.shape.length,o=new Array(a);for(let e=0;e<o.length;e++)o[e]=s.shape[i[e]];const u=hw(r.data.get(s.dataId).values,s.shape,s.dtype,i,o);return{dataId:r.write(u,o,s.dtype),shape:o,dtype:s.dtype}}const pw={kernelName:Zn,backendName:"cpu",kernelFunc:dw},fw={kernelName:ie,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r;my(s,"all");const o=D(i,s.shape);let u=o;const l=yo(u,s.shape.length);let c=s;null!=l&&(c=dw({inputs:{x:s},backend:n,attrs:{perm:l}}),u=vo(u.length,s.shape.length)),xo("all",u,c.shape.length);const[h,d]=go(c.shape,u),p=x(d),f=W(x(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];n=n&&r}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(a){const e=Qy({inputs:{x:g},backend:n,attrs:{shape:bo(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},mw={kernelName:ae,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r;my(s,"any");const o=D(i,s.shape);let u=o;const l=yo(u,s.shape.length);let c=s;null!=l&&(c=dw({inputs:{x:s},backend:n,attrs:{perm:l}}),u=vo(u.length,s.shape.length)),xo("any",u,c.shape.length);const[h,d]=go(c.shape,u),p=x(d),f=W(x(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];n=n||r}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(a){const e=Qy({inputs:{x:g},backend:n,attrs:{shape:bo(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},gw={kernelName:oe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i}=r;my(s,"argMax");let a=D(i,s.shape);const o=yo(a,s.shape.length);let u=s;const l=[];null!=o&&(u=dw({inputs:{x:s},backend:n,attrs:{perm:o}}),l.push(u),a=vo(a.length,u.shape.length)),a=[a[0]],xo("argMax",a,u.shape.length);const[c,h]=go(u.shape,a),d=W(x(c),"int32"),p=x(h),f=n.data.get(u.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],r=0;for(let e=0;e<p;++e){const s=f[t+e];s>n&&(n=s,r=e)}d[e]=r}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},bw={kernelName:ue,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i}=r;my(s,"argMin");let a=D(i,s.shape);const o=yo(a,s.shape.length);let u=s;const l=[];null!=o&&(u=dw({inputs:{x:s},backend:n,attrs:{perm:o}}),l.push(u),a=vo(a.length,u.shape.length)),a=[a[0]],xo("argMin",a,u.shape.length);const[c,h]=go(u.shape,a),d=W(x(c),"int32"),p=x(h),f=n.data.get(u.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],r=0;for(let e=0;e<p;++e){const s=f[t+e];s<n&&(n=s,r=e)}d[e]=r}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},xw=xy(le,(e=>Math.asin(e))),yw={kernelName:le,backendName:"cpu",kernelFunc:xw},ww=xy(ce,(e=>Math.asinh(e))),vw={kernelName:ce,backendName:"cpu",kernelFunc:ww},kw=xy(he,(e=>Math.atan(e))),Iw={kernelName:he,backendName:"cpu",kernelFunc:kw},Cw=Ey(((e,t)=>Math.atan2(e,t))),Dw=qy(pe,Cw),Ew={kernelName:pe,backendName:"cpu",kernelFunc:Dw},Nw=xy(de,(e=>Math.atanh(e))),Sw={kernelName:de,backendName:"cpu",kernelFunc:Nw};function $w(e,t,n,r,s,i){const a=s.strideHeight,o=s.strideWidth,u=s.dilationHeight,l=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,d=s.padInfo.top,p=s.padInfo.left,f="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=oi(s.outShape,n),g=m.values,b=s.outShape[1]*s.outShape[2]*s.outShape[3],x=s.outShape[2]*s.outShape[3],y=s.outShape[3];for(let t=0;t<s.batchSize;++t){const n=t*b,m=t*r[0];for(let t=0;t<s.inChannels;++t)for(let b=0;b<s.outHeight;++b){const w=b*a-d,v=Math.max(0,w),k=Math.min(s.inHeight,c+w),I=n+b*x;for(let n=0;n<s.outWidth;++n){const a=n*o-p,c=Math.max(0,a),d=Math.min(s.inWidth,h+a);let b=f,x=0,w=0;for(let n=v;n<k;n+=u){const s=m+n*r[1];for(let n=c;n<d;n+=l){const a=e[s+n*r[2]+t];"max"===i&&a>b?b=a:"avg"===i&&(x+=a,w++)}if(isNaN(b))break}g[I+n*y+t]="avg"===i?x/w:b}}}return m}function Tw(e,t,n,r,s=!1,i=!1){const a=oi(r.outShape,"int32"),o=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m=oi(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const g=n*o-p;let b=g;for(;b<0;)b+=l;const x=Math.min(r.inHeight,h+g);for(let o=0;o<r.outWidth;++o){const h=o*u-f;let p=h;for(;p<0;)p+=c;const y=Math.min(r.inWidth,d+h);let w=Number.NEGATIVE_INFINITY,v=-1;for(let n=b;n<x;n+=l){const a=n-g;for(let o=p;o<y;o+=c){const u=o-h,l=m.get(e,n,o,t);l>w&&(w=l,v=s?i?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:a*d+u)}}a.set(v,e,n,o,t)}}return a}function Aw(e,t,n,r,s,i){const a=s.strideDepth,o=s.strideHeight,u=s.strideWidth,l=s.dilationDepth,c=s.dilationHeight,h=s.dilationWidth,d=s.effectiveFilterDepth,p=s.effectiveFilterHeight,f=s.effectiveFilterWidth,m=s.padInfo.front,g=s.padInfo.top,b=s.padInfo.left,x="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,y=oi(s.outShape,n),w=y.values,v=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],k=s.outShape[2]*s.outShape[3]*s.outShape[4],I=s.outShape[3]*s.outShape[4],C=s.outShape[4];for(let t=0;t<s.batchSize;++t){const n=t*v,y=t*r[0];for(let t=0;t<s.inChannels;++t)for(let v=0;v<s.outDepth;++v){const D=v*a-m;let E=D;for(;E<0;)E+=l;const N=Math.min(s.inDepth,d+D),S=n+v*k;for(let n=0;n<s.outHeight;++n){const a=n*o-g;let d=a;for(;d<0;)d+=c;const m=Math.min(s.inHeight,p+a),v=S+n*I;for(let n=0;n<s.outWidth;++n){const a=n*u-b;let o=a;for(;o<0;)o+=h;const p=Math.min(s.inWidth,f+a),g=v+n*C;let k=x,I=0,D=0;for(let n=E;n<N;n+=l){const s=y+n*r[1];for(let n=d;n<m;n+=c){const a=s+n*r[2];for(let n=o;n<p;n+=h){const s=e[a+n*r[3]+t];if("max"===i&&s>k?k=s:"avg"===i&&(I+=s,D++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}w[g+t]="avg"===i?I/D:k}}}}return y}const Fw={kernelName:fe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;my(s,"avgPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:u}=r;f(da(a,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const l=na(s.shape,i,a,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&y(l.inShape,l.outShape))c=ky({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=B(s.shape),r=$w(e,s.shape,s.dtype,t,l,"avg");c=n.makeTensorInfo(l.outShape,s.dtype,r.values)}return c}},Rw={kernelName:ge,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:i,strides:a,pad:o,dimRoundingMode:u,dataFormat:l}=r;my(s,"avgPool3d");const c=ra(s.shape,i,a,1,o,u,l),h=Aw(n.data.get(s.dataId).values,s.shape,s.dtype,B(s.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},_w={kernelName:be,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,{filterSize:a,strides:o,pad:u,dimRoundingMode:l}=r;my([s,i],"avgPool3DGrad");const c=ra(i.shape,a,o,1,u,l),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,b=c.dilationDepth,x=c.dilationHeight,y=c.dilationWidth,w=c.effectiveFilterDepth,v=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=w-1-c.padInfo.front,C=k-1-c.padInfo.left,D=v-1-c.padInfo.top,E=oi(i.shape,"float32"),N=1/(f*m*g),S=n.bufferSync(s);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let s=0;s<c.inWidth;++s){const i=n-I,a=r-D,o=s-C;let u=0;for(let n=0;n<w;n+=b){const r=(i+n)/h;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let n=0;n<v;n+=x){const s=(a+n)/d;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let n=0;n<k;n+=y){const i=(o+n)/p;i<0||i>=c.outWidth||Math.floor(i)!==i||(u+=S.get(e,r,s,i,t))}}}E.set(u*N,e,n,r,s,t)}return n.makeTensorInfo(E.shape,E.dtype,E.values)}},Ow={kernelName:me,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,a=i;my([s,i],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=na(a.shape,o,u,1,l),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,b=c.effectiveFilterHeight,x=c.effectiveFilterWidth,y=x-1-c.padInfo.left,w=b-1-c.padInfo.top,v=oi(a.shape,"float32"),k=1/(p*f),I=n.data.get(s.dataId).values,C=oi(s.shape,"float32",I);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=n-w,i=r-y;let a=0;for(let n=0;n<b;n+=m){const r=(s+n)/h;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<x;n+=g){const s=(i+n)/d;s<0||s>=c.outWidth||Math.floor(s)!==s||(a+=C.get(e,r,s,t))}}v.set(a*k,e,n,r,t)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},Mw={kernelName:ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,scale:i,offset:a,mean:o,variance:u}=t;f(o.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),f(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),f(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),my([s,o,u,i,a],"batchNorm");let{varianceEpsilon:l}=r;null==l&&(l=.001);const c=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(u.dataId).values,p=i?n.data.get(i.dataId).values:new Float32Array([1]),m=a?n.data.get(a.dataId).values:new Float32Array([0]),g=new Float32Array(c.length),b=m.length,x=p.length,y=d.length,w=h.length;let v=0,k=0,I=0,C=0;for(let e=0;e<c.length;++e)g[e]=m[v++]+(c[e]-h[k++])*p[I++]/Math.sqrt(d[C++]+l),v>=b&&(v=0),k>=w&&(k=0),I>=x&&(I=0),C>=y&&(C=0);return n.makeTensorInfo(s.shape,s.dtype,g)}};function Bw(e,t,n,r,s){const i=Ri(r,t,n),a=x(n),o=B(r);if(i){const n=_i(t,o);return"string"===s?e.slice(n,n+a):e.subarray(n,n+a)}const u=oi(r,s,"string"===s?Nc(e):e),l=oi(n,s);for(let e=0;e<l.size;++e){const n=l.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));l.set(u.get(...r),...n)}return"string"===s?Sc(l.values):l.values}function Lw(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:i,size:a}=r;my(s,"slice");const[o,u]=Oi(s,i,a);vi(s,o,u);const l=Bw(n.data.get(s.dataId).values,o,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,l)}const zw={kernelName:In,backendName:"cpu",kernelFunc:Lw},Pw={kernelName:ye,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:i,crops:a}=r;my([s],"batchToSpaceND");const o=i.reduce(((e,t)=>e*t)),u=Rl(s.shape,i,o),l=_l(u.length,i.length),c=Ol(s.shape,i,o),h=Ml(a,i.length),d=Bl(c,a,i.length),p=Qy({inputs:{x:s},backend:n,attrs:{shape:u}}),f=dw({inputs:{x:p},backend:n,attrs:{perm:l}}),m=Qy({inputs:{x:f},backend:n,attrs:{shape:c}}),g=Lw({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function Ww(e,t,n,r,s){const i=x(r),a=W(s,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=s||(a[r]+=i>0?t[n]:1)}return a}function Uw(e,t,n,r=!1){const s=e.shape[0],i=e.shape[1],a=oi([s,n],t.dtype);for(let o=0;o<s;o++)for(let s=0;s<i;s++){const i=e.get(o,s);if(i<0)throw new Error("Input x must be non-negative!");i>=n||(r?a.set(1,o,i):t.size>0?a.set(a.get(o,i)+t.get(o,s),o,i):a.set(a.get(o,i)+1,o,i))}return a}const Vw={kernelName:we,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:i}=t,{size:a}=r,o=Ww(n.data.get(s.dataId).values,n.data.get(i.dataId).values,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,o)}},Gw={kernelName:ve,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,i=n.data.get(r.dataId).values,a=n.data.get(s.dataId).values,o=wi(Array.from(i),Array.from(a));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},Hw=_y((e=>Math.ceil(e))),jw=yy(Ie,Hw),qw={kernelName:Ie,backendName:"cpu",kernelFunc:jw},Kw=xy(Ce,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),Xw={kernelName:Ce,backendName:"cpu",kernelFunc:Kw},Yw={kernelName:Ee,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(x(t.shape)),s=n.data.get(t.dataId),i=s.complexTensorInfos.real,a=s.complexTensorInfos.imag,o=n.data.get(i.dataId).values,u=n.data.get(a.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=u[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function Zw(e,t,n,r){const s=S(n,x(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=x(e.shape);s.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const i="string"===n?Nc(e.vals):e.vals;let a=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)s[o+t]=i[a++]}r+=e.shape[1]}))}return s}function Jw(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.imag,i=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,i)}const Qw={kernelName:mt,backendName:"cpu",kernelFunc:Jw};function ev(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,i=D(s,t[0].shape)[0];Il(t.map((e=>e.shape)),i);let a=Cl(t.map((e=>e.shape)),i);if(0===x(a))return n.makeTensorInfo(a,t[0].dtype,[]);const o=t.filter((e=>x(e.shape)>0));if(1===o.length)return ky({inputs:{x:o[0]},backend:n});if("complex64"===o[0].dtype){const e=o.map((e=>Uy({inputs:{input:e},backend:n}))),t=o.map((e=>Jw({inputs:{input:e},backend:n}))),r=ev({inputs:e,backend:n,attrs:{axis:i}}),s=ev({inputs:t,backend:n,attrs:{axis:i}}),a=zy({inputs:{real:r,imag:s},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),a}const u=o.map((e=>{const t=x(e.shape.slice(i));return Qy({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),l=u.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));a=Cl(u.map((e=>e.shape)),1);const c=1===u[0].shape[0],h=Zw(l,a,t[0].dtype,c),d=Cl(o.map((e=>e.shape)),i),p=n.makeTensorInfo(d,t[0].dtype,h);return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}const tv={kernelName:Ne,backendName:"cpu",kernelFunc:ev};function nv(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:a,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r;my([s,i],"conv2d");const h=pa(u),d=sa(s.shape,i.shape,a,l,o,c,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,b=d.padInfo.left,x=d.padInfo.top,y="channelsLast"===d.dataFormat,w=new Gr(d.outShape,s.dtype),v=B(s.shape),k=B(i.shape),I=v[0],C=y?v[1]:v[2],D=y?v[2]:1,E=y?1:v[1],N=w.strides[0],S=y?w.strides[1]:w.strides[2],$=y?w.strides[2]:1,T=y?1:w.strides[1],A=n.data.get(s.dataId).values,F=n.data.get(i.dataId).values,R=w.values;for(let e=0;e<d.batchSize;++e){const t=e*I,n=e*N;for(let e=0;e<d.outHeight;++e){const r=n+e*S,s=e*d.strideHeight-x;for(let e=0;e<p;++e){const n=s+e*m;if(n<0||n>=d.inHeight)continue;const i=e*k[0],a=t+n*C;for(let e=0;e<d.outWidth;++e){const t=r+e*$,n=e*d.strideWidth-b;for(let e=0;e<f;++e){const r=n+e*g;if(r<0||r>=d.inWidth)continue;const s=a+r*D;let o=i+e*k[1];for(let e=0;e<d.inChannels;++e){const n=A[s+e*E];for(let e=0;e<d.outChannels;++e)R[t+e*T]+=n*F[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,R)}const rv={kernelName:Se,backendName:"cpu",kernelFunc:nv},sv={kernelName:$e,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:a,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r;my([s,i],"conv2dBackpropFilter");const h=pa(u),d=sa(s.shape,c,a,1,o,l,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,b="channelsLast"===d.dataFormat,x=new Gr(d.filterShape,"float32"),y=d.padInfo.left,w=d.padInfo.top,v=n.data.get(s.dataId).values,k=n.data.get(i.dataId).values,I=new Gr(s.shape,s.dtype,v),C=new Gr(i.shape,i.dtype,k);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((w-e)/p)),n=Math.min(d.outHeight,(d.inHeight+w-e)/p);for(let r=0;r<g;++r){const s=Math.max(0,Math.ceil((y-r)/f)),i=Math.min(d.outWidth,(d.inWidth+y-r)/f);for(let a=0;a<d.inChannels;++a)for(let o=0;o<d.outChannels;++o){let u=0;for(let l=0;l<d.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*p-w;for(let e=s;e<i;++e){const n=r+e*f-y;u+=b?I.get(l,t,n,a)*C.get(l,c,e,o):I.get(l,a,t,n)*C.get(l,o,c,e)}}x.set(u,e,r,a,o)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},iv={kernelName:Te,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{inputShape:a,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r;my([s,i],"conv2dBackpropInput");const h=B(i.shape),d=B(s.shape);let p=pa(l);const f=sa(a,i.shape,o,1,u,c,!1,p),m=new Gr(f.inShape,"float32"),g=m.values,b=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,[y,w,v]=h,{batchSize:k,filterHeight:I,filterWidth:C,inChannels:D,inHeight:E,inWidth:N,outChannels:S,outHeight:$,outWidth:T,strideHeight:A,strideWidth:F}=f;p=f.dataFormat;const R=I-1-f.padInfo.top,_=C-1-f.padInfo.left,O="channelsLast"===p,M=m.strides[0],L=O?m.strides[1]:m.strides[2],z=O?m.strides[2]:1,P=O?1:m.strides[1],W=d[0],U=O?d[1]:d[2],V=O?d[2]:1,G=O?1:d[1];for(let e=0;e<k;++e)for(let t=0;t<D;++t)for(let n=0;n<E;++n){const r=n-R,s=Math.max(0,Math.ceil(r/A)),i=Math.min($,(I+r)/A);for(let a=0;a<N;++a){const o=a-_,u=Math.max(0,Math.ceil(o/F)),l=Math.min(T,(C+o)/F);let c=0;for(let n=s;n<i;++n){const s=n*A-r;for(let r=u;r<l;++r){const i=W*e+U*n+V*r,a=y*(I-1-s)+w*(C-1-(r*F-o))+v*t;for(let e=0;e<S;++e)c+=b[i+G*e]*x[a+e]}}g[M*e+L*n+z*a+P*t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},av={kernelName:Ae,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:a,pad:o,dilations:u}=r;my([s,i],"conv3d");const l=ia(s.shape,i.shape,a,u,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=l,b=g.front,x=g.left,y=g.top,w=new Gr(l.outShape,s.dtype),v=n.data.get(s.dataId).values,k=n.data.get(i.dataId).values,I=w.values,C=B(s.shape),D=B(i.shape);for(let e=0;e<l.batchSize;++e){const t=e*C[0],n=e*w.strides[0];for(let e=0;e<l.outDepth;++e){const r=n+e*w.strides[1],s=e*l.strideDepth-b;for(let e=0;e<c;++e){const n=s+e*p;if(n<0||n>=l.inDepth)continue;const i=e*D[0],a=t+n*C[1];for(let e=0;e<l.outHeight;++e){const t=r+e*w.strides[2],n=e*l.strideHeight-y;for(let e=0;e<h;++e){const r=n+e*f;if(r<0||r>=l.inHeight)continue;const s=i+e*D[1],o=a+r*C[2];for(let e=0;e<l.outWidth;++e){const n=t+e*l.outChannels,r=e*l.strideWidth-x;for(let e=0;e<d;++e){const t=r+e*m;if(t<0||t>=l.inWidth)continue;const i=s+e*D[2],a=o+t*l.inChannels;let u=i;for(let e=0;e<l.inChannels;++e){const t=v[a+e];for(let e=0;e<l.outChannels;++e)I[n+e]+=t*k[u+e];u+=l.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},ov={kernelName:Fe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:a,pad:o,filterShape:u}=r;my([s,i],"conv3dBackpropFilterV2");const l=B(s.shape),c=B(i.shape),h=ia(s.shape,u,a,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,b=h.filterWidth,x=new Gr(h.filterShape,"float32"),y=x.values,[w,v,k,I]=x.strides,C=n.data.get(i.dataId).values,[D,E,N,S]=c,$=n.data.get(s.dataId).values,[T,A,F,R]=l,_=h.padInfo.front,O=h.padInfo.left,M=h.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((_-e)/d)),n=Math.min(h.outDepth,(h.inDepth+_-e)/d),r=e*w;for(let s=0;s<g;++s){const i=Math.max(0,Math.ceil((M-s)/p)),a=Math.min(h.outHeight,(h.inHeight+M-s)/p),o=s*v+r;for(let r=0;r<b;++r){const u=Math.max(0,Math.ceil((O-r)/f)),l=Math.min(h.outWidth,(h.inWidth+O-r)/f),c=r*k+o;for(let o=0;o<h.inChannels;++o){const m=o*I+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*T,b=m*D;for(let m=t;m<n;++m){const t=(e+m*d-_)*A+h,n=m*E+b;for(let e=i;e<a;++e){const i=(s+e*p-M)*F+t,a=e*N+n;for(let e=u;e<l;++e){const t=e*S+a;g+=$[(r+e*f-O)*R+i+o]*C[t+c]}}}}y[m+c]=g}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},uv={kernelName:Re,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{pad:a,strides:o,inputShape:u}=r;my([s],"conv3dBackpropInputV2");const l=B(s.shape),c=B(i.shape),h=ia(u,i.shape,o,1,a),d=new Gr(h.inShape,"float32"),p=d.values,[f,m,g,b]=d.strides,x=n.data.get(s.dataId).values,[y,w,v,k]=l,I=n.data.get(i.dataId).values,[C,D,E,N]=c,{batchSize:S,filterDepth:$,filterHeight:T,filterWidth:A,inChannels:F,inDepth:R,inHeight:_,inWidth:O,outChannels:M,outDepth:L,outHeight:z,outWidth:P,strideDepth:W,strideHeight:U,strideWidth:V}=h,G=$-1-h.padInfo.front,H=T-1-h.padInfo.top,j=A-1-h.padInfo.left;for(let e=0;e<S;++e)for(let t=0;t<F;++t)for(let n=0;n<R;++n){const r=n-G,s=Math.max(0,Math.ceil(r/W)),i=Math.min(L,($+r)/W);for(let a=0;a<_;++a){const o=a-H,u=Math.max(0,Math.ceil(o/U)),l=Math.min(z,(T+o)/U);for(let c=0;c<O;++c){const h=c-j,d=Math.max(0,Math.ceil(h/V)),S=Math.min(P,(A+h)/V);let F=0;for(let n=s;n<i;++n){const s=n*W-r;for(let r=u;r<l;++r){const i=r*U-o;for(let a=d;a<S;++a){const o=y*e+w*n+v*r+k*a,u=C*($-1-s)+D*(T-1-i)+E*(A-1-(a*V-h))+N*t;for(let e=0;e<M;++e)F+=x[o+e]*I[u+e]}}}p[f*e+m*n+g*a+b*c+t]=F}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},lv=xy(_e,(e=>Math.cos(e))),cv={kernelName:_e,backendName:"cpu",kernelFunc:lv},hv=xy(Oe,(e=>Math.cosh(e))),dv={kernelName:Oe,backendName:"cpu",kernelFunc:hv},pv={kernelName:Le,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:i,boxInd:a}=t,{cropSize:o,method:u,extrapolationValue:l}=r,[c,h,d,p]=s.shape,f=i.shape[0],[m,g]=o,b=oi([f,m,g,p],"float32"),x=n.data.get(i.dataId).values,y=n.data.get(a.dataId).values,w=n.data.get(s.dataId).values,v=B(s.shape),k=B(b.shape);for(let e=0;e<f;e++){const t=4*e,n=x[t],r=x[t+1],s=x[t+2],i=x[t+3],a=y[e];if(a>=c)continue;const o=m>1?(s-n)*(h-1)/(m-1):0,f=g>1?(i-r)*(d-1)/(g-1):0;for(let t=0;t<m;t++){const c=m>1?n*(h-1)+t*o:.5*(n+s)*(h-1);if(c<0||c>h-1)for(let n=0;n<g;n++)for(let r=0;r<p;r++){const s=r+n*k[2]+t*k[1]+e*k[0];b.values[s]=l}else if("bilinear"===u){const n=Math.floor(c),s=Math.ceil(c),o=c-n;for(let u=0;u<g;u++){const c=g>1?r*(d-1)+u*f:.5*(r+i)*(d-1);if(c<0||c>d-1){for(let n=0;n<p;n++){const r=n+u*k[2]+t*k[1]+e*k[0];b.values[r]=l}continue}const h=Math.floor(c),m=Math.ceil(c),x=c-h;for(let r=0;r<p;r++){let i=r+h*v[2]+n*v[1]+a*v[0];const l=w[i];i=r+m*v[2]+n*v[1]+a*v[0];const c=w[i];i=r+h*v[2]+s*v[1]+a*v[0];const d=w[i];i=r+m*v[2]+s*v[1]+a*v[0];const p=l+(c-l)*x,f=d+(w[i]-d)*x;i=r+u*k[2]+t*k[1]+e*k[0],b.values[i]=p+(f-p)*o}}}else for(let n=0;n<g;++n){const s=g>1?r*(d-1)+n*f:.5*(r+i)*(d-1);if(s<0||s>d-1){for(let r=0;r<p;r++){const s=r+n*k[2]+t*k[1]+e*k[0];b.values[s]=l}continue}const o=Math.round(s),u=Math.round(c);for(let r=0;r<p;r++){const s=r+o*v[2]+u*v[1]+a*v[0],i=r+n*k[2]+t*k[1]+e*k[0];b.values[i]=w[s]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},fv={kernelName:Me,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,exclusive:a,reverse:o}=r;my(s,"cumprod");const u=yo([i],s.shape.length);let l=s;null!=u&&(l=dw({inputs:{x:s},backend:n,attrs:{perm:u}}));const c=vo(1,s.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=rs(l.dtype,"int32"),d=P(x(l.shape),h),p=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)d[n]=a?1:p[n];else{const r=m(e,t-1);d[n]=a?p[r]*d[r]:p[n]*d[r]}}const g=n.makeTensorInfo(l.shape,h,d);if(null!=u){const e=dw({inputs:{x:g},backend:n,attrs:{perm:wo(u)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),e}return g}},mv={kernelName:Be,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,exclusive:a,reverse:o}=r;my(s,"cumsum");const u=yo([i],s.shape.length);let l=s;null!=u&&(l=dw({inputs:{x:s},backend:n,attrs:{perm:u}}));const c=vo(1,s.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=rs(l.dtype,"int32"),d=W(x(l.shape),h),p=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)d[n]=a?0:p[n];else{const r=m(e,t-1);d[n]=a?p[r]+d[r]:p[n]+d[r]}}const g=n.makeTensorInfo(l.shape,h,d);if(null!=u){const e=dw({inputs:{x:g},backend:n,attrs:{perm:wo(u)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),e}return g}},gv={kernelName:ze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:i}=t,{size:a,binaryOutput:o}=r;if(1===s.shape.length){const e=Ww(n.data.get(s.dataId).values,n.data.get(i.dataId).values,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,e)}if(2===s.shape.length){const e=Uw(n.bufferSync(s),n.bufferSync(i),a,o);return n.makeTensorInfo(e.shape,i.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}},bv={kernelName:Pe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:i,dataFormat:a}=r;f("NHWC"===a,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`));const o=s.shape[0],u=s.shape[1],l=s.shape[2],c=s.shape[3],h=u*i,d=l*i,p=c/(i*i),m=n.data.get(s.dataId).values,g=new Float32Array(o*h*d*p);let b=0;for(let e=0;e<o;++e)for(let t=0;t<h;++t){const n=Math.floor(t/i),r=t%i;for(let t=0;t<d;++t){const s=Math.floor(t/i),a=(r*i+t%i)*p;for(let t=0;t<p;++t){const r=t+a+c*(s+l*(n+u*e));g[b++]=m[r]}}}return n.makeTensorInfo([o,h,d,p],s.dtype,g)}};function xv(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:a,pad:o,dilations:u,dimRoundingMode:l}=r;my([s,i],"depthwiseConv2DNative");const c=B(s.shape),h=B(i.shape);let d=u;null==d&&(d=[1,1]),f(da(a,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${d}'`));const p=sa(s.shape,i.shape,a,d,o,l,!0),{filterHeight:m,filterWidth:g,dilationHeight:b,dilationWidth:x,padInfo:y}=p,w=y.left,v=y.top,k=p.outChannels/p.inChannels,I=new Gr(p.outShape,s.dtype),C=n.data.get(s.dataId).values,D=n.data.get(i.dataId).values,E=I.values;for(let e=0;e<p.batchSize;++e){const t=e*c[0],n=e*I.strides[0];for(let e=0;e<p.outHeight;++e){const r=n+e*I.strides[1],s=e*p.strideHeight-v;for(let e=0;e<m;++e){const n=s+e*b;if(n<0||n>=p.inHeight)continue;const i=e*h[0],a=t+n*c[1];for(let e=0;e<p.outWidth;++e){const t=r+e*I.strides[2],n=e*p.strideWidth-w;for(let e=0;e<g;++e){const r=n+e*x;if(r<0||r>=p.inWidth)continue;const s=i+e*h[1],o=a+r*p.inChannels;let u=t,l=s;for(let e=0;e<p.inChannels;++e){const t=C[o+e];for(let e=0;e<k;++e)E[u+e]+=t*D[l+e];u+=k,l+=k}}}}}}return n.makeTensorInfo(I.shape,I.dtype,I.values)}const yv={kernelName:We,backendName:"cpu",kernelFunc:xv},wv={kernelName:Ue,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:a,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r;my([s,i],"depthwiseConv2dNativeBackpropFilter");const h=sa(s.shape,c,a,o,u,l,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new Gr(h.filterShape,"float32"),b=h.padInfo.left,x=h.padInfo.top,y=h.outChannels/h.inChannels,w=n.data.get(s.dataId).values,v=new Gr(s.shape,s.dtype,w),k=n.data.get(i.dataId).values,I=new Gr(i.shape,i.dtype,k);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((x-e)/d)),n=Math.min(h.outHeight,(h.inHeight+x-e)/d);for(let r=0;r<m;++r){const s=Math.max(0,Math.ceil((b-r)/p)),i=Math.min(h.outWidth,(h.inWidth+b-r)/p);for(let a=0;a<h.outChannels;++a){const o=Math.trunc(a/y),u=a%y;let l=0;for(let u=0;u<h.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*d-x;for(let e=s;e<i;++e){const n=r+e*p-b;l+=v.get(u,t,n,o)*I.get(u,c,e,a)}}g.set(l,e,r,o,u)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},vv={kernelName:Ve,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{strides:a,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r;my([s,i],"depthwiseConv2DNativeBackpropInput");const h=B(s.shape),d=B(i.shape),p=sa(c,i.shape,a,o,u,l,!0),f=new Gr(p.inShape,"float32"),m=f.values,[g,b,x]=f.strides,y=n.data.get(s.dataId).values,[w,v,k]=h,I=n.data.get(i.dataId).values,[C,D,E]=d,{batchSize:N,filterHeight:S,filterWidth:$,inChannels:T,inHeight:A,inWidth:F,outChannels:R,outHeight:_,outWidth:O,strideHeight:M,strideWidth:L}=p,z=S-1-p.padInfo.top,P=$-1-p.padInfo.left,W=R/T;for(let e=0;e<N;++e)for(let t=0;t<T;++t)for(let n=0;n<A;++n){const r=n-z,s=Math.max(0,Math.ceil(r/M)),i=Math.min(_,(S+r)/M);for(let a=0;a<F;++a){const o=a-P,u=Math.max(0,Math.ceil(o/L)),l=Math.min(O,($+o)/L);let c=0;for(let n=s;n<i;++n){const s=n*M-r;for(let r=u;r<l;++r){const i=w*e+v*n+k*r,a=C*(S-1-s)+D*($-1-(r*L-o))+E*t;for(let e=0;e<W;++e)c+=y[i+(t*W+e)]*I[a+e]}}m[g*e+b*n+x*a+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},kv={kernelName:Ge,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=x(r.shape),i=n.data.get(r.dataId).values,a=oi([s,s],r.dtype),o=a.values;for(let e=0;e<i.length;e++)o[e*s+e]=i[e];const u=[...r.shape,...r.shape];return n.makeTensorInfo(u,a.dtype,a.values)}},Iv={kernelName:He,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s}=e,{strides:i,pad:a,dilations:o}=n,u=t,l=u.data.get(r.dataId).values,c=r.shape.length,h=u.data.get(s.dataId).values,d=s.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:b,outWidth:y,padInfo:w,strideHeight:v,strideWidth:k,filterHeight:I,filterWidth:C,dilationHeight:D,dilationWidth:E,outShape:N}=ta(r.shape,s.shape,i,a,"NHWC",o),$=x(N),T=N.length,A=S(r.dtype,$);for(let e=0;e<p;++e)for(let t=0;t<b;++t){const n=t*v-w.top;for(let i=0;i<y;++i){const a=i*k-w.left;for(let o=0;o<g;++o){let u=Number.MIN_SAFE_INTEGER;for(let t=0;t<I;++t){const i=n+t*D;if(i>=0&&i<f)for(let n=0;n<C;++n){const p=a+n*E;if(p>=0&&p<m){const a=G([e,i,p,o],c,B(r.shape)),f=G([t,n,o],d,B(s.shape)),m=l[a]+h[f];m>u&&(u=m)}}}A[G([e,t,i,o],T,B(N))]=u}}}return{dataId:u.write(Fr(A,r.dtype),N,r.dtype),shape:N,dtype:r.dtype}}},Cv={kernelName:qe,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:i}=e,{strides:a,pad:o,dilations:u}=n,l=t,c=z(r.shape,l.data.get(r.dataId).values),h=z(s.shape,l.data.get(s.dataId).values),{batchSize:d,inHeight:p,inWidth:m,inChannels:g,outHeight:b,outWidth:x,padInfo:y,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:I,dilationHeight:C,dilationWidth:D,outShape:E}=ta(r.shape,s.shape,a,o,"NHWC",u);f(i.rank===E.length,(()=>`Error in Dilation2DBackpropFilter, dy must have the same rank as output ${E.length}, but got ${i.rank}`));const N=z(E,l.data.get(i.dataId).values),S=U(s.shape,s.dtype);for(let e=0;e<d;++e)for(let t=0;t<b;++t){const n=t*w-y.top;for(let r=0;r<x;++r){const s=r*v-y.left;for(let i=0;i<g;++i){let a=Number.MIN_SAFE_INTEGER,o=0,u=0;for(let t=0;t<k;++t){const r=n+t*C;if(r>=0&&r<p)for(let n=0;n<I;++n){const l=s+n*D;if(l>=0&&l<m){const s=c[e][r][l][i]+h[t][n][i];s>a&&(a=s,o=t,u=n)}}}S[o][u][i]+=N[e][t][r][i]}}}return{dataId:l.write(Fr(S,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Dv={kernelName:je,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:i}=e,{strides:a,pad:o,dilations:u}=n,l=t,c=z(r.shape,l.data.get(r.dataId).values),h=z(s.shape,l.data.get(s.dataId).values),{batchSize:d,inHeight:p,inWidth:m,inChannels:g,outHeight:b,outWidth:x,padInfo:y,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:I,dilationHeight:C,dilationWidth:D,outShape:E}=ta(r.shape,s.shape,a,o,"NHWC",u);f(i.rank===E.length,(()=>`Error in Dilation2DBackpropInput, dy must have the same rank as output ${E.length}, but got ${i.rank}`));const N=z(E,l.data.get(i.dataId).values),S=U(r.shape,r.dtype);for(let e=0;e<d;++e)for(let t=0;t<b;++t){const n=t*w-y.top;for(let r=0;r<x;++r){const s=r*v-y.left;for(let i=0;i<g;++i){let a=Number.MIN_SAFE_INTEGER,o=n<0?0:n,u=s<0?0:s;for(let t=0;t<k;++t){const r=n+t*C;if(r>=0&&r<p)for(let n=0;n<I;++n){const l=s+n*D;if(l>=0&&l<m){const s=c[e][r][l][i]+h[t][n][i];s>a&&(a=s,o=r,u=l)}}}S[e][o][u][i]+=N[e][t][r][i]}}}return{dataId:l.write(Fr(S,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Ev=Ey(((e,t)=>e*t)),Nv=Ky(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),Sv=qy(Vt,Ev,Nv),$v={kernelName:Vt,backendName:"cpu",kernelFunc:Sv};function Tv(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r;let o;my(s,"sum"),o="bool"===s.dtype?Hy({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):ky({inputs:{x:s},backend:n});const u=o.shape.length,l=D(i,o.shape),c=yo(l,u);let h=l,d=o;null!=c&&(d=dw({inputs:{x:o},backend:n,attrs:{perm:c}}),h=vo(h.length,u)),xo("sum",h,d.shape.length);const[p,f]=go(d.shape,h);let m=Wy(n,p,rs(d.dtype,"int32"));const g=x(f),b=n.data.get(m.dataId).values,y=n.data.get(d.dataId).values;for(let e=0;e<b.length;++e){const t=e*g;let n=0;for(let e=0;e<g;++e)n+=y[t+e];b[e]=n}if(a){const e=m;m=Qy({inputs:{x:m},backend:n,attrs:{shape:bo(m.shape,l)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(d),m}const Av={kernelName:Tn,backendName:"cpu",kernelFunc:Tv},Fv={kernelName:Xe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,i=t,{allDims:a,summedDims:o,idDims:u}=ic(s,i.length);oc(a.length,u,i);const{path:l,steps:c}=uc(o,u),h=c.length;let d=null,p=a.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=ac(p,u[t]);let s;lc(e)?s=i[t]:(s=dw({inputs:{x:i[t]},backend:n,attrs:{perm:e}}),f.push(s));const a=s.shape.slice();for(let e=0;e<r.length;++e)a.splice(r[e],0,1);y(s.shape,a)||(s=Qy({inputs:{x:s},backend:n,attrs:{shape:a}}),f.push(s)),null===d?d=s:(d=Sv({inputs:{a:s,b:d},backend:n}),f.push(d))}e<h-1&&(l[e]>=0&&(d=Tv({inputs:{x:d},backend:n,attrs:{axis:l[e]-(a.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},Rv={kernelName:Ze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:s}=t;my([r,s],"eluGrad");const i=new Float32Array(x(s.shape)),a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<a.length;++e){const t=a[e];i[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(s.shape,"float32",i)}},_v=Ey(((e,t)=>e===t?1:0)),Ov=qy(Qe,_v,null,"bool"),Mv={kernelName:Qe,backendName:"cpu",kernelFunc:Ov},Bv=Gl,Lv=Hl,zv=jl,Pv=ql,Wv=Kl,Uv=Xl,Vv=xy(Je,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+Bv*n);return t*(1-((((Uv*r+Wv)*r+Pv)*r+zv)*r+Lv)*r*Math.exp(-n*n))})),Gv={kernelName:Je,backendName:"cpu",kernelFunc:Vv},Hv=_y((e=>Math.exp(e))),jv=yy(et,Hv,"float32"),qv={kernelName:et,backendName:"cpu",kernelFunc:jv};function Kv(e){const{inputs:t,backend:n,attrs:r}=e,{input:s}=t,{dim:i}=r,a=s.shape.length,o=s.shape.slice();let u=i;return i<0&&(f(-(a+1)<=i,(()=>`Axis must be in the interval [${-(a+1)}, ${a}]`)),u=a+i+1),o.splice(u,0,1),Qy({inputs:{x:s},backend:n,attrs:{shape:o}})}const Xv={kernelName:tt,backendName:"cpu",kernelFunc:Kv},Yv=_y((e=>Math.expm1(e))),Zv=yy(nt,Yv),Jv={kernelName:nt,backendName:"cpu",kernelFunc:Zv},Qv=Ey(((e,t)=>e/t)),ek=qy(Ke,Qv),tk={kernelName:Ke,backendName:"cpu",kernelFunc:ek},nk=Ey(((e,t)=>e-t)),rk=Ky(((e,t,n,r)=>({real:e-n,imag:t-r}))),sk=qy(Hn,nk,rk),ik={kernelName:Hn,backendName:"cpu",kernelFunc:sk};function ak(e,t,n){const r=e.shape,s=r[0],i=r[1],a=n.data.get(e.dataId),o=a.complexTensorInfos.real,u=a.complexTensorInfos.imag,l=[s,i],c=x(l),h=N("float32",c),d=N("float32",c);for(let e=0;e<s;e++){const r=Lw({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,i]}}),s=Lw({inputs:{x:u},backend:n,attrs:{begin:[e,0],size:[1,i]}}),a=zy({inputs:{real:r,imag:s},backend:n}),{real:l,imag:c}=ok(a,t,n),p=Yl(l,c);for(let t=0;t<i;t++){const n=ec(p,t);h[e*i+t]=n.real,d[e*i+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a)}const p=n.makeTensorInfo(l,"float32",h),f=n.makeTensorInfo(l,"float32",d),m=zy({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function ok(e,t,n){const r=x(e.shape),s=n.data.get(e.dataId),i=n.data.get(s.complexTensorInfos.real.dataId).values,a=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0==((o=r)&o-1)){const s=uk(i,a,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",s.real),t=n.makeTensorInfo(o,"float32",s.imag),i=n.makeTensorInfo([],"float32",Ar(r,"float32")),a=ky({inputs:{x:i},backend:n}),u=tk.kernelFunc({inputs:{a:e,b:i},backend:n}),l=tk.kernelFunc({inputs:{a:t,b:a},backend:n}),c=n.data.get(u.dataId).values,h=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),{real:c,imag:h}}return s}{const e=function(e,t,n){const r=new Float32Array(2*t);for(let s=0;s<t;s++){let i=0,a=0;for(let r=0;r<t;r++){const o=rc(s*r,t,n),u=ec(e,r);i+=u.real*o.real-u.imag*o.imag,a+=u.real*o.imag+u.imag*o.real}n&&(i/=t,a/=t),tc(r,i,a,s)}return r}(Yl(i,a),r,t);return Zl(e)}var o}function uk(e,t,n,r,s){if(1===n)return{real:e,imag:t};const i=Yl(e,t),a=n/2,o=Jl(i),u=o.real,l=o.imag,c=[u.length],h=s.makeTensorInfo(c,"float32",u),d=s.makeTensorInfo(c,"float32",l),p=zy({inputs:{real:h,imag:d},backend:s}),f=Ql(i),m=f.real,g=f.imag,b=[m.length],x=s.makeTensorInfo(b,"float32",m),y=s.makeTensorInfo(b,"float32",g),w=zy({inputs:{real:x,imag:y},backend:s}),v=uk(u,l,a,r,s),k=v.real,I=v.imag,C=[k.length],D=s.makeTensorInfo(C,"float32",k),E=s.makeTensorInfo(C,"float32",I),N=zy({inputs:{real:D,imag:E},backend:s}),S=uk(m,g,a,r,s),$=S.real,T=S.imag,A=[$.length],F=s.makeTensorInfo(A,"float32",$),R=s.makeTensorInfo(A,"float32",T),_=zy({inputs:{real:F,imag:R},backend:s}),O=nc(n,r),M=[O.real.length],B=s.makeTensorInfo(M,"float32",O.real),L=s.makeTensorInfo(M,"float32",O.imag),z=zy({inputs:{real:B,imag:L},backend:s}),P=Sv({inputs:{a:z,b:_},backend:s}),W=Zy({inputs:{a:N,b:P},backend:s}),U=sk({inputs:{a:N,b:P},backend:s}),V=Uy({inputs:{input:W},backend:s}),G=Uy({inputs:{input:U},backend:s}),H=Jw({inputs:{input:W},backend:s}),j=Jw({inputs:{input:U},backend:s}),q=ev({inputs:[V,G],backend:s,attrs:{axis:0}}),K=ev({inputs:[H,j],backend:s,attrs:{axis:0}}),X=s.data.get(q.dataId).values,Y=s.data.get(K.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(y),s.disposeIntermediateTensorInfo(w),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(E),s.disposeIntermediateTensorInfo(N),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(R),s.disposeIntermediateTensorInfo(_),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}const lk={kernelName:rt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=x(r.shape),i=r.shape[r.shape.length-1],a=Qy({inputs:{x:r},backend:n,attrs:{shape:[s/i,i]}}),o=ak(a,!1,n),u=Qy({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),u}};function ck(e){const{backend:t,attrs:n}=e,{shape:r,value:s,dtype:i}=n,a=i||_(s),o=S(a,x(r));return function(e,t,n){e.fill(t)}(o,s),t.makeTensorInfo(r,a,o)}const hk={kernelName:st,backendName:"cpu",kernelFunc:ck},dk={kernelName:it,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,s=n,i=N(r.dtype,x(r.shape)),[a,o,u,l]=r.shape,c=s.data.get(r.dataId).values;for(let e=0;e<a;e++){const t=e*u*o*l;for(let e=0;e<o;e++){const n=e*(u*l);for(let e=0;e<u;e++){const r=e*l;for(let s=0;s<l;s++){const a=Math.round(u-e-1),o=t+n+r+s;let h=c[o];a>=0&&a<u&&(h=c[t+n+a*l+s]),i[o]=h}}}}return{dataId:s.write(i,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},pk=_y((e=>Math.floor(e))),fk=yy(at,pk),mk={kernelName:at,backendName:"cpu",kernelFunc:fk},gk=Ey(((e,t)=>Math.floor(e/t))),bk=qy(ot,gk,null,"int32"),xk={kernelName:ot,backendName:"cpu",kernelFunc:bk},yk={kernelName:ir,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i,bias:a,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=nv({inputs:{x:s,filter:i},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d}});if(a){const e=m;if("NCHW"===c&&1===a.shape.length&&1!==a.shape[0]){const e=Qy({inputs:{x:a},backend:n,attrs:{shape:[a.shape[0],1,1]}});m=Zy({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=Zy({inputs:{a:m,b:a},backend:n});n.disposeIntermediateTensorInfo(e)}if(p){const e=m;if("NCHW"===c&&"prelu"===p&&1===o.shape.length&&1!==o.shape[0]){const e=Qy({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=Ly(n,m,p,e,f),n.disposeIntermediateTensorInfo(e)}else m=Ly(n,m,p,o,f);n.disposeIntermediateTensorInfo(e)}return m}},wk={kernelName:ar,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i,bias:a,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=xv({inputs:{x:s,filter:i},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d}});if(a){const e=m;m=Zy({inputs:{a:m,b:a},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=Ly(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}};function vk(e,t,n,r,s,i,a,o,u){const l=oi([r,i],n);for(let n=0;n<r;n++){const r=[];let c=0;for(let t=0;t<s;t++){const i=e[n*s+t];c+=i*a[t],r.push(i)}if(c<0||c>=u/i)throw new Error(`Invalid indices: ${r} does not index into ${o}`);for(let e=0;e<i;e++)l.values[n*i+e]=t.get(...t.indexToLoc(c*i+e))}return l}const kk={kernelName:ct,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,i=x(r.shape),a=s.shape,o=a[a.length-1],[u,l,c,h]=Ll(r,s);if(0===l)return n.makeTensorInfo(u,r.dtype,[]);const d=vk(n.data.get(s.dataId).values,n.bufferSync(r),r.dtype,l,o,c,h,r.shape,i);return n.makeTensorInfo(u,r.dtype,d.values)}};function Ik(e,t,n){const r=oi(n,e.dtype);for(let n=0;n<r.size;++n){const s=r.indexToLoc(n).slice(),i=s[0],a=s[2],o=t.locToIndex([i,a]);s[2]=t.values[o];const u=e.locToIndex(s);0<=u&&u<e.values.length&&(r.values[n]=e.values[u])}return r}const Ck={kernelName:lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:i}=t,{axis:a,batchDims:o}=r;my([s,i],"gatherV2");const u=D(a,s.shape)[0],l=n.data.get(i.dataId).values,c=s.shape[u];for(let e=0;e<l.length;++e){const t=l[e];f(t<=c-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`))}let h=o;null==o&&(h=0);const d=x(i.shape),p=Ec(s,i,u,h),m=Qy({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),g=Qy({inputs:{x:i},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}}),b=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],y=n.bufferSync(g),w=Ik(n.bufferSync(m),y,b);return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),n.makeTensorInfo(p.outputShape,w.dtype,w.values)}},Dk=Ey(((e,t)=>e>t?1:0)),Ek=qy(ht,Dk,null,"bool"),Nk={kernelName:ht,backendName:"cpu",kernelFunc:Ek},Sk=Ey(((e,t)=>e>=t?1:0)),$k=qy(dt,Sk,null,"bool"),Tk={kernelName:dt,backendName:"cpu",kernelFunc:$k},Ak={kernelName:ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=x(r.shape),i=r.shape[r.shape.length-1],a=Qy({inputs:{x:r},backend:n,attrs:{shape:[s/i,i]}}),o=ak(a,!0,n),u=Qy({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),u}},Fk=xy(gt,(e=>Number.isFinite(e)?1:0),"bool"),Rk={kernelName:gt,backendName:"cpu",kernelFunc:Fk},_k=xy(bt,(e=>Math.abs(e)===1/0?1:0),"bool"),Ok={kernelName:bt,backendName:"cpu",kernelFunc:_k},Mk=xy(xt,(e=>Number.isNaN(e)?1:0),"bool"),Bk={kernelName:xt,backendName:"cpu",kernelFunc:Mk},Lk=Ey(((e,t)=>e<t?1:0)),zk=qy(wt,Lk,null,"bool"),Pk={kernelName:wt,backendName:"cpu",kernelFunc:zk},Wk=Ey(((e,t)=>e<=t?1:0)),Uk=qy(vt,Wk,null,"bool"),Vk={kernelName:vt,backendName:"cpu",kernelFunc:Uk};function Gk(e,t,n){const r=(t-e)/(n-1),s=W(n,"float32");s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+r;return s}const Hk={kernelName:kt,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:i}=n,a=Gk(r,s,i);return t.makeTensorInfo([a.length],"float32",a)}},jk=_y((e=>Math.log(e))),qk=yy(It,jk),Kk={kernelName:It,backendName:"cpu",kernelFunc:qk},Xk=xy(Ct,(e=>Math.log1p(e))),Yk={kernelName:Ct,backendName:"cpu",kernelFunc:Xk},Zk=Ey(((e,t)=>e&&t)),Jk=qy(Dt,Zk,null,"bool"),Qk={kernelName:Dt,backendName:"cpu",kernelFunc:Jk},eI=xy(Et,(e=>e?0:1),"bool"),tI={kernelName:Et,backendName:"cpu",kernelFunc:eI},nI=Ey(((e,t)=>e||t)),rI=qy(Nt,nI,null,"bool"),sI={kernelName:Nt,backendName:"cpu",kernelFunc:rI},iI={kernelName:St,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:i,bias:a,alpha:o,beta:u}=r;my(s,"LRN");const l=s.shape[3],c=l-1,h=n.data.get(s.dataId).values,d=x(s.shape),p=new Float32Array(d);function f(e){const t=e%l;let n=e-t+Math.max(0,t-i);const r=e-t+Math.min(t+i,c);let s=0;for(;n<=r;n++){const e=h[n];s+=e*e}return s}for(let e=0;e<d;e++){const t=f(e),n=h[e]*Math.pow(a+o*t,-u);p[e]=n}return n.makeTensorInfo(s.shape,s.dtype,p)}},aI={kernelName:$t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,y:i,dy:a}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r;my(a,"LRNGrad");const h=x(a.shape),d=a.shape[3],p=n.data.get(a.dataId).values,f=n.data.get(s.dataId).values,m=n.data.get(i.dataId).values,g=new Float32Array(h),b=h;for(let e=0;e<b;e++){const t=e%d,n=e-t+Math.max(0,t-o),r=e-t+Math.min(d,t+o+1);let s=0;for(let e=n;e<r;e++)s+=Math.pow(f[e],2);s=l*s+u;for(let t=n;t<r;t++){let n=-2*l*c*f[t]*m[e]/s;e===t&&(n+=Math.pow(s,-c)),n*=p[e],g[t]+=n}}return n.makeTensorInfo(a.shape,s.dtype,g)}};function oI(e,t,n,r){const s=N(r,x(n));for(let n=0;n<s.length;++n){const r=n*t;let i=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>i)&&(i=t)}s[n]=i}return s}function uI(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:i,keepDims:a}=r,o=n;let u=s.shape;const l=u.length,c=D(i,u);let h=c;const d=yo(h,l);let p=o.data.get(s.dataId).values;if(null!=d){const e=new Array(l);for(let t=0;t<e.length;t++)e[t]=u[d[t]];p=hw(p,u,s.dtype,d,e),h=vo(h.length,l),u=e}my(s,"max"),xo("max",h,l);const[f,m]=go(u,h),g=oI(p,x(m),f,s.dtype),b=o.write(g,f,s.dtype);let y=f;return a&&(y=bo(f,c)),{dataId:b,shape:y,dtype:s.dtype}}const lI={kernelName:Tt,backendName:"cpu",kernelFunc:uI},cI=Ey(((e,t)=>Math.max(e,t))),hI=qy(At,cI),dI={kernelName:At,backendName:"cpu",kernelFunc:hI},pI={kernelName:Ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;my(s,"maxPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:u}=r;f(da(a,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const l=na(s.shape,i,a,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&y(l.inShape,l.outShape))c=ky({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=B(s.shape),r=$w(e,s.shape,s.dtype,t,l,"max");c=n.makeTensorInfo(l.outShape,s.dtype,r.values)}return c}},fI={kernelName:_t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:i,strides:a,pad:o,dimRoundingMode:u,dataFormat:l}=r;my(s,"maxPool3d");const c=ra(s.shape,i,a,1,o,u,l),h=Aw(n.data.get(s.dataId).values,s.shape,s.dtype,B(s.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},mI={kernelName:Ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,{filterSize:a,strides:o,pad:u,dimRoundingMode:l}=r;my([s,i],"maxPool3DGrad");const c=ra(i.shape,a,o,1,u,l),h=function(e,t){const n=oi(t.outShape,"int32"),r=t.strideDepth,s=t.strideHeight,i=t.strideWidth,a=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let b=0;b<t.outDepth;++b){const x=b*r-d;let y=x;for(;y<0;)y+=a;const w=Math.min(t.inDepth,l+x);for(let r=0;r<t.outHeight;++r){const l=r*s-p;let d=l;for(;d<0;)d+=o;const v=Math.min(t.inHeight,c+l);for(let s=0;s<t.outWidth;++s){const p=s*i-f;let k=p;for(;k<0;)k+=u;const I=Math.min(t.inWidth,h+p);let C=Number.NEGATIVE_INFINITY,D=-1;for(let t=y;t<w;t+=a){const n=t-x;for(let r=d;r<v;r+=o){const s=r-l;for(let i=k;i<I;i+=u){const a=i-p,o=e.get(m,t,r,i,g);o>=C&&(C=o,D=n*c*h+s*c+a)}}}n.set(D,m,b,r,s,g)}}}return n}(n.bufferSync(i),c),d=c.strideDepth,p=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,b=c.dilationWidth,x=c.effectiveFilterDepth,y=c.effectiveFilterHeight,w=c.effectiveFilterWidth,v=x-1-c.padInfo.front,k=w-1-c.padInfo.left,I=y-1-c.padInfo.top,C=oi(i.shape,"float32"),D=n.bufferSync(s);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let s=0;s<c.inWidth;++s){const i=n-v,a=r-I,o=s-k;let u=0;for(let n=0;n<x;n+=m){const r=(i+n)/d;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let s=0;s<y;s+=g){const i=(a+s)/p;if(!(i<0||i>=c.outHeight||Math.floor(i)!==i))for(let a=0;a<w;a+=b){const l=(o+a)/f;if(l<0||l>=c.outWidth||Math.floor(l)!==l)continue;const d=x*y*w-1-h.get(e,r,i,l,t)===n*y*w+s*w+a?1:0;0!==d&&(u+=D.get(e,r,i,l,t)*d)}}}C.set(u,e,n,r,s,t)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}},gI={kernelName:Rt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i,output:a}=t,o=i;my([i,a],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,d=na(o.shape,u,l,1,c,h),p=n.data.get(o.dataId).values,f=oi(d.outShape,o.dtype,Tw(p,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,b=d.dilationHeight,x=d.dilationWidth,y=d.effectiveFilterHeight,w=d.effectiveFilterWidth,v=w-1-d.padInfo.left,k=y-1-d.padInfo.top,I=oi(o.shape,"float32"),C=n.data.get(s.dataId).values,D=oi(s.shape,"float32",C);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){const s=n-k,i=r-v;let a=0;for(let n=0;n<y;n+=b){const r=(s+n)/m;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let s=0;s<w;s+=x){const o=(i+s)/g;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const u=y*w-1-f.get(e,r,o,t)===n*w+s?1:0;0!==u&&(a+=D.get(e,r,o,t)*u)}}I.set(a,e,n,r,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},bI={kernelName:Mt,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:i,pad:a,includeBatchInIndex:o}=t,u=n;my(r,"MaxPoolWithArgmax");const l=u.data.get(r.dataId).values,c=na(r.shape,s,i,[1,1],a),[h,d]=function(e,t,n,r,s){const i=$w(e,0,n,B(t),s,"max"),a=Tw(e,t,n,s,!0,r);return[i.values,a.values]}(l,r.shape,r.dtype,o,c),p=u.write(h,c.outShape,r.dtype),f=u.write(d,c.outShape,r.dtype);return[{dataId:p,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},xI={kernelName:Bt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r,o=D(i,s.shape),u=x(go(s.shape,o)[1]),l=[],c=n.makeTensorInfo([],"float32",new Float32Array([u]));l.push(c);const h=Hy({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});l.push(h);const d=ek({inputs:{a:h,b:c},backend:n});l.push(d);const p=Tv({inputs:{x:d},backend:n,attrs:{axis:i,keepDims:a}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},yI={kernelName:Lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r;my(s,"min");const o=D(i,s.shape);let u=o;const l=yo(u,s.shape.length);let c=s;null!=l&&(c=dw({inputs:{x:s},backend:n,attrs:{perm:l}}),u=vo(u.length,s.shape.length)),xo("min",u,c.shape.length);const[h,d]=go(c.shape,u),p=x(d),f=W(x(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];(Number.isNaN(r)||r<n)&&(n=r)}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(a){const e=Qy({inputs:{x:g},backend:n,attrs:{shape:bo(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},wI=Ey(((e,t)=>Math.min(e,t))),vI=qy(zt,wI),kI={kernelName:zt,backendName:"cpu",kernelFunc:vI},II={kernelName:Pt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:i,mode:a}=r;my(s,"mirrorPad");const o=i.map(((e,t)=>e[0]+s.shape[t]+e[1])),u=i.map((e=>e[0])),l=i.map(((e,t)=>e[0]+s.shape[t])),c="reflect"===a?0:1,h=n.data.get(s.dataId).values,d=s.shape.length,p=B(s.shape),f=x(o),m=o.length,g=B(o),b=N(s.dtype,f);for(let e=0;e<f;e++){let t=H(e,m,g);for(let e=0;e<m;e++)t[e]<u[e]?t[e]=2*u[e]-t[e]-c:t[e]>=l[e]&&(t[e]=2*(l[e]-1)-t[e]+c);t=t.map(((e,t)=>e-u[t]));const n=G(t,d,p);b[e]=h[n]}return{dataId:n.write(b,o,s.dtype),shape:o,dtype:s.dtype}}},CI=Ey(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),DI=qy(Wt,CI),EI={kernelName:Wt,backendName:"cpu",kernelFunc:DI};function NI(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:i}=r,a=s.shape.length;let o=i;if(-1===o&&(o=a-1),o!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${o}`);const u=D([o],s.shape),l=uI({inputs:{x:s},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),c=bo(l.shape,u),h=Qy({inputs:{x:l},backend:n,attrs:{shape:c}}),d=sk({inputs:{a:s,b:h},backend:n}),p=jv({inputs:{x:d},backend:n}),f=Tv({inputs:{x:p},backend:n,attrs:{axis:u,keepDims:!1}}),m=Qy({inputs:{x:f},backend:n,attrs:{shape:c}}),g=ek({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const SI={kernelName:Rn,backendName:"cpu",kernelFunc:NI},$I={kernelName:Ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:i,seed:a,normalized:o}=r;my(s,"multinomial");const u=o?s:NI({inputs:{logits:s},backend:n,attrs:{dim:-1}}),l=u.shape[0],c=u.shape[1],h=n.data.get(u.dataId).values,d=[l,i],p=W(x(d),"int32");for(let e=0;e<l;++e){const t=e*c,n=new Float32Array(c-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const r=Fo.alea(a.toString()),s=e*i;for(let e=0;e<i;++e){const t=r();p[s+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){p[s+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(d,"int32",p)}};function TI(e,t,n){const r=Ar(-1,n);return Ev([],t,r,e,n)}const AI={kernelName:Gt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;my(r,"neg");const s=n.data.get(r.dataId).values,[i,a]=TI(s,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,i)}},FI=Mu,RI={kernelName:jt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:u}=r;my(s,"NonMaxSuppression");const l=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values,{selectedIndices:h}=FI(l,c,a,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},_I=Bu,OI={kernelName:qt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r;my(s,"NonMaxSuppressionPadded");const c=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,{selectedIndices:d,validOutputs:p}=_I(c,h,a,o,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},MI=Lu,BI={kernelName:Kt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r;my(s,"NonMaxSuppressionWithScore");const c=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,d=a,p=o,f=u,m=l,{selectedIndices:g,selectedScores:b}=MI(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}},LI=Ey(((e,t)=>e!==t?1:0)),zI=qy(Ht,LI,null,"bool"),PI={kernelName:Ht,backendName:"cpu",kernelFunc:zI},WI={kernelName:Yt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:i,depth:a,onValue:o,offValue:u}=r;my(s,"oneHot");const l=x(s.shape),c=new Float32Array(l*a);c.fill(u);const h=n.data.get(s.dataId).values;for(let e=0;e<l;++e)h[e]>=0&&h[e]<a&&(c[e*a+h[e]]=o);return n.makeTensorInfo([...s.shape,a],i,c)}};function UI(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=Uy({inputs:{input:r},backend:n}),t=UI({inputs:{x:e},backend:n}),s=Jw({inputs:{input:r},backend:n}),i=UI({inputs:{x:s},backend:n}),a=zy({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),a}return ck({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const VI={kernelName:tr,backendName:"cpu",kernelFunc:UI},GI={kernelName:Xt,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const t=Uy({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),i=Jw({inputs:{input:s},backend:r}),a=UI({inputs:{x:i},backend:r}),o=zy({inputs:{real:n,imag:a},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(a),o}return ck({backend:r,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function HI(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return Kv({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const i=t[0].shape,a=t[0].dtype;t.forEach((e=>{m(i,e.shape,"All tensors passed to stack must have matching shapes"),f(a===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=ev({inputs:t.map((e=>{const t=Kv({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}const jI={kernelName:Zt,backendName:"cpu",kernelFunc:HI},qI={kernelName:Jt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:i,constantValue:a}=r;my(s,"pad");const o=i.map(((e,t)=>e[0]+s.shape[t]+e[1])),u=i.map((e=>e[0])),l=n.data.get(s.dataId).values,c=x(s.shape),h=s.shape.length,d=B(s.shape),p=x(o),f=o.length,m=B(o),g=N(s.dtype,p);0!==a&&g.fill(a);for(let e=0;e<c;e++)g[G(H(e,h,d).map(((e,t)=>e+u[t])),f,m)]=l[e];return{dataId:n.write(g,o,s.dtype),shape:o,dtype:s.dtype}}},KI=Ey(((e,t)=>Math.pow(e,t))),XI=qy(Qt,KI),YI={kernelName:Qt,backendName:"cpu",kernelFunc:XI};function ZI(e,t,n,r){const[s,i]=go(e,r),a=rs(t,"int32"),o=W(x(s),a),u=x(i);for(let e=0;e<o.length;++e){const t=e*u;let r=1;for(let e=0;e<u;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:s,outDtype:a}}const JI={kernelName:tn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r;my(s,"prod");const o=s.shape.length,u=D(i,s.shape),l=yo(u,o);let c=u,h=s;const d=[];null!=l&&(h=dw({inputs:{x:s},backend:n,attrs:{perm:l}}),d.push(h),c=vo(c.length,o));const p=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=ZI(h.shape,h.dtype,p,c);let b=m;return a&&(b=bo(m,u)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(b,g,f)}};function QI(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}function eC(e,t,n,r,s,i,a,o){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,r)=>{if(e<0||e>=n){const s=H(r,t.length,B(t)).join(",");throw new Error(`indices[${s}] = ${e} is not in [0, ${n})`)}}))}(i,a,t[0][0]-1),0===r.length)throw new Error("params.rank must be nonzero");const u=r[0],{outSplits:l,valueSlices:c,numValues:h}=function(e,t,n,r){const s=[];let i=0;const a=t.length-1+n.length,o=new Array(a).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const r=e[n],s=n===e.length-1?t:e[n+1].length;if(0===r.length)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>s)throw new Error("Ragged splits must not point past values");for(let e=1;e<r.length;++e)if(r[e-1]>r[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,r);let u=1;for(let e=0;e<t.length-1;++e){u*=t[e];const n=t[e+1];for(let t=1;t<u+1;++t)o[e].push(t*n)}for(let r=0;r<e.length;++r){let a=e[r],u=e[r]+1;for(let e=0;e<n.length;++e){const r=n[e],s=e+t.length-1;if(s>=0){const e=o[s],t=e[e.length-1]-r[a];for(let e=a;e<u;++e)o[s].push(r[e+1]+t)}a=r[a],u=r[u]}u!==a&&(s.push([a,u]),i+=u-a)}return{outSplits:o,valueSlices:s,numValues:i}}(i,a,e,u),d=function(e){const t=[];for(let n=0;n<e.length;++n){const r=S("int32",e[n].length);t.push(r),e[n].forEach(((e,t)=>r[t]=e))}return t}(l),p=function(e,t,n,r,s){const i=t.slice();i[0]=s;const a=S(n,x(i)),o=e.length;return function(e,t,n,r,s,i){const a=QI(t,2)[1],o=QI(i,2)[1];let u=0;for(const t of n)for(let n=t[0];n<t[1];++n){for(let t=0;t<r;++t)s[u*o+t]=e[n*a+t];++u}}(e,t,r,0===o?0:o/t[0],a,i),[a,i]}(n,r,s,c,h);return[d,p[0],p[1]]}const tC={kernelName:nn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:s,paramsDenseValues:i,indices:a}=t,{outputRaggedRank:o}=r,u=s.map((e=>n.data.get(e.dataId).values)),l=s.map((e=>e.shape)),c=n.data.get(i.dataId).values,h=n.data.get(a.dataId).values,[d,p,f]=eC(u,l,c,i.shape,i.dtype,h,a.shape),m=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,i.dtype,p);return m.concat([g])}};function nC(e,t,n,r,s,i,a){if(t.length>1)throw new Error("starts must be a scalar or vector");if(s.length>1)throw new Error("limits must be a scalar or vector");if(a.length>1)throw new Error("deltas must be a scalar or vector");const o=0===t.length,u=0===s.length,l=0===a.length,c=[];o||c.push(t[0]),u||c.push(s[0]),l||c.push(a[0]);for(let e=1;e<c.length;++e)if(c[e]!==c[e-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===c.length?1:c[0],d=S("int32",h+1);d[0]=0;for(let t=0;t<h;++t){const n=o?e[0]:e[t],s=u?r[0]:r[t],a=l?i[0]:i[t];if(0===a)throw new Error("Requires delta != 0");let c;if(a>0&&s<n||a<0&&s>n)c=0;else if(c=Math.ceil(Math.abs((s-n)/a)),c>2147483647)throw new Error("Requires ((limit - start) / delta) <= 2147483647");d[t+1]=d[t]+c}const p=S(n,d[h]);let f=0;for(let t=0;t<h;++t){const n=d[t+1]-d[t];let r=o?e[0]:e[t];const s=l?i[0]:i[t];for(let e=0;e<n;++e)p[f++]=r,r+=s}return[d,p]}const rC={kernelName:rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:s,deltas:i}=t,a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values,[l,c]=nC(a,r.shape,r.dtype,o,s.shape,u,i.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([c.length],r.dtype,c)]}};var sC=Dl;class iC{constructor(e,t,n,r,s,i,a,o,u,l){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=r,this.valuesDType=s,this.defaultValue=i,this.defaultValueShape=a,this.rowPartitionValues=o,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=Nl(l),this.raggedRank=Sl(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===sC.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===sC.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case sC.VALUE_ROWIDS:return iC.getMaxWidthValueRowID(t);case sC.ROW_SPLITS:return iC.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${sC[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let r=0;r<t-1;++r){const t=e[r+1]-e[r];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,r=e[0],s=0;for(let i=1;i<t;++i){const t=e[i];t!==r&&(r=t,s=Math.max(i-n,s),n=i)}return Math.max(t-n,s)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return oC(e,n)}calculateOutputSize(e){const t=this.valuesShape;$l(this.defaultValueShape,t);const n=this.tensorShapeFromTensor(this.shape,this.shapeShape),r=El(this.raggedRank,n,t);r[0]<0&&(r[0]=e);for(let e=1;e<=this.raggedRank;++e)r[e]<0&&(r[e]=this.getMaxWidth(e));return r}calculateFirstParentOutputIndex(e,t,n){const r=Math.min(e,n),s=[];let i=0;for(let e=0;e<r;++e,i+=t)s.push(i);for(let t=r;t<e;++t)s.push(-1);return f(s.length===e,(()=>"Final length of result must be equal to firstDimension.")),s}calculateOutputIndexRowSplit(e,t,n,r){const s=e.length,i=[];for(let a=0;a<s-1;++a){const s=e[a+1]-e[a];let o=Math.min(r,s),u=t[a];-1===u&&(o=0);for(let e=0;e<o;++e)i.push(u),u+=n;for(let e=0;e<s-o;++e)i.push(-1)}if(s>0&&i.length!==e[s-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(e,t,n,r){const s=e.length,i=[];if(0===s)return[];let a=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let u=t[o];i.push(u);for(let l=1;l<s;++l){const s=e[l];if(s===o)u>=0&&(++a,a<r?u+=n:u=-1);else{if(a=0,o=s,s>=t.length)throw new Error(`Got nextValueRowId=${s} which is not less than ${t.length}`);u=t[s]}i.push(u)}if(i.length!==e.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(e,t,n,r){const s=this.getRowPartitionTensor(e),i=this.getRowPartitionTypeByDimension(e);switch(i){case sC.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,t,n,r);case sC.ROW_SPLITS:if(s.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${s.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(s,t,n,r);default:throw new Error(`Unsupported partition type: ${sC[i]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case sC.FIRST_DIM_SIZE:return e[0];case sC.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case sC.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${sC[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let e=n.length-2;e>=0;--e)n[e]=n[e+1]*t[e+1];const r=oC(t,!1),s=S(this.valuesDType,x(r));if(n[0]*t[0]>0){let i=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e)i=this.calculateOutputIndex(e-1,i,n[e],t[e]);this.setOutput(this.raggedRank,i,s,r)}return[r,s]}setOutput(e,t,n,r){if(0===n.length)return;const s=this.values,i=n;let a=r.slice();a=a.slice(e+1);const o=x(a),u=t.length;let l=this.defaultValue;if(l.length!==o&&1!==l.length){const e=this.defaultValueShape;Vi((()=>{const t=ma(l,e),n=ka(t,a);l=n.dataSync()}))}let c=0,h=0,d=0;for(let e=0;e<=u;++e){let r=e<u?t[e]:-1;if(r!==d){if(h<d){const e=s.subarray(c*o);aC(i.subarray(h*o),e,(d-h)*o)}if(e>=u){const e=n.length;r=Math.floor(e/o)}if(r>d)if(1===this.defaultValue.length)i.subarray(d*o,r*o).fill(this.defaultValue[0]),d=r;else for(;r>d;)aC(i.slice(d*o),l,o),++d;r<0?(c=e+1,h=d):(c=e,h=d,d=h+1)}else++d}}}function aC(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function oC(e,t){const n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function uC(e,t,n,r,s,i,a,o,u,l){return new iC(e,t,n,r,s,i,a,o,u,l).compute()}const lC={kernelName:sn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:s,values:i,defaultValue:a,rowPartitionTensors:o}=t,{rowPartitionTypes:u}=r,l=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values,h=n.data.get(a.dataId).values,d=o.map((e=>n.data.get(e.dataId).values)),p=o.map((e=>e.shape)),[f,m]=uC(l,s.shape,c,i.shape,i.dtype,h,a.shape,d,p,u);return n.makeTensorInfo(f,i.dtype,m)}};function cC(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return W(0,r);const s=W(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}const hC={kernelName:an,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,dtype:i,step:a}=n,o=cC(r,s,a,i);return t.makeTensorInfo([o.length],i,o)}},dC=xy(un,(e=>1/e)),pC={kernelName:un,backendName:"cpu",kernelFunc:dC},fC={kernelName:pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:a,size:o}=r;my(s,"resizeBilinear");const u=B(s.shape),[l,c]=o,[h,d,p,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(x([h,l,c,f])),b=[i&&l>1?d-1:d,i&&c>1?p-1:p],y=[i&&l>1?l-1:l,i&&c>1?c-1:c];let w=0;const v=b[0]/y[0],k=b[1]/y[1];for(let e=0;e<h;e++)for(let t=0;t<l;t++){let n;n=a?v*(t+.5)-.5:v*t;const r=Math.max(0,Math.floor(n)),s=n-r,i=Math.min(d-1,Math.ceil(n)),o=e*u[0]+r*u[1],l=e*u[0]+i*u[1];for(let e=0;e<c;e++){let t;t=a?k*(e+.5)-.5:k*e;const n=Math.max(0,Math.floor(t)),r=t-n,i=Math.min(p-1,Math.ceil(t)),c=o+n*u[2],h=l+n*u[2],d=o+i*u[2],b=l+i*u[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[h+e],i=t+(m[d+e]-t)*r,a=i+(n+(m[b+e]-n)*r-i)*s;g[w++]=a}}}return n.makeTensorInfo([h,l,c,f],"float32",g)}},mC={kernelName:fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:i}=t,{alignCorners:a}=r;my([i,s],"resizeBilinearGrad");const o=B(s.shape),[u,l,c,h]=s.shape,[,d,p]=i.shape,f=new Float32Array(u*l*c*h),m=[a&&d>1?l-1:l,a&&p>1?c-1:c],g=[a&&d>1?d-1:d,a&&p>1?p-1:p],b=m[0]/g[0],x=m[1]/g[1],y=n.data.get(i.dataId).values;let w=0;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<d;e++){const n=e*b,r=Math.floor(n),s=Math.min(Math.ceil(n),l-1),i=t+r*o[1],a=t+s*o[1],u=n-r,d=1-u;for(let e=0;e<p;e++){const t=e*x,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),s=t-n,l=1-s,p=i+n*o[2],m=i+r*o[2],g=a+n*o[2],b=a+r*o[2],v=d*l,k=d*s,I=u*l,C=u*s;for(let e=0;e<h;e++){const t=y[w++];f[p+e]+=t*v,f[m+e]+=t*k,f[g+e]+=t*I,f[b+e]+=t*C}}}}return n.makeTensorInfo([u,c,l,h],"float32",f)}},gC={kernelName:hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:a,size:o}=r;my(s,"resizeNearestNeighbor");const u=B(s.shape),[l,c]=o,[h,d,p,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(h*l*c*f),b=[i&&l>1?d-1:d,i&&c>1?p-1:p],x=[i&&l>1?l-1:l,i&&c>1?c-1:c],y=b[0]/x[0],w=b[1]/x[1];let v=0;for(let e=0;e<h;e++){const t=e*u[0];for(let e=0;e<l;e++){const n=a?y*(e+.5):y*e;let r=Math.min(d-1,i?Math.round(n):Math.floor(n));a&&(r=Math.max(0,r));const s=t+r*u[1];for(let e=0;e<c;e++){const t=a?w*(e+.5):w*e;let n=Math.min(p-1,i?Math.round(t):Math.floor(t));a&&(n=Math.max(0,n));const r=s+n*u[2];for(let e=0;e<f;e++){const t=m[r+e];g[v++]=t}}}}return n.makeTensorInfo([h,l,c,f],s.dtype,g)}},bC={kernelName:dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:i}=t,{alignCorners:a}=r;my([i,s],"resizeNearestNeighborGrad");const o=B(s.shape),u=B(i.shape),[l,c,h,d]=s.shape,[,p,f]=i.shape,m=new Float32Array(l*c*h*d),g=n.data.get(i.dataId).values,b=[a&&p>1?c-1:c,a&&f>1?h-1:h],x=[a&&p>1?p-1:p,a&&f>1?f-1:f],y=b[0]/x[0],w=b[1]/x[1],v=1/y,k=1/w,I=2*Math.ceil(v)+2,C=2*Math.ceil(k)+2;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],r=Math.floor(e*v),s=Math.floor(r-I/2);for(let r=0;r<h;r++){const i=n+r*o[2],l=Math.floor(r*k),b=Math.floor(l-C/2);for(let n=0;n<d;n++){let o=0;for(let i=0;i<I;i++){const l=i+s;if(l<0||l>=p)continue;const d=t+l*u[1],m=l*y;if(e===Math.min(c-1,a?Math.round(m):Math.floor(m)))for(let e=0;e<C;e++){const t=e+b;if(t<0||t>=f)continue;const s=d+t*u[2],i=t*w;r===Math.min(h-1,a?Math.round(i):Math.floor(i))&&(o+=g[s+n])}}m[i+n]=o}}}}return n.makeTensorInfo(s.shape,s.dtype,m)}},xC={kernelName:gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:i}=r;my(s,"reverse");const a=s.shape.length,o=D(i,s.shape);if(0===a)return ky({inputs:{x:s},backend:n});const u=new Gr(s.shape,s.dtype),l=n.bufferSync(s);for(let e=0;e<u.size;e++){const t=u.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=s.shape[e]-1-n[e])),u.set(l.get(...n),...t)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},yC={kernelName:rr,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:i,center:a}=t,o=n,u=N(r.dtype,x(r.shape)),[l,c,h,d]=r.shape,[p,f]=Fl(a,c,h),m=Math.sin(s),g=Math.cos(s),b=o.data.get(r.dataId).values;for(let e=0;e<l;e++){const t=e*h*c*d;for(let e=0;e<c;e++){const n=e*(h*d);for(let r=0;r<h;r++){const s=r*d;for(let a=0;a<d;a++){const o=[l,e,r,a],x=o[2],y=o[1];let w=(x-p)*g-(y-f)*m,v=(x-p)*m+(y-f)*g;w=Math.round(w+p),v=Math.round(v+f);let k=i;"number"!=typeof i&&(k=3===a?255:i[a]),w>=0&&w<h&&v>=0&&v<c&&(k=b[t+v*(h*d)+w*d+a]),u[t+n+s+a]=k}}}}return{dataId:o.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},wC=xy(bn,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),vC={kernelName:bn,backendName:"cpu",kernelFunc:wC},kC=_y((e=>1/Math.sqrt(e))),IC=yy(xn,kC),CC={kernelName:xn,backendName:"cpu",kernelFunc:IC};function DC(e,t,n,r,s,i,a,o,u,l){const c=[r/s,s],h=e.values,d=t.values;if(0===r)return oi(n,t.dtype);const p=oi(c,t.dtype);"string"==typeof u||"number"==typeof u?p.values.fill(u):"boolean"==typeof u&&p.values.fill(+u);for(let e=0;e<i;e++){const i=[];let u=0;for(let t=0;t<a;t++){const n=h[e*a+t];i.push(n),u+=n*o[t]}if(u<0||u>=r/s)throw new Error(`Invalid indices: ${i} does not index into ${n}`);for(let n=0;n<s;n++)l?p.values[u*s+n]+=d[e*s+n]:p.values[u*s+n]=0===t.rank?d[0]:d[e*s+n]}return p}const EC={kernelName:yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:i}=t,{shape:a}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=Wl(0,s,a),d=DC(n.bufferSync(s),n.bufferSync(i),a,h,l,u,o,c,0,!0);return n.makeTensorInfo(a,d.dtype,d.values)}};function NC(e,t){let n=0,r=e.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),e[s]<t?n=s+1:r=s;return r}function SC(e,t){let n=0,r=e.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),e[s]<=t?n=s+1:r=s;return r}const $C={kernelName:wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:i}=t,{side:a}=r,o=function(e,t,n,r,s,i){const a=S("int32",n*s);for(let o=0;o<n;++o){const n=e.slice(o*r,(o+1)*r),u=o*s;for(let e=0;e<s;++e)a[u+e]="left"===i?NC(n,t[e+u]):SC(n,t[e+u])}return a}(n.data.get(s.dataId).values,n.data.get(i.dataId).values,s.shape[0],s.shape[1],i.shape[1],a);return n.makeTensorInfo(i.shape,"int32",o)}},TC={kernelName:vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:i}=t;my([r,s,i],"select");const a=r.shape.length,o=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values,c=rs(s.dtype,i.dtype),h=W(x(s.shape),c);let d=0;const p=0===a||a>1||1===s.shape.length?1:x(s.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<p;t++)1===o[e]?h[d++]=u[e]:h[d++]=l[e];return n.makeTensorInfo(s.shape,c,h)}},AC=Ul,FC=Vl,RC=xy(kn,(e=>e>=0?FC*e:AC*(Math.exp(e)-1))),_C={kernelName:kn,backendName:"cpu",kernelFunc:RC},OC=xy(En,(e=>e<0?-1:e>0?1:0)),MC={kernelName:En,backendName:"cpu",kernelFunc:OC},BC=xy(Cn,(e=>Math.sin(e))),LC={kernelName:Cn,backendName:"cpu",kernelFunc:BC},zC=xy(Dn,(e=>Math.sinh(e))),PC={kernelName:Dn,backendName:"cpu",kernelFunc:zC},WC=Math.log(1.1920928955078125e-7)+2,UC=xy(Sn,(e=>{const t=e>-WC,n=e<WC,r=Math.exp(e);let s;return s=n?r:t?e:Math.log(1+r),s})),VC={kernelName:Sn,backendName:"cpu",kernelFunc:UC},GC={kernelName:An,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:i,paddings:a}=r;my([s],"spaceToBatchND");const o=x(i),u=[[0,0]];u.push(...a);for(let e=1+i.length;e<s.shape.length;++e)u.push([0,0]);const l=qI.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),c=Rl(l.shape,i,o,!1),h=_l(c.length,i.length,!1),d=Ol(l.shape,i,o,!1),p=Qy({inputs:{x:l},backend:n,attrs:{shape:c}}),f=dw({inputs:{x:p},backend:n,attrs:{perm:h}}),m=Qy({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}};function HC(e,t,n,r,s,i,a){const o=t[0],u=i[0],l=new Array(u),c=new Array(o),h=t[1];if(0===u){if(0!==o)throw new Error(dc(o));return[S(n,0),[0,h],S(s,0),l,c]}let d=!0,p=0;const f=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*h];if(n<0)throw new Error(pc(t,n));if(n>=u)throw new Error(fc(t,n,u));++f[n],d=d&&n>=p,p=n}let m=!0;for(let e=0;e<u;++e){const t=0===f[e];l[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&d){const t=e,n=r;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,l,c]}{const t=f[u-1],i=S(n,t*h),d=S(s,t),p=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*h],s=p[n],a=(0===n?0:f[n-1])+s;p[n]++;for(let n=0;n<h;++n)i[a*h+n]=e[t*h+n];d[a]=r[t],c[t]=a}for(let e=0;e<u;++e)if(0===p[e]){const t=0===e?0:f[e-1];i[t*h+0]=e;for(let e=1;e<h;++e)i[t*h+e]=0;d[t]=a}return[i,[t,h],d,l,c]}}const jC={kernelName:_n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:i,defaultValue:a}=t;if(1!==i.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${i.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n        ${s.shape}`);if(0!==a.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${a.shape}`);const o=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values,c=n.data.get(a.dataId).values[0],[h,d,p,f,m]=HC(o,r.shape,r.dtype,u,s.dtype,l,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};function qC(e,t,n,r,s){const i=x(r),a=t[0],o=s.length,u=[];let l=1,c=-1;for(let e=0;e<o;++e){const t=s[e];if(-1===t){if(-1!==c)throw new Error(mc(c,e));c=e,u.push(1)}else{if(t<0)throw new Error(gc(e,t));l*=t,u.push(t)}}if(-1!==c){if(l<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(i/l);if(l*e!==i)throw new Error(xc(r,u));u[c]=e}if(x(u)!==i)throw new Error(yc(r,u));const h=r.length,d=[];if(h>0){d[h-1]=1;for(let e=h-2;e>=0;--e)d[e]=d[e+1]*r[e+1]}const p=[];if(o>0){p[o-1]=1;for(let e=o-2;e>=0;--e)p[e]=p[e+1]*u[e+1]}const f=S(n,a*o);for(let t=0;t<a;++t){let n=0;for(let r=0;r<h;++r)n+=e[t*h+r]*d[r];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(n/p[e]),n%=p[e]}return[f,[a,o],u]}const KC={kernelName:On,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:i}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${s.shape}`);if(1!==i.shape.length)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const a=Array.from(n.data.get(s.dataId).values),o=n.data.get(r.dataId).values,u=Array.from(n.data.get(i.dataId).values),[l,c,h]=qC(o,r.shape,r.dtype,a,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],i.dtype,new Int32Array(h))]}};function XC(e,t,n,r,s,i=!1,a=0){const o=r.length,u=[t[0],e.length/t[0]],l=u[1],c=o>0?s[o-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=c;const d=S(n,h.reduce(((e,t)=>e*t),1));if(0===o)return c>0&&d.fill(a),[d,h];if(c<=0)throw new Error("segment ids must be >= 0");let p=0,f=1,m=0,g=s[p];for(;;){let t=0;if(f<o){if(t=s[f],g===t){++f;continue}if(g>=t)throw new Error("segment ids are not increasing")}if(g<0||g>=c)throw new Error(kc(g,c));g>m&&d.fill(a,m*l,g*l);for(let t=p;t<f;++t){const n=r[t];if(n<0||n>=u[0])throw new Error(Ic(t,r[t],u[0]));for(let t=0;t<l;t++)d[g*l+t]+=e[n*l+t]}if(i)for(let e=0;e<l;e++)d[g*l+e]/=f-p;if(p=f,++f,m=g+1,g=t,f>o)break}return m<c&&d.fill(a,m*l,c*l),[d,h]}const YC={kernelName:Mn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:i}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${s.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${i.shape}`);if(s.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values,[l,c]=XC(a,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}},ZC={kernelName:Bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:i}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${s.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${i.shape}`);if(s.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values,[l,c]=XC(a,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}},JC={kernelName:Ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:i,defaultValue:a}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:d}=Wl(0,s,o),p=!1,f=n.bufferSync(s);let m;switch(i.dtype){case"bool":m=DC(f,n.bufferSync(i),o,d,c,l,u,h,Boolean(n.data.get(a.dataId).values[0]),p);break;case"float32":case"int32":m=DC(f,n.bufferSync(i),o,d,c,l,u,h,n.data.get(a.dataId).values[0],p);break;case"string":m=DC(f,n.bufferSync(i),o,d,c,l,u,h,Or(n.data.get(a.dataId).values[0]),p);break;default:throw new Error(`Unsupported type ${i.dtype}`)}return n.makeTensorInfo(o,m.dtype,m.values)}},QC={kernelName:Fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:i,axis:a}=r,o=D(a,s.shape)[0],u=hc(s,i,o),l=new Array(s.shape.length).fill(0),c=s.shape.slice();return u.map((e=>{const t=[...c];t[o]=e;const r=Lw({inputs:{x:s},backend:n,attrs:{begin:l,size:t}});return l[o]+=e,r}))}},eD=_y((e=>Math.sqrt(e))),tD=xy($n,(e=>Math.sqrt(e))),nD={kernelName:$n,backendName:"cpu",kernelFunc:tD},rD={kernelName:Pn,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;my(n,"square");const s=r.data.get(n.dataId).values,i=new Float32Array(s.length);for(let e=0;e<s.length;++e){const t=s[e];i[e]=t*t}return{dataId:r.write(i,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},sD=Ey(((e,t)=>{const n=e-t;return n*n})),iD=qy(zn,sD),aD={kernelName:zn,backendName:"cpu",kernelFunc:iD},oD=xy(nr,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),uD={kernelName:nr,backendName:"cpu",kernelFunc:oD};function lD(e,t,n,r){const s=oi(e,t.dtype);for(let e=0;e<s.size;e++){const i=s.indexToLoc(e),a=new Array(i.length);for(let e=0;e<a.length;e++)a[e]=i[e]*n[e]+r[e];s.set(t.get(...a),...i)}return s}const cD={kernelName:Wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:i,end:a,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r;my(s,"stridedSlice");const{finalShapeSparse:p,finalShape:m,isIdentity:g,sliceDim0:b,isSimpleSlice:x,begin:y,end:w,strides:v}=Mi(s.shape,i,a,o,u,l,c,h,d);let k;if(g)k=Qy({inputs:{x:s},backend:n,attrs:{shape:m}});else if(b||x){f(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=Ii(y,w,v),t=Lw({inputs:{x:s},backend:n,attrs:{begin:y,size:e}});k=Qy({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else{const e=lD(p,n.bufferSync(s),v,y);k=n.makeTensorInfo(m,e.dtype,e.values)}return k}};class hD{constructor(e,t,n,r,s,i){this.separator=_r(e),this.nGramWidths=t,this.leftPad=_r(n),this.rightPad=_r(r),this.padWidth=s,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,s,i){for(let a=0;a<s;++a){const o=this.getPadWidth(i),u=Math.max(0,o-a),l=Math.max(0,o-(s-(a+1))),c=i-(u+l),h=t+(u>0?0:a-o);let d=0;d+=u*this.leftPad.length;for(let t=0;t<c;++t)d+=e[h+t].length;d+=l*this.rightPad.length,d+=(u+l+c-1)*this.separator.length,n[r+a]=new Uint8Array(d);const p=n[r+a];let f=0;const m=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[h+t]),m(this.separator);if(c>0){m(e[h+c-1]);for(let e=0;e<l;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<l-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let s=1;s<r;++s){let r=t[s]>=e;if(r=r&&t[s]<=n,!r)throw new Error(`Invalid split value ${t[s]}, must be in [${e}, ${n}]`);e=t[s]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const s=r-1,i=S("int32",r);if(0===n||0===r){const e=new Array(n);for(let e=0;e<=s;++e)i[e]=0;return[e,i]}i[0]=0;for(let e=1;e<=s;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),i[e]=i[e-1]+r}const a=new Array(i[s]);for(let n=0;n<s;++n){const r=t[n];let s=i[n];if(this.nGramWidths.forEach((i=>{const o=t[n+1]-t[n],u=this.getNumNGrams(o,i);this.createNGrams(e,r,a,s,u,i),s+=u})),this.preserveShort&&s===i[n]){const i=t[n+1]-t[n];if(0===i)continue;const o=i+2*this.padWidth,u=1;this.createNGrams(e,r,a,s,u,o)}}return[a,i]}}function dD(e,t,n,r,s,i,a,o){return new hD(n,r,s,i,a,o).compute(e,t)}const pD={kernelName:Un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:i,leftPad:a,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=t,d=n.data.get(c.dataId).values,p=n.data.get(h.dataId).values,[f,m]=dD(d,p,s,i,a,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};function fD(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const s=t[0];let i=e.indexOf(s);for(;-1!==i;){const t=e.subarray(0,i);n&&0===t.length||r.push(t),i=(e=e.subarray(i+1)).indexOf(s)}return void(n&&0===e.length||r.push(e))}let s=0;for(let i=0;i<e.length+1;i++)if(i===e.length||-1!==t.indexOf(e[i])){const t=e.subarray(s,i);n&&0===t.length||r.push(t),s=i+1}}function mD(e,t,n){const r=e.length,s=[];let i=0,a=0;const o=new Array(r);for(let u=0;u<r;++u){const r=s.length;fD(e[u],t,n,s);const l=s.length-r;o[u]=l,i+=l,a=Math.max(a,l)}const u=S("int32",2*i),l=new Array(i),c=[r,a];let h=0;for(let e=0;e<r;++e)for(let t=0;t<o[e];++t)u[2*h]=e,u[2*h+1]=t,l[h]=s[h],++h;return[u,l,c]}const gD={kernelName:Vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:i,delimiter:a}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(1!==i.shape.length)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(0!==a.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const o=n.data.get(i.dataId).values,u=n.data.get(a.dataId).values[0],[l,c,h]=mD(o,u,s),d=c.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};function bD(e,t){const n=S("int32",e.length);for(let r=0;r<e.length;++r)n[r]=Tr(e[r]).modulo(t).getLowBitsUnsigned();return n}const xD={kernelName:Gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:i}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const a=bD(n.data.get(i.dataId).values,s);return n.makeTensorInfo(i.shape,"int32",a)}},yD=xy(jn,(e=>Math.tan(e))),wD={kernelName:jn,backendName:"cpu",kernelFunc:yD},vD=xy(qn,(e=>Math.tanh(e)));function kD(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=oi(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),s=new Array(e.rank);for(let t=0;t<s.length;t++)s[t]=n[t]%e.shape[t];const i=e.locToIndex(s);r.values[t]=e.values[i]}return r}const ID=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function CD(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){const s=r-n+1,i=t-n+1,a=Math.log(s),o=.5*Math.exp(2*a/3),u=.5*Math.sqrt(a*o*(s-o)/s)*Math.sign(i-s/2);CD(e,t,Math.max(n,Math.floor(t-i*o/s+u)),Math.min(r,Math.floor(t+(s-i)*o/s+u)))}const s=e[t];let i=n,a=r;for(p(e,n,t),ID(e[r],s)>0&&p(e,n,r);i<a;){for(p(e,i,a),i++,a--;ID(e[i],s)<0;)i+=1;for(;ID(e[a],s)>0;)a-=1}0===ID(e[n],s)?p(e,n,a):(a+=1,p(e,a,r)),a<=t&&(n=a+1),t<=a&&(r=a-1)}}function DD(e,t,n,r,s){const i=t[t.length-1],[a,o]=[e.length/i,i],u=N(n,a*r),l=N("int32",a*r);for(let t=0;t<a;t++){const n=t*o,i=e.subarray(n,n+o);let a=new Array(i.length);i.forEach(((e,t)=>a[t]={value:e,index:t})),r<a.length&&(CD(a,r),a=a.slice(0,r)),s&&a.sort(ID);const c=t*r,h=u.subarray(c,c+r),d=l.subarray(c,c+r);for(let e=0;e<r;e++)h[e]=a[e].value,d[e]=a[e].index}const c=t.slice();return c[c.length-1]=r,[oi(c,n,u),oi(c,"int32",l)]}const ED={kernelName:Yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:s,transforms:i}=t,{interpolation:a,fillMode:o,fillValue:u,outputShape:l}=n,[c,h,d,p]=s.shape,[f,m]=null!=l?l:[h,d],g=[c,f,m,p],b=B(s.shape),y=b[0],w=b[1],v=b[2],k=B(g),I=k[0],C=k[1],D=k[2],E=N(s.dtype,x(g));E.fill(u);const S=r.data.get(s.dataId).values,$=r.data.get(i.dataId).values;for(let e=0;e<c;++e){const t=1===i.shape[0]?$:$.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let s=0;s<p;++s){let i;const l=t[6]*r+t[7]*n+1;if(0===l)continue;const c=(t[0]*r+t[1]*n+t[2])/l,p=(t[3]*r+t[4]*n+t[5])/l,f=ND(c,d,o),m=ND(p,h,o);switch(a){case"nearest":i=$D(S,h,d,y,w,v,e,m,f,s,u);break;case"bilinear":i=TD(S,h,d,y,w,v,e,m,f,s,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}E[e*I+n*C+r*D+s]=i}return r.makeTensorInfo(g,s.dtype,E)}return{dataId:r.write(E,g,s.dtype),shape:s.shape,dtype:s.dtype}}};function ND(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return h(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return h(0,n,t-1)}(e,t);case"nearest":return function(e,t){return h(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function SD(e,t,n,r,s,i,a,o,u,l,c){return 0<=o&&o<t&&0<=u&&u<n?e[a*r+o*s+u*i+l]:c}function $D(e,t,n,r,s,i,a,o,u,l,c){return SD(e,t,n,r,s,i,a,Math.round(o),Math.round(u),l,c)}function TD(e,t,n,r,s,i,a,o,u,l,c){const h=Math.floor(o),d=Math.floor(u),p=h+1,f=d+1;return(p-o)*((f-u)*SD(e,t,n,r,s,i,a,h,d,l,c)+(u-d)*SD(e,t,n,r,s,i,a,h,f,l,c))+(o-h)*((f-u)*SD(e,t,n,r,s,i,a,p,d,l,c)+(u-d)*SD(e,t,n,r,s,i,a,p,f,l,c))}function AD(e,t,n,r){const s=D(t,n)[0],i=[1,n[0],1];for(let e=0;e<s;e++)i[0]*=n[e];i[1]=n[s];for(let e=s+1;e<n.length;e++)i[2]*=n[e];const a={},o=new Int32Array(n[s]),u=new Gr(i,r,e),l=[],c=1===i[0]&&1===i[2];for(let t=0;t<n[s];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)e.push(u.get(n,t,r));n=e.join(",")}if(void 0!==a[n])o[t]=a[n];else{const e=Object.keys(a).length;a[n]=e,o[t]=e,l.push(t)}}const h=i.slice();h[1]=Object.keys(a).length;const d=new Gr(h,r);l.forEach(((e,t)=>{for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)d.set(u.get(n,e,r),n,t,r)}));const p=n.slice();return p[s]=h[1],{outputValues:d.values,outputShape:p,indices:o}}const FD={kernelName:er,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:i}=t,{numSegments:a}=r;my(s,"unsortedSegmentSum");const o=[],u=[],l=s.shape.length-i.shape.length;let c=i;for(let e=0;e<l;++e){const t=Kv({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,u.push(t)}for(let e=0;e<a;++e){const t=Ar(e,"int32"),r=n.makeTensorInfo([],"int32",t),i=Ov({inputs:{a:r,b:c},backend:n}),a=Hy({inputs:{x:i},backend:n,attrs:{dtype:"float32"}}),l=Sv({inputs:{a,b:s},backend:n}),h=Tv({inputs:{x:l},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),u.push(r),u.push(i),u.push(a),u.push(l),u.push(h)}const h=HI({inputs:o,backend:n,attrs:{axis:0}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},RD=[rw,iw,ow,lw,Jy,cw,fw,mw,gw,bw,yw,vw,Iw,Ew,Sw,Fw,Rw,_w,Ow,nw,Mw,Pw,Vw,Gw,jy,qw,Xw,Py,Yw,tv,rv,sv,iv,av,ov,uv,cv,dv,pv,fv,mv,gv,bv,yv,wv,vv,kv,Iv,Cv,Dv,Fv,vy,Rv,Mv,Gv,qv,Xv,Jv,lk,hk,dk,mk,xk,yk,wk,kk,Ck,Nk,Tk,Iy,Ak,Qw,Rk,Ok,Bk,Dy,Pk,Vk,Hk,Kk,Yk,Qk,tI,sI,iI,aI,lI,dI,pI,fI,mI,gI,bI,xI,yI,kI,II,EI,$I,$v,AI,RI,OI,BI,PI,WI,GI,jI,qI,YI,$y,JI,tC,rC,lC,hC,Vy,tk,pC,Ay,Ry,ew,fC,mC,gC,bC,xC,yC,vC,CC,EC,$C,TC,_C,By,MC,LC,PC,zw,SI,VC,GC,jC,KC,YC,ZC,JC,QC,nD,rD,aD,uD,cD,pD,gD,xD,ik,Av,wD,{kernelName:qn,backendName:"cpu",kernelFunc:vD},{kernelName:Kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:i}=r;my(s,"tile");const a=kD(n.bufferSync(s),i);return n.makeTensorInfo(a.shape,a.dtype,a.values)}},{kernelName:Xn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:i,sorted:a}=r;my(s,"topk");const o=n.data.get(s.dataId).values,[u,l]=DD(o,s.shape,s.dtype,i,a);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}},ED,pw,{kernelName:Jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:i}=t;my(i,"unique");const a=r.data.get(i.dataId).values,{outputValues:o,outputShape:u,indices:l}=AD(a,s,i.shape,i.dtype);return[r.makeTensorInfo(u,i.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}},{kernelName:Qn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:i}=r;i<0&&(i+=s.shape.length);const a=s.shape.length,o=s.shape[i],u=new Array(a-1);let l=0;for(let e=0;e<a;e++)e!==i&&(u[l++]=s.shape[e]);const c=new Array(a).fill(0),h=s.shape.slice();h[i]=1;const d=new Array(o);for(let e=0;e<d.length;e++){c[i]=e;const t=Lw({inputs:{x:s},backend:n,attrs:{begin:c,size:h}});d[e]=Qy({inputs:{x:t},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(t)}return d}},FD,VI];for(const e of RD)fr(e);const _D={},OD={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function MD(e,t){if(!(e in _D)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete _D[e]}),!1),X().getBool("SOFTWARE_WEBGL_ENABLED")&&(OD.failIfMajorPerformanceCaveat=!1),1===e?n.getContext("webgl",OD)||n.getContext("experimental-webgl",OD):n.getContext("webgl2",OD)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;_D[e]=n}const n=_D[e];return null==n||n.isContextLost()?(delete _D[e],MD(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),_D[e])}var BD,LD,zD;function PD(e,t){return[t,e]}function WD(e){const t=x(e);return v(Math.ceil(t/4))}function UD(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function VD(e,t){const n=e;let r,s,i,a,o,u,l,c,h,d;return 2===X().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,i=n.RGBA16F,a=n.RGBA32F,o=n.RED,l=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT,u=n.RGBA8):(r=e.RGBA,s=e.RGBA,i=e.RGBA,a=n.RGBA,o=e.RGBA,l=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,u=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:a,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function GD(e,t){const n=t();return X().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function HD(e){return!!(X().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function jD(e,t){return tE(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(BD||(BD={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(LD||(LD={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(zD||(zD={}));const qD=/ERROR: [0-9]+:([0-9]+):/g;function KD(e,t){const n=qD.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],s=e.split("\n"),i=s.length.toString().length+2,a=s.map(((e,t)=>k((t+1).toString(),i)+e));let o=0;for(let e=0;e<a.length;e++)o=Math.max(a[e].length,o);const u=a.slice(0,r-1),l=a.slice(r-1,r),c=a.slice(r);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${k(l[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function XD(e,t){if(GD(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function YD(e,t,n,r,s,i,a){const o=e.getAttribLocation(t,n);return-1!==o&&(GD(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),GD(e,(()=>e.vertexAttribPointer(o,s,e.FLOAT,!1,i,a))),GD(e,(()=>e.enableVertexAttribArray(o))),!0)}function ZD(e,t,n,r){GD(e,(()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),GD(e,(()=>e.activeTexture(e.TEXTURE0+n))),GD(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),GD(e,(()=>e.uniform1i(n,r)))}function JD(e,t,n){GD(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),GD(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function QD(e,t){GD(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),GD(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function eE(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function tE(e,t,n){const r=GD(e,(()=>t()));if(null==r)throw new Error(n);return r}function nE(e,t=2){return x(e.slice(0,e.length-t))}function rE(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function sE(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[nE(e),...rE(e)]),t}function iE(e){return e%2==0}function aE(e,t){if(y(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(iE(n)&&iE(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&iE(e[0])&&iE(t[0])}let oE,uE;function lE(e,t){return null!=e.getExtension(t)}function cE(e){try{if(null!=MD(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function hE(e){const t=VD(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),s}function dE(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&f("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const pE=X();function fE(){let e,t,n,r,s,i,a,o,u,l;return 2===X().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",s="texture",i="outputColor",a="out vec4 outputColor;",o=X().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",s="texture2D",i="gl_FragColor",a="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:s,output:i,defineOutput:a,defineSpecialNaN:o,defineSpecialInf:u,defineRound:l}}function mE(e,t,n="index"){const r=B(t);return r.map(((t,s)=>`int ${e[s]} = ${n} / ${t}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${t}`:`index -= ${e[s]} * ${t}`};`)).join("")}function gE(e,t,n="index"){const r=B(t);return r.map(((t,s)=>`int ${e[s]} = ${n} / outShapeStrides[${s}]; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * outShapeStrides[${s}]`:`index -= ${e[s]} * outShapeStrides[${s}]`};`)).join("")}function bE(e){const t=B(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}pE.registerFlag("HAS_WEBGL",(()=>pE.getNumber("WEBGL_VERSION")>0)),pE.registerFlag("WEBGL_VERSION",(()=>cE(2)?2:cE(1)?1:0)),pE.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),pE.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===pE.get("WEBGL_VERSION"))),pE.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),pE.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),pE.registerFlag("WEBGL_PACK",(()=>pE.getBool("HAS_WEBGL"))),pE.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>pE.getBool("WEBGL_PACK"))),pE.registerFlag("WEBGL_PACK_CLIP",(()=>pE.getBool("WEBGL_PACK"))),pE.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>pE.getBool("WEBGL_PACK"))),pE.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>pE.getBool("WEBGL_PACK"))),pE.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>pE.getBool("WEBGL_PACK"))),pE.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>pE.getBool("WEBGL_PACK"))),pE.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>pE.getBool("WEBGL_PACK"))),pE.registerFlag("WEBGL_PACK_REDUCE",(()=>pE.getBool("WEBGL_PACK"))),pE.registerFlag("WEBGL_LAZILY_UNPACK",(()=>pE.getBool("WEBGL_PACK"))),pE.registerFlag("WEBGL_CONV_IM2COL",(()=>pE.getBool("WEBGL_PACK"))),pE.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==oE){const t=MD(e);oE=t.getParameter(t.MAX_TEXTURE_SIZE)}return oE}(pE.getNumber("WEBGL_VERSION")))),pE.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==uE){const t=MD(e);uE=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,uE)}(pE.getNumber("WEBGL_VERSION")))),pE.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=pE.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=MD(e);return t=lE(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:lE(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),pE.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>pE.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!ms())),pE.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=MD(e);if(1===e){if(!lE(t,"OES_texture_float"))return!1}else if(!lE(t,"EXT_color_buffer_float"))return!1;return hE(t)}(pE.getNumber("WEBGL_VERSION")))),pE.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!pE.getBool("WEBGL_FORCE_F16_TEXTURES")&&pE.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),pE.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=MD(e);if(1!==e){if(lE(t,"EXT_color_buffer_float"))return hE(t);const e="EXT_color_buffer_half_float";if(lE(t,e)){const n=t.getExtension(e);return function(e,t){const n=VD(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(s),i}(t,n)}return!1}return!!lE(t,"OES_texture_float")&&!!lE(t,"WEBGL_color_buffer_float")&&hE(t)}(pE.getNumber("WEBGL_VERSION")))),pE.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=pE.getNumber("WEBGL_VERSION"))&&null!=MD(e).fenceSync;var e})),pE.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>pE.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),pE.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),pE.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>ms()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),pE.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),pE.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),pE.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),pE.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),pE.registerFlag("WEBGL_EXP_CONV",(()=>!1)),pE.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>pE.getBool("IS_TEST"))),pE.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),pE.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),pE.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1));const xE="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:yE}=i;function wE(e,t,n){const r=[];if(e.forEach((e=>{const t=x(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=TE(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const s=r.join("\n"),i=e.map((e=>function(e,t,n=!1,r){let s="";s+=n?kE(e,r):vE(e,r);const i=e.shapeInfo.logicalShape,a=t.logicalShape;return i.length<=a.length&&(s+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",i=e.shapeInfo.logicalShape.length,a=t.logicalShape.length,o=yE(e.shapeInfo.logicalShape,t.logicalShape),u=$E(a),l=a-i;let c;const h=["x","y","z","w","u","v"];c=0===i?"":a<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+l]} = 0;`)).join("\n");let d="";d=a<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+l]}`)).join(", ");let p="return outputValue;";const f=1===x(e.shapeInfo.logicalShape),m=1===x(t.logicalShape);if(1!==i||f||m){if(f&&!m)p=1===a?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=i-2,t=i-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${u} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${d});\n      ${p}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",i=t.texShape,a=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===u&&null==e.shapeInfo.flatOffset&&y(a,i))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=$E(u),c=yE(e.shapeInfo.logicalShape,t.logicalShape),h=u-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":u<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${p[e+h]} = 0;`)).join("\n");let f="";return f=u<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+h]}`)).join(", "),`\n    float ${s}() {\n      ${l} coords = getOutputCoords();\n      ${d}\n      return get${r}(${f});\n    }\n  `}(e,t)),s}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),a=t.texShape,o=fE(),u=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let l,c,h=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${IE}\n    ${CE}\n    ${DE}\n  `}(o);return t.isPacked?(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(y(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const s=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[2]/2),i=s*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${i};\n      index -= b * ${i};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[e.length-1]/2),i=s*Math.ceil(e[e.length-2]/2);let a=i,o="",u="b, r, c";for(let t=2;t<e.length-1;t++)a*=e[e.length-t-1],o=`\n      int b${t} = index / ${a};\n      index -= b${t} * ${a};\n    `+o,u=`b${t}, `+u;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${i};\n      index -= b * ${i};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec${e.length}(${u});\n    }\n  `}(e,t,n)}}(t.logicalShape,a,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return y(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${gE(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const r=mE(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${gE(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const r=mE(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=mE(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=mE(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,a,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(h+=EE),[h,u,c,s,l,i,n.userCode].join("\n")}function vE(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[s,i]=e.shapeInfo.texShape;if(1===s&&1===i)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const a=NE(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${a});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,u]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${u}, ${a});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${SE(e)}\n      }\n    `;const s=e.shapeInfo.texShape,i=s[0],a=s[1];if(1===a&&1===i)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=NE(n);return 1===a?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${i}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===i?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${a}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${i}, ${a}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=e.shapeInfo.texShape;if(null!=i&&y(n,i)){if(t)return`\n      float ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=i[0];return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${i[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:a,keptDims:o}=E(n),u=a;if(u.length<n.length){const n=["row","col"];return`\n      ${vE(AE(e,u),t)}\n      float ${s}(int row, int col) {\n        return ${s}(${FE(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${SE(e)}\n      }\n    `;const l=i[0],c=i[1],h=NE(r);return 1===c?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===l?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${s}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${l}, ${c}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=n[1]*n[2],a=n[2],{newShape:o,keptDims:u}=E(n),l=o;if(l.length<n.length){const n=["row","col","depth"];return`\n        ${vE(AE(e,l),t)}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${FE(n,u)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${i}, ${a}, 1)));\n        ${SE(e)}\n      }\n    `;const c=e.shapeInfo.texShape,h=c[0],d=c[1],p=e.shapeInfo.flatOffset;if(d===i&&null==p)return t?`\n      float ${s}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${a}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(d===a&&null==p)return t?`\n      float ${s}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const f=NE(r);return t?`\n    float ${s}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${i} + col * ${a} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=n[3],a=n[2]*i,o=n[1]*a,{newShape:u,keptDims:l}=E(n);if(u.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${vE(AE(e,u),t)}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${FE(n,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${a}, ${i}, 1)));\n        ${SE(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(p===o&&null==c)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${a}, ${i}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(p===i&&null==c)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const b=NE(r);return t?`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${b});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${a} +\n          depth * ${i} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${p}, index + ${b});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],i=t[3]*s,a=t[2]*i,o=t[1]*a,{newShape:u,keptDims:l}=E(t);if(u.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${vE(AE(e,u))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${FE(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${a}, ${i}, ${s})) +\n          depth3;\n        ${SE(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${a}, ${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===s&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${a} + depth * ${i} +\n          depth2 * ${s} + depth3 + ${NE(n)};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:i}=E(t);if(s.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${vE(AE(e,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${FE(t,i)});\n      }\n    `}const a=t[5],o=t[4]*a,u=t[3]*o,l=t[2]*u,c=t[1]*l;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${l}, ${u}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${a}, 1)));\n        ${SE(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${u}, ${o}, ${a})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===a&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${l} + depth * ${u} +\n          depth2 * ${o} + depth3 * ${a} + depth4 + ${NE(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function kE(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${fE().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,i=fE();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${i.texture2D}(${n}, uv);\n    }\n  `;const a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${a[0]}, ${a[1]}, index);\n      return ${i.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=e.shapeInfo.texShape,a=i[0],o=i[1],u=fE();if(null!=i&&y(n,i))return t?`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${a}.0);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${s}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `;const l=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${l[0]}, ${l[1]}, row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=e.shapeInfo.texShape,a=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];if(1===n[0]){const r=[1,2],i=["b","row","col"];return`\n        ${kE(AE(e,n.slice(1)),t)}\n        vec4 ${s}(int b, int row, int col) {\n          return ${s}(${FE(i,r)});\n        }\n      `}const o=fE();if(t)return`\n    vec4 ${s}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const u=a[0],l=a[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${s}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${u}, ${l}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=fE();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${n}, uv);\n    }\n  `;const i=e.shapeInfo.logicalShape,a=i.length,o=e.shapeInfo.texShape,u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=u[0],c=u[1],h=Math.ceil(i[a-1]/2);let d=h*Math.ceil(i[a-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let e=2;e<a-1;e++)p=`int b${e}, `+p,d*=i[a-e-1],f=`b${e} * ${d} + `+f;return`\n    vec4 ${r}(${p}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const IE="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",CE="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",DE="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",EE="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function NE(e){return`offset${e}`}function SE(e){const t=e.name,n=x(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function $E(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function TE(e,t,n){const{newShape:r,keptDims:s}=E(t),i=t.length,a=e&&3===i&&1===t[0],o=a?t.slice(1):r,u=!e&&i>1&&!y(t,n)&&r.length<i||a;return{useSqueezeShape:u,uniformShape:u?o:t,keptDims:s}}function AE(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function FE(e,t){return t.map((t=>e[t])).join(", ")}function RE(e,t,n){const r={},s={},i={},a=[];let o,u,l,c=null,h=null;h=e.getUniformLocation(n,"NAN",!1),1===X().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(n,"INFINITY",!1));const d=!1;for(let a=0;a<t.variableNames.length;a++){const o=t.variableNames[a];r[o]=e.getUniformLocation(n,o,d),r[`offset${o}`]=e.getUniformLocation(n,`offset${o}`,d),t.enableShapeUniforms&&(s[`${o}Shape`]=e.getUniformLocation(n,`${o}Shape`,d),i[`${o}TexShape`]=e.getUniformLocation(n,`${o}TexShape`,d))}return t.enableShapeUniforms&&(o=e.getUniformLocation(n,"outShape",d),l=e.getUniformLocation(n,"outShapeStrides",d),u=e.getUniformLocation(n,"outTexShape",d)),t.customUniforms&&t.customUniforms.forEach(((t,r)=>{a[r]=e.getUniformLocation(n,t.name,d)})),{uniformLocations:r,customUniformLocations:a,infLoc:c,nanLoc:h,inShapesLocations:s,inTexShapesLocations:i,outShapeLocation:o,outShapeStridesLocation:l,outTexShapeLocation:u}}function _E(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,s=t[n],i=s.shape;if(!y(r,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${i} must match`);if(e.isUniform&&s.isUniform)return;const a=e.texShape,o=s.isUniform?null:s.texData.texShape;if(!y(a,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${o} must match`)}))}function OE(e){return X().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class ME{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=BD.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=fE();this.outputShape=e,this.enableShapeUniforms=OE(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?gE(["r","c","d"],e):mE(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class BE{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=BD.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=fE();this.outputShape=e,this.enableShapeUniforms=OE(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?gE(["r","c","d"],e):mE(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class LE{constructor(e){this.variableNames=["A"],this.outTexUsage=LD.DOWNLOAD;const t=fE();this.outputShape=e,this.userCode=`\n      ${xE}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class zE{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=LD.DOWNLOAD;const t=fE();this.outputShape=e,this.userCode=`\n      ${xE}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}const PE={R:0,G:1,B:2,A:3};class WE{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=fE();this.outputShape=e,this.enableShapeUniforms=OE(this.outputShape.length);let s="result";t&&(s="floor(result * 255. + 0.5)");let i="";for(let e=0;e<n.length;e++){const t=n[e];i+=`\n          if(offset == ${e}) {\n            result = values[${PE[t]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":bE(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${r.texture2D}(A, uv);\n          ${i}\n        }\n        ${r.output} = vec4(${s}, 0., 0., 0.);\n      }\n    `}}class UE{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=fE();this.outputShape=e,this.enableShapeUniforms=OE(this.outputShape.length);let r="",s="result";t&&(s="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let s=0;s<=1;s++){const i=2*t+s;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${s} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${s};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${i}] = values[0];\n            } else if (offset == 1) {\n              result[${i}] = values[1];\n            } else if (offset == 2) {\n              result[${i}] = values[2];\n            } else {\n              result[${i}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":bE(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${s};\n        }\n    `}}function VE(e,t,n,r,s,i){!function(e,t){const n=X().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const a=function(e){return tE(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return GD(e,(()=>e.bindTexture(o,a))),GD(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),GD(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),GD(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),GD(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===X().getNumber("WEBGL_VERSION")?GD(e,(()=>e.texImage2D(o,0,r,t,n,0,s,i,null))):GD(e,(()=>e.texStorage2D(o,1,r,t,n))),GD(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:a,texShape:[n,t]}}function GE(e){return e.internalFormatFloat}function HE(e){return e.internalFormatHalfFloat}function jE(e){return e.downloadTextureFormat}function qE(e){return e.internalFormatPackedFloat}function KE(e){return e.internalFormatPackedHalfFloat}class XE{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=X().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){_D[e]=t}(t,e)):this.gl=MD(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===X().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=jD(this.gl,e),lE(this.gl,t))this.textureHalfFloatExtension=jD(this.gl,t);else if(X().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),lE(this.gl,r))this.colorBufferHalfFloatExtension=jD(this.gl,r);else if(X().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",lE(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!lE(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(e){return function(e,t){const n=tE(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return GD(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),GD(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=tE(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return GD(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),GD(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return tE(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=VD(this.gl,this.textureHalfFloatExtension)}get debug(){return X().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;GD(e,(()=>e.finish())),GD(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),GD(e,(()=>e.deleteFramebuffer(this.framebuffer))),GD(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),GD(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),GD(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,i]=PD(t,n);return VE(e,s,i,GE(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,i]=PD(t,n);return VE(e,s,i,HE(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,i]=PD(t,n);return VE(e,s,i,jE(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){GD(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===X().getNumber("WEBGL_VERSION")?GD(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):GD(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===X().getNumber("WEBGL_VERSION")?GD(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):GD(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),GD(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,s,i){let a,o,u;GD(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),s instanceof Uint8Array?(a=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,u=e.RGBA):(a=new Float32Array(n*r*4),o=e.FLOAT,u=i.internalFormatPackedFloat),a.set(s),2===X().getNumber("WEBGL_VERSION")?GD(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,a))):GD(e,(()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,o,a))),GD(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,i]=UD(t,n);return VE(e,s,i,KE(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,i]=UD(t,n);return VE(e,s,i,qE(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(QD(this.gl,this.framebuffer),this.outputTexture=null),GD(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[s,i]=PD(t,n),a=new Uint8Array(t*n*4);return GD(e,(()=>e.readPixels(0,0,s,i,r.downloadTextureFormat,e.UNSIGNED_BYTE,a))),new Float32Array(a.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,s,i){return function(e,t,n,r,s,i,a,o){const u=e,l=new Float32Array(function(e,t){const[n,r]=UD(e,t);return n*r*4}(i,a));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}(this.gl,e,0,0,0,s,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const s=e.createBuffer();GD(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,s)));const i=16*t*n;return GD(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,i,e.STREAM_READ))),GD(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),GD(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),s}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(X().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(s,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=s}else X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return GD(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=function(e){const t=fE();return function(e,t){const n=tE(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(GD(e,(()=>e.shaderSource(n,t))),GD(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t));const n=function(e){return tE(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return GD(t,(()=>t.attachShader(n,this.vertexShader))),GD(t,(()=>t.attachShader(n,e))),function(e,t){if(GD(e,(()=>e.linkProgram(t))),!X().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n),this.debug&&XD(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=function(e,t,n){return GD(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),YD(e,t,"clipSpacePos",n,3,20,0)&&YD(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&GD(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&XD(this.gl,this.program),GD(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return tE(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),GD(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),ZD(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,s]=UD(t,n);this.setOutputMatrixTextureDriver(e,r,s)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&XD(this.gl,this.program),eE(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),GD(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),GD(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=jD(this.gl,2===X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await I((()=>this.disposed||this.isQueryAvailable(e,X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in X().platform&&(n=X().platform.setTimeoutCustom.bind(X().platform)),I((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),JD(this.gl,e,this.framebuffer),this.debug&&eE(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(JD(this.gl,this.outputTexture,this.framebuffer),this.debug&&eE(this.gl)):QD(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;JD(r,e,this.framebuffer),this.debug&&eE(r),this.outputTexture=e,GD(r,(()=>r.viewport(0,0,t,n))),GD(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),GD(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:YE,bincountImpl:ZE,bincountReduceImpl:JE,castImpl:QE,ceilImpl:eN,concatImpl:tN,equalImpl:nN,expImpl:rN,expm1Impl:sN,floorImpl:iN,gatherNdImpl:aN,gatherV2Impl:oN,greaterImpl:uN,greaterEqualImpl:lN,lessImpl:cN,lessEqualImpl:hN,linSpaceImpl:dN,logImpl:pN,maxImpl:fN,maximumImpl:mN,minimumImpl:gN,multiplyImpl:bN,negImpl:xN,notEqualImpl:yN,prodImpl:wN,raggedGatherImpl:vN,raggedRangeImpl:kN,raggedTensorToTensorImpl:IN,rangeImpl:CN,rsqrtImpl:DN,scatterImpl:EN,sigmoidImpl:NN,simpleAbsImpl:SN,sliceImpl:$N,sparseFillEmptyRowsImpl:TN,sparseReshapeImpl:AN,sparseSegmentReductionImpl:FN,sqrtImpl:RN,stridedSliceImpl:_N,stringNGramsImpl:ON,stringSplitImpl:MN,stringToHashBucketFastImpl:BN,subImpl:LN,tileImpl:zN,topKImpl:PN,transposeImpl:WN,uniqueImpl:UN}=a;function VN(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function GN(e,t){return 1===t?[e]:VN(e,t)}class HN{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=OE(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=GN("rc",this.rank),t=$E(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),s=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${s}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let s=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)s=`${e[e.length-1-t]},`+s;t.push(s)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class jN{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=OE(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r,s;this.userCode=`\n      ${r=t,s=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${s?function(e,t,n="index"){const r=function(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),s=new Array(n-1);s[n-2]=r[n-1];for(let e=n-3;e>=0;--e)s[e]=`(${s[e+1]} * ${r[e+1]})`;return s}(e.map(((e,t)=>t)),t);return r.map(((t,s)=>`int ${e[s]} = ${n} / ${r[s]}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${r[s]}`:`index -= ${e[s]} * ${r[s]}`};`)).join("")}(["r","c","d"],"inputShape"):mE(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":bE(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class qN{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=XN(t,n),s=YN(e,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const i=KN(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const e=this.freeTextures[s].shift();return this.usedTextures[s].push(e),e}let a;return r===zD.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===zD.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===zD.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===zD.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===zD.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(a),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),a}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const s=XN(n,r),i=YN(t,s,r);i in this.freeTextures||(this.freeTextures[i]=[]);const a=KN(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=X().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=a):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const u=this.usedTextures[i],l=u.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(l,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function KN(e,t,n,r,s){const i=function(e,t){switch(e){case zD.PACKED_2X2_FLOAT32:return qE(t);case zD.PACKED_2X2_FLOAT16:return KE(t);case zD.UNPACKED_FLOAT32:return GE(t);case zD.UNPACKED_FLOAT16:return HE(t);case zD.PACKED_4X1_UNSIGNED_BYTE:return jE(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let a;if(s){const[t,n]=UD(e[0],e[1]);a=t*n}else{const[t,n]=PD(e[0],e[1]);a=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,i);return a*o}function XN(e,t){if(e===LD.UPLOAD)return zD.PACKED_2X2_FLOAT32;if(e===LD.RENDER||null==e)return function(e){return X().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?zD.PACKED_2X2_FLOAT32:zD.UNPACKED_FLOAT32:e?zD.PACKED_2X2_FLOAT16:zD.UNPACKED_FLOAT16}(t);if(e===LD.DOWNLOAD||e===LD.PIXELS)return zD.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function YN(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class ZN{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=OE(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const JN="return abs(x);",QN="return x;";class eS{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=OE(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class tS{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=OE(this.outputShape.length);const t=e.length,n=GN("rc",t),r=$E(t),s=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),i=n.slice(-2),a=t<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${a}));\n      }\n    `}}const nS=$c,rS={},sS=X().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class iS extends u{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!X().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof XE)t=e;else{const n=MD(X().getNumber("WEBGL_VERSION"),e);t=new XE(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=MD(X().getNumber("WEBGL_VERSION"));t=new XE(e),this.binaryCache=((n=X().getNumber("WEBGL_VERSION"))in rS||(rS[n]={}),rS[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new qN(this.gpgpu),this.numMBBeforeWarning=null==X().global.screen?1024:X().global.screen.height*X().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new o(this,Wi())}nextDataId(){return iS.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,r,s,i){const a=this.makeTensorInfo(t,n),o=this.texData.get(a.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[r,s]},o.texShape=[r,s];const u=sE(t),l=new WE(u,!1,i),c=this.runWebGLProgram(l,[a],n,[[r,s]]);return c.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(a),c.dataId}write(e,t,n){if((X().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||X().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:LD.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r,s){if(X().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:LD.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:s,slice:i,shape:a,isPacked:o}=t;if(null!=i){let t;t=o?new eS(a,QN):new ZN(a,QN);const n=this.runWebGLProgram(t,[{dataId:e,shape:a,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const u=null!=this.activeTimers;let l,c;return u&&(l=Rr()),c="complex64"===r?Yl(this.readSync(s.real.dataId),this.readSync(s.imag.dataId)):this.getValuesFromTexture(e),u&&(this.downloadWaitMs+=Rr()-l),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:s,dtype:i,complexTensorInfos:a,isPacked:o}=t;if(null!=s){let t;t=o?new eS(r,QN):new ZN(r,QN);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:i}],i),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if(X().getBool("DEBUG")&&!X().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===X().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,l,c=null;if("complex64"!==i&&X().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...WD(r))}if(this.pendingRead.set(e,[]),"complex64"!==i&&await this.gpgpu.createAndWaitForFence(),"complex64"===i){const e=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]);l=Yl(e[0],e[1])}else if(null==c)l=this.getValuesFromTexture(e);else{const e=x(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=u&&this.disposeIntermediateTensorInfo(u),null!=c){const e=this.gpgpu.gl;GD(e,(()=>e.deleteBuffer(c)))}const h=this.convertAndCacheOnCPU(e,l),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Wi().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){const n=this.texData.get(e),{values:r,shape:s,slice:i,dtype:a,isPacked:o,texture:u}=n;if("complex64"===a)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=i){let n;n=o?new eS(s,QN):new ZN(s,QN);const r=this.runWebGLProgram(n,[{dataId:e,shape:s,dtype:a}],a),i=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),i}if(null==u)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(e,t.customTexShape),c=Wi().makeTensorFromTensorInfo(l),h=this.texData.get(l.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>Or(e)));return oi(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return oi(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!HD(n)){if(X().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),s=x(t);if(X().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),i=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...WD(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),i}const i=X().getBool("WEBGL_PACK")&&!0===r,a=i?sE(t):t,o=i?new zE(a):new LE(a),u=this.runWebGLProgram(o,[{shape:a,dtype:n,dataId:e}],"float32"),l=this.texData.get(u.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(u),c}timerAvailable(){return X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=b(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),i=b(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);a.kernelMs=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}(e),a.getExtraProfileInfo=()=>e.map(((e,t)=>({name:i[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Rr(),endMs:null}}endTimer(e){return X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Rr(),e)}async getQueryTime(e){if(X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:s,isPacked:i,slice:a}=this.texData.get(e),o=a&&a.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,s,i)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=sS){return X().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&x(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){or("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return nS(e.shape,t)}packedUnaryOp(e,t,n){const r=new eS(e.shape,t),s=this.compileAndRun(r,[e],n);return Wi().makeTensorFromTensorInfo(s)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=SN(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(X().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,JN,e.dtype);const t=new ZN(e.shape,JN),n=this.compileAndRun(t,[e]);return Wi().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&F(n[0])){const s=n.map((e=>_r(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return Wi().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new tS(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new HN(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[nE(e.shape),...rE(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},s=[nE(t),...rE(t)],i=new jN(s,n),a=[n],o=this.runWebGLProgram(i,[r],e.dtype,a,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:r,shape:s,dtype:i}=n;null!=t&&f(x(s)<=t[0]*t[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."));const a=sE(s);let o;o=r?new BE(a):new ME(a);const u=[null!=t?t:WD(a)];return{dtype:i,shape:s,dataId:this.runWebGLProgram(o,[{shape:a,dtype:i,dataId:e}],i,u,!0,t).dataId}}runWebGLProgram(e,t,n,r,s=!1,i){const a=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(a.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===BD.DENSE){const t=null!=i?i:WD(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===x(a.shape))return o.values=N(a.dtype,0),a;const u=[],l=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&x(t.shape)<=X().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),u.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!aE(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),u.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(a.dataId);const c={shape:a.shape,texData:o,isUniform:!1},h=function(e,t,n){let r="";t.concat(n).forEach((t=>{const s=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const i=t.texData.texShape,{useSqueezeShape:a,uniformShape:o,keptDims:u}=TE(e.packedInputs,t.shape,i);let l="",c="",h="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];l=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=B(o);h=`${e[0]===i[1]}_${e[e.length-1]===i[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const d=t.shape.length,p=2===o.length&&y(t.shape,i),f=1===x(t.shape),m=xi(t.shape,n.shape),g=!e.packedInputs&&d===n.shape.length&&y(i,n.texData.texShape),b=e.packedInputs||o.length>2?"":`${i[0]>1}_${i[1]>1}`;r+=`${d}_${g}_${a?u:""}_${o.length}_${f}_${m}_${p}_${l}_${c}_${h}_${b}_${s}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${s}`}}));const s=e.userCode;let i=e.constructor.name;return i+="_"+r+"_"+s+`${X().getNumber("WEBGL_VERSION")}`,i}(e,l,c),d=this.getAndSaveBinary(h,(()=>function(e,t,n,r){const s=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),i=s.map((e=>e.shapeInfo)),a={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=wE(s,a,t),u=function(e,t){const n=tE(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(GD(e,(()=>e.shaderSource(n,t))),GD(e,(()=>e.compileShader(n))),X().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw KD(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,o),l=e.createProgram(u);return X().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:u,source:o,webGLProgram:l,inShapeInfos:i,outShapeInfo:a,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:u,source:o,webGLProgram:l,inShapeInfos:i,outShapeInfo:a},RE(e,t,l))}(this.gpgpu,e,l,c))),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),X().get("ENGINE_COMPILE_ONLY")||function(e,t,n,r,s){t.program.enableShapeUniforms||(_E(t.inShapeInfos,n),_E([t.outShapeInfo],[r]));const i=r.texData.texture,a=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(i.texture,a[0],a[1]):e.setOutputMatrixTexture(i.texture,a[0],a[1]),e.setProgram(t.webGLProgram),1===X().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{const s=t.program.variableNames[r],i=t.uniformLocations[s],a=t.uniformLocations[`offset${s}`],o=t.inShapesLocations[`${s}Shape`],u=t.inTexShapesLocations[`${s}TexShape`];if(o){const{uniformShape:r}=TE(t.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(o,new Int32Array(r));break;case 2:e.gl.uniform2iv(o,new Int32Array(r));break;case 3:e.gl.uniform3iv(o,new Int32Array(r));break;case 4:e.gl.uniform4iv(o,new Int32Array(r))}}if(u&&e.gl.uniform2i(u,n.texData.texShape[0],n.texData.texShape[1]),null!=i)if(n.isUniform)if(x(n.shape)<2)e.gl.uniform1f(i,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(i,t)}else null!=n.texData.slice&&null!=a&&e.gl.uniform1i(a,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture.texture,i,r)}));const o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=B(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&s&&t.program.customUniforms.forEach(((n,r)=>{const i=t.customUniformLocations[r],a=s[r];if("float"===n.type)e.gl.uniform1fv(i,a);else if("vec2"===n.type)e.gl.uniform2fv(i,a);else if("vec3"===n.type)e.gl.uniform3fv(i,a);else if("vec4"===n.type)e.gl.uniform4fv(i,a);else if("int"===n.type)e.gl.uniform1iv(i,a);else if("ivec2"===n.type)e.gl.uniform2iv(i,a);else if("ivec3"===n.type)e.gl.uniform3iv(i,a);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(i,a)}})),e.executeProgram()}(this.gpgpu,d,l,c,r),u.forEach((e=>this.disposeIntermediateTensorInfo(e))),p&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=X().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=Rr();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!X().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===s){const e=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),e}return a}compileAndRun(e,t,n,r,s=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(X().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Vi((()=>{if(!X().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=X().getBool("DEBUG");X().set("DEBUG",!1);const t=this.abs(Ki(1e-8)).dataSync()[0];if(X().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:s,texture:i,usage:a,isPacked:o}=t;if(null!=i)return;const u=null!=this.activeTimers;let l;u&&(l=Rr());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=X().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=X().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(r===1/0&&X().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),t&&(n*=2,r*=2,1===(e=e.map(((t,n)=>n>=e.length-2?d(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=E(e);e=t.newShape}let s=x(e),i=null;e.length<=1&&s<=n?i=[1,s]:2===e.length&&e[0]<=n&&e[1]<=n?i=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?i=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?i=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?i=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(i=[e[0],e[1]*e[2]*e[3]]);const a=null!=i&&Math.max(...i)>r&&Math.min(...i)<=(t?2:1)&&Math.min(...i)>0;if(null==i||a)if(t){const t=nE(e);let n=2,r=2;e.length&&([n,r]=rE(e)),s=t*(n/2)*(r/2),i=v(s).map((e=>2*e))}else i=v(s);return i}(n,o),t.texShape=c),null!=s){const e=sE(n);let i,a=c[1],h=c[0];const d=s instanceof Uint8Array||s instanceof Uint8ClampedArray;!o&&d||([a,h]=UD(c[0],c[1])),i=o?new UE(e,d):new WE(e,d);const p=d?[h,a]:c,f=this.makeTensorInfo(p,r),m=this.texData.get(f.dataId);m.usage=d?LD.PIXELS:LD.UPLOAD,m.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),a,h,s);const g=[[h,a]],b=!0,x=this.runWebGLProgram(i,[f],r,g,b),y=this.texData.get(x.dataId);t.texShape=y.texShape,t.isPacked=y.isPacked,t.usage=y.usage,X().get("ENGINE_COMPILE_ONLY")?this.disposeData(x.dataId):(t.texture=y.texture,t.values=null,this.texData.delete(x.dataId)),this.disposeIntermediateTensorInfo(f),u&&(this.uploadWaitMs+=Rr()-l)}else{const e=this.acquireTexture(c,a,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*A(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await kl(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw KD(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const[,e]of Object.entries(this.binaryCache)){const{uniformLocations:t,customUniformLocations:n,infLoc:r,nanLoc:s,inShapesLocations:i,inTexShapesLocations:a,outShapeLocation:o,outShapeStridesLocation:u,outTexShapeLocation:l}=RE(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=s,e.inShapesLocations=i,e.inTexShapesLocations=a,e.outShapeLocation=o,e.outShapeStridesLocation=u,e.outTexShapeLocation=l}}createTensorFromTexture(e,t,n){const{texture:r,height:s,width:i,channels:a}=e,o=Wi().backend;if(!o.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const u=o.writeTexture(r,t,n,s,i,a);return Wi().makeTensorFromDataId(u,t,n,o)}}iS.nextDataId=0,gs()&&ji("webgl",(()=>new iS),2);class aS{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=wi(t,n),this.enableShapeUniforms=OE(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class oS{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=wi(t,n);const s=this.outputShape.length;this.enableShapeUniforms=OE(s);let i="";if(r)if(0===s||1===x(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(i=`\n          ${$E(s)} coords = getOutputCoords();\n        `,1===s)this.enableShapeUniforms?i+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":i+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=GN("coords",s);this.enableShapeUniforms?i+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= outShape[${s} - 2];\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= outShape[${s} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:i+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}function uS(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const lS={kernelName:pt,backendName:"webgl",kernelFunc:uS};function cS(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,i=n.makeTensorInfo(r.shape,"complex64"),a=n.texData.get(i.dataId),o=uS({inputs:{x:r},backend:n}),u=uS({inputs:{x:s},backend:n});return a.complexTensorInfos={real:o,imag:u},i}const hS={kernelName:De,backendName:"webgl",kernelFunc:cS},dS="return (a < 0.) ? b * a : a;",pS="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",fS={kernelName:yt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:i}=r,a=n.makeTensorInfo([],"float32",Ar(i,"float32")),o=X().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new oS(pS,s.shape,a.shape):new aS(dS,s.shape,a.shape),u=n.runWebGLProgram(o,[s,a],"float32");return n.disposeIntermediateTensorInfo(a),u}},mS="return (a < 0.) ? b * a : a;",gS="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",bS={kernelName:en,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t,i=X().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new oS(gS,r.shape,s.shape):new aS(mS,r.shape,s.shape);return n.runWebGLProgram(i,[r,s],"float32")}};function xS({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:i})=>{const{x:a}=s,o=i,u=r||a.dtype;if(o.shouldExecuteOnCPU([a])&&null!=n){const e=o.texData.get(a.dataId),t=n(e.values,u);return o.makeTensorInfo(a.shape,u,t)}let l;return l=X().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new eS(a.shape,t):new ZN(a.shape,e),o.runWebGLProgram(l,[a],u)}}function yS({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:i}){return({inputs:a,backend:o})=>{const{a:u,b:l}=a,c=o;if(r&&"complex64"===u.dtype){const t=c.texData.get(u.dataId),n=c.texData.get(l.dataId),[r,s]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,s={dataId:n.dataId,dtype:n.dtype,shape:u.shape},i={dataId:r.dataId,dtype:r.dtype,shape:l.shape},a=new aS(e,u.shape,l.shape);return c.runWebGLProgram(a,[s,i],rs(n.dtype,r.dtype))})),i=cS({inputs:{real:r,imag:s},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(s),i}const h=i||rs(u.dtype,l.dtype);if(("string"===u.dtype||"string"===l.dtype||c.shouldExecuteOnCPU([u,l]))&&null!=s){const e=c.texData.get(u.dataId).values,t=c.texData.get(l.dataId).values,n="string"===u.dtype?Nc(e):e,r="string"===u.dtype?Nc(t):t,[i,a]=s(u.shape,l.shape,n,r,h),o=c.makeTensorInfo(a,h);return c.texData.get(o.dataId).values=i,o}let d;return d=X().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new oS(t,u.shape,l.shape,n):new aS(e,u.shape,l.shape),c.runWebGLProgram(d,[u,l],h)}}function wS(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?gS:mS;if("leakyrelu"===e)return t?pS:dS;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class vS{constructor(e,t,n,r=!1,s=!1,i=!1,a=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=OE(this.outputShape.length);const l=r?e[1]:e[2],c=Math.ceil(l/2),h=r?"i * 2, rc.y":"rc.y, i * 2",d=s?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";a&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${a}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${a}\n        }`:`vec4 activation(vec4 x) {\n          ${a}\n        }`,g="result = activation(result);");const b=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let x="rc.x",y="rc.x";e[0]<t[0]?x=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(y=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${x};\n          int batchB = ${y};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${b}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}class kS{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=wi(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const IS="return a * b;";function CS(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,i=rs(r.dtype,s.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),i=new kS("return areal * breal - aimag * bimag;",r.shape,s.shape),a=new kS("return areal * bimag + aimag * breal;",r.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],u=n.runWebGLProgram(i,o,"float32"),l=n.runWebGLProgram(a,o,"float32"),c=cS({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,s])){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),[a,o]=bN(r.shape,s.shape,e.values,t.values,i),u=n.makeTensorInfo(o,i);return n.texData.get(u.dataId).values=a,u}let a;return a=X().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new oS(IS,r.shape,s.shape):new aS(IS,r.shape,s.shape),n.runWebGLProgram(a,[r,s],i)}const DS={kernelName:Vt,backendName:"webgl",kernelFunc:CS};function ES(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:i}=r,a=n,o=x(s.shape),u=C(i,o),l=x(u);f(o===l,(()=>`The new shape (${u}) has ${l} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=a.texData.get(s.dataId);return!c.isPacked||aE(s.shape,u)||null!==c.texture&&aE(c.shape,u)?(a.incRef(s.dataId),{dataId:s.dataId,shape:u,dtype:s.dtype}):function(e,t,n){const r=[nE(e.shape),...rE(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},i=[nE(t),...rE(t)],a=new jN(i,r),o=[r],u=n.runWebGLProgram(a,[s],e.dtype,o,!0);return{dataId:u.dataId,shape:t,dtype:u.dtype}}(s,u,a)}const NS={kernelName:cn,backendName:"webgl",kernelFunc:ES};class SS{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:i}=e;this.outputShape=[r,i];const a=4*Math.floor(n/4),o=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${w(e)?e.toPrecision(2):e}, ones);`}let l="";s%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${a}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${a};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class $S{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:i}=e;this.outputShape=[r,i];let a="0.0",o="";"prod"===t?a="1.0":"min"===t?(a="1.0 / 1e-20",o="min"):"max"===t&&(a="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(a="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(a="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${a};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${a});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${u});\n      }\n    `}}function TS(e,t,n,r){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=Al(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let i=e;for(let a=0;a<s.length;a++){const{inSize:o,windowSize:u,outSize:l}=s[a];let c,h;c="mean"===n?0===a?new SS({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},o):new SS({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l}):new $S({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},n),h=i,i=r.runWebGLProgram(c,[i],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return i}class AS{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=$E(this.rank),s=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class FS{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=$E(this.rank),s=VN("rc",this.rank),i=new Array(this.rank);for(let e=0;e<t.length;e++)i[t[e]]=s[e];const a=`vec2(${i.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${i.join()}), ${a})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function RS(e,t,n){const r=X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new FS(e.shape,t):new AS(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function _S(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r;return function(e,t,n,r){const s=t,i=e.shape.length,a=D(s,e.shape);let o=a;const u=yo(o,i),l=null!=u;let c=e;l&&(c=RS(e,u,r),o=vo(o.length,i)),xo("sum",o,i);const[h,d]=go(c.shape,o);let p=h;n&&(p=bo(h,a));const f=x(d),m=ES({inputs:{x:c},attrs:{shape:[x(e.shape)/f,f]},backend:r}),g=TS(m,ss(e.dtype),"sum",r),b=ES({inputs:{x:g},attrs:{shape:p},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),l&&r.disposeIntermediateTensorInfo(c),b}(s,i,a,n)}const OS={kernelName:Tn,backendName:"webgl",kernelFunc:_S};function MS(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{perm:i}=r,a=n,o=s.shape.length,u=new Array(o);for(let e=0;e<u.length;e++)u[e]=s.shape[i[e]];let l;if(a.shouldExecuteOnCPU([s])){const e=a.texData.get(s.dataId).values,t=WN(e,s.shape,s.dtype,i,u);l=a.makeTensorInfo(u,s.dtype),a.texData.get(l.dataId).values=t}else l=RS(s,i,a);return l}const BS={kernelName:Zn,backendName:"webgl",kernelFunc:MS};function LS({a:e,b:t,transposeA:n,transposeB:r,backend:s,bias:i=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:u=null}){const l=e.shape.length,c=t.shape.length,h=n?e.shape[l-2]:e.shape[l-1],d=r?t.shape[c-1]:t.shape[c-2],p=n?e.shape[l-1]:e.shape[l-2],m=r?t.shape[c-2]:t.shape[c-1],g=e.shape.slice(0,-2),b=t.shape.slice(0,-2),y=x(g),w=x(b),v=wi(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([p,m]);f(h===d,(()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const k=n?[y,h,p]:[y,p,h],I=r?[w,m,d]:[w,d,m],C=ES({inputs:{x:e},backend:s,attrs:{shape:k}}),D=ES({inputs:{x:t},backend:s,attrs:{shape:I}}),E=[C,D],N=Math.max(y,w),S=n?C.shape[1]:C.shape[2],$=null!=i,T=null!=a,A="leakyrelu"===u,F=null!=u?wS(u,!0):null;let R;if((1===p||1===m)&&S>1e3&&!1===($||T||A||null!=F)){let e=C,t=D;n&&(e=MS({inputs:{x:C},backend:s,attrs:{perm:[0,2,1]}}),E.push(e)),r&&(t=MS({inputs:{x:D},backend:s,attrs:{perm:[0,2,1]}}),E.push(t));const i=1===m;let a=e;1!==m&&(a=ES({inputs:{x:e},backend:s,attrs:{shape:[N,S,1]}}),E.push(a));const o=1===m?2:1;let u=t;i&&(u=ES({inputs:{x:t},backend:s,attrs:{shape:[N,1,S]}}),E.push(u));const l=CS({inputs:{a,b:u},backend:s});R=_S({inputs:{x:l},backend:s,attrs:{axis:o,keepDims:!0}}),E.push(l)}else{const u=rs(e.dtype,t.dtype),l=new vS(k,I,[N,p,m],n,r,$,F,T,A),c=[C,D];if(null!=i&&c.push(i),T&&c.push(a),A){const e=s.makeTensorInfo([],"float32",Ar(o,"float32"));c.push(e),E.push(e)}R=s.runWebGLProgram(l,c,u)}const _=ES({inputs:{x:R},backend:s,attrs:{shape:v}});E.push(R);for(const e of E)s.disposeIntermediateTensorInfo(e);return _}const zS={kernelName:sr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:i,bias:a,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;return LS({a:s,b:i,transposeA:u,transposeB:l,backend:n,bias:a,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},PS="return abs(x);",WS={kernelName:ee,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=SN(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let s;return s=X().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new eS(r.shape,PS):new ZN(r.shape,PS),n.runWebGLProgram(s,[r],r.dtype)}},US=xS({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),VS={kernelName:te,backendName:"webgl",kernelFunc:US},GS=xS({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),HS={kernelName:ne,backendName:"webgl",kernelFunc:GS},jS="return a + b;",qS=yS({opSnippet:jS,packedOpSnippet:jS,supportsComplex:!0,cpuKernelImpl:YE}),KS={kernelName:re,backendName:"webgl",kernelFunc:qS};class XS{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class YS{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const ZS={kernelName:se,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,s=n;if(1===s.length)return uS({inputs:{x:s[0]},backend:r});if(s.length>X().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(s.length/2),n=e({inputs:s.slice(0,t),backend:r}),i=e({inputs:s.slice(t),backend:r});return e({inputs:[n,i],backend:r})}const i=s.map((e=>e.dtype)).reduce(((e,t)=>rs(e,t))),a=s.map((e=>e.shape)),o=X().getBool("WEBGL_PACK")?new YS(s[0].shape,a):new XS(s[0].shape,a);return r.runWebGLProgram(o,s,i)}},JS={kernelName:ie,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r,o=s.shape.length,u=D(i,s.shape);let l=u;const c=yo(l,o);let h=s;null!=c&&(h=MS({inputs:{x:s},backend:n,attrs:{perm:c}}),l=vo(l.length,o)),xo("all",l,o);const[d,p]=go(h.shape,l),f=ES({inputs:{x:h},backend:n,attrs:{shape:[-1,x(p)]}}),m=TS(f,f.dtype,"all",n);let g;return g=ES(a?{inputs:{x:m},backend:n,attrs:{shape:bo(d,u)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},QS={kernelName:ae,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r,o=s.shape.length,u=D(i,s.shape);let l=u;const c=yo(l,o);let h=s;null!=c&&(h=MS({inputs:{x:s},backend:n,attrs:{perm:c}}),l=vo(l.length,o)),xo("any",l,o);const[d,p]=go(h.shape,l),f=ES({inputs:{x:h},backend:n,attrs:{shape:[-1,x(p)]}}),m=TS(f,f.dtype,"any",n);let g;return g=ES(a?{inputs:{x:m},backend:n,attrs:{shape:bo(d,u)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};class e${constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:i}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,i];const a="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${a} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class t${constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,f(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=e[e.length-1],i=Math.ceil(s/t);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),r||this.variableNames.push("bestIndicesA");const a=this.outputShape,o=a.length,u=$E(o),l=GN("coords",o);let c,h;if(1===i){h=o+1;const e=$E(h);c=`\n        ${e} sourceLocR = ${e}(${l.join()}, 0);\n        ++${l[o-1]};\n        ${e} sourceLocG = ${e}(${l.join()}, 0);\n        ++${l[o-2]};\n        ${e} sourceLocA = ${e}(${l.join()}, 0);\n        --${l[o-1]};\n        ${e} sourceLocB = ${e}(${l.join()}, 0);\n        --${l[o-2]};`}else h=o,c=`\n        ${u} sourceLocR = coords;\n        ++${l[o-1]};\n        ${u} sourceLocG = coords;\n        ++${l[o-2]};\n        ${u} sourceLocA = coords;\n        --${l[o-1]};\n        ${u} sourceLocB = coords;\n        --${l[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],m=d.map((e=>"int "+e)),g=GN("sourceLocR",h-1).concat("inIdx.r"),b=GN("sourceLocG",h-1).concat("inIdx.g"),x=GN("sourceLocB",h-1).concat("inIdx.b"),y=GN("sourceLocA",h-1).concat("inIdx.a"),w="max"===n?"greaterThan":"lessThan",v=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${x.join()}),\n                             getBestIndicesAChannel(${y.join()})));`,k=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${b.join()}) : 0.,\n            hasNextRow ? getAChannel(${x.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,I=r?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${I}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${l[o-1]} < ${a[o-1]-1};\n        bool hasNextRow = ${l[o-2]} < ${a[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${k};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${k};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${w}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function n$(e,t,n,r=null){let s=t.shape[0],i=t.shape[1];null!=r&&(s=r.shape[0],i=r.shape[1]);const a=Al(i),o={windowSize:a,inSize:i,batchSize:s,outSize:Math.ceil(i/a)},u=new e$(o,n,null==r),l=[t];null!=r&&l.push(r);const c=e.runWebGLProgram(u,l,"int32");if(1===c.shape[1])return c;const h=n$(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function r$(e,t,n,r=null){const s=null!=r?r.shape:t.shape,i=Al(s[s.length-1]),a=new t$(s,i,n,null==r),o=null==r?[t]:[t,r],u=e.runWebGLProgram(a,o,"int32");if(u.shape.length===t.shape.length){const r=r$(e,t,n,u);return e.disposeIntermediateTensorInfo(u),r}return u}function s$(e,t,n,r){const s=[n];if(xo("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,t.shape.length),!X().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],i=e.texData.get(t.dataId);let a=t;null!==i&&i.isPacked&&(a=e.unpackTensor(t),n.push(a));const[o,u]=go(a.shape,s),l=x(u),c=ES({inputs:{x:a},backend:e,attrs:{shape:[-1,l]}});n.push(c);const h=n$(e,c,r);n.push(h);const d=ES({inputs:{x:h},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),d}return r$(e,t,r)}const i$={kernelName:oe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i}=r;let a=D(i,s.shape);const o=yo(a,s.shape.length);let u=s;const l=[];null!=o&&(u=MS({inputs:{x:s},backend:n,attrs:{perm:o}}),l.push(u),a=vo(a.length,u.shape.length)),xo("argMax",[a[0]],u.shape.length);const c=s$(n,u,a[0],"max");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},a$={kernelName:ue,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i}=r;let a=D(i,s.shape);const o=yo(a,s.shape.length);let u=s;const l=[];null!=o&&(u=MS({inputs:{x:s},backend:n,attrs:{perm:o}}),l.push(u),a=vo(a.length,u.shape.length)),xo("argMin",[a[0]],u.shape.length);const c=s$(n,u,a[0],"min");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},o$=xS({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),u$={kernelName:le,backendName:"webgl",kernelFunc:o$},l$=xS({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),c$={kernelName:ce,backendName:"webgl",kernelFunc:l$},h$=xS({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),d$={kernelName:he,backendName:"webgl",kernelFunc:h$},p$=yS({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n"}),f$={kernelName:pe,backendName:"webgl",kernelFunc:p$},m$=xS({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),g$={kernelName:de,backendName:"webgl",kernelFunc:m$};class b${constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,a=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let b="0.0";if(f||(b="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${a}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(x="avgValue / count");const y=4*Math.floor(i/4),w=i%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${y}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${y};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${x});\n      }\n    `}}class x${constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,a=e.strideDepth,o=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;const x="avg"===t;let y="0.0";if(x||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${a}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${b});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(w="avgValue / count");const v=4*Math.floor(i/4),k=i%4,I=`\n      if (${x}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${a}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${b});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${w});\n        }\n      }\n    `}}const y$={kernelName:fe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;dE(s,"avgPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:u}=r;f(da(a,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const l=na(s.shape,i,a,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&y(l.inShape,l.outShape))return uS({inputs:{x:s},backend:n});const c=new b$(l,"avg",!1);return n.runWebGLProgram(c,[s],"float32")}},w$={kernelName:ge,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:i,strides:a,pad:o,dimRoundingMode:u,dataFormat:l}=r,c=ra(s.shape,i,a,[1,1,1],o,u,l),h=new x$(c,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}};class v${constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,i=e.dilationHeight,a=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=o-1-e.padInfo.top,c=u-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${i}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${a}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class k${constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,i=e.strideHeight,a=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const I$={kernelName:be,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,a=i,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,h=ra(a.shape,o,u,[1,1,1],l,c),d=new k$(h);return n.runWebGLProgram(d,[s],a.dtype)}},C$={kernelName:me,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,a=i;dE([s,i],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=na(a.shape,o,u,1,l),h=new v$(c);return n.runWebGLProgram(h,[s],a.dtype)}},D$={kernelName:xe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:i}=t,{transposeA:a,transposeB:o}=r;return LS({a:s,b:i,transposeA:a,transposeB:o,backend:n})}};class E${constructor(e,t,n,r,s,i){this.outputShape=[],this.variableNames=["x","mean","variance"],wi(e,t),wi(e,n);let a="0.0";null!=r&&(wi(e,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let o="1.0";null!=s&&(wi(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${a};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class N${constructor(e,t,n,r,s,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],wi(e,t),wi(e,n);let a="vec4(0.0)";null!=r&&(wi(e,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=s&&(wi(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${a};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const S$={kernelName:ut,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:s,variance:i,offset:a,scale:o}=e;f(s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),f(null==a||s.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),f(null==o||s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=n;null==u&&(u=.001);const l=[r,s,i];let c=null;null!=a&&(c=a.shape,l.push(a));let h=null;null!=o&&(h=o.shape,l.push(o));const d=X().getBool("WEBGL_PACK_NORMALIZATION")?new N$(r.shape,s.shape,i.shape,c,h,u):new E$(r.shape,s.shape,i.shape,c,h,u);return t.runWebGLProgram(d,l,l[0].dtype)}};class $${constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=$E(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return T$.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${T$[t]} = start[${t}] + coords.${T$[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const T$=["x","y","z","w","u","v"];class A${constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=$E(this.rank),n=GN("coords",this.rank),r=GN("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,i=`getChannel(getSource(${r.join()}), ${s})`,a=`\n      result.x = ${i};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${i};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${i};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${i};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${a}\n        ${o}\n        setOutput(result);\n      }\n    `}}function F$(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:i,size:a}=r,[o,u]=Oi(s,i,a);if(vi(s,o,u),0===x(u))return n.makeTensorInfo(u,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.texData.get(s.dataId),t=$N(e.values,o,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,t)}const{isPacked:l}=n.texData.get(s.dataId),c=Ri(s.shape,o,u);if(l||!c){const e=X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new A$(u):new $$(u),t=[o];return n.runWebGLProgram(e,[s],s.dtype,t)}return n.uploadToGPU(s.dataId),function(e,t,n,r){const s=r.texData.get(e.dataId),i=r.makeTensorInfo(n,e.dtype),a=r.texData.get(i.dataId);Object.assign(a,s),a.refCount=1,a.shape=n,a.dtype=e.dtype;let o=_i(t,B(e.shape));s.slice&&(o+=s.slice.flatOffset),a.slice={flatOffset:o,origDataId:s.slice&&s.slice.origDataId||e.dataId};const u=r.dataRefCount.get(a.slice.origDataId)||1;return r.dataRefCount.set(a.slice.origDataId,u+1),i}(s,o,u,n)}const R$={kernelName:In,backendName:"webgl",kernelFunc:F$},_$={kernelName:ye,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:i,crops:a}=r;f(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=i.reduce(((e,t)=>e*t)),u=Rl(s.shape,i,o),l=_l(u.length,i.length),c=Ol(s.shape,i,o),h=Ml(a,i.length),d=Bl(c,a,i.length),p=[],m=ES({inputs:{x:s},backend:n,attrs:{shape:u}}),g=MS({inputs:{x:m},backend:n,attrs:{perm:l}}),b=ES({inputs:{x:g},backend:n,attrs:{shape:c}}),x=F$({inputs:{x:b},backend:n,attrs:{begin:h,size:d}});return p.push(m),p.push(g),p.push(b),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},O$={kernelName:we,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:i}=t,{size:a}=r,o=n.readSync(s.dataId),u=n.readSync(i.dataId),l=ZE(o,u,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,l)}},M$={kernelName:ve,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,i=n.readSync(r.dataId),a=n.readSync(s.dataId),o=wi(Array.from(i),Array.from(a));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},B$=yS({opSnippet:"return float(a != b);",cpuKernelImpl:yN,dtype:"bool"}),L$={kernelName:Ht,backendName:"webgl",kernelFunc:B$};function z$(e){const{inputs:t,backend:n}=e,{input:r}=t;return uS({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const P$={kernelName:on,backendName:"webgl",kernelFunc:z$},W$={kernelName:ke,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:s}=t,{x:i}=n,{dtype:a}=s;if("complex64"===a){if("complex64"===i.dtype)return uS({inputs:{x:i},backend:r});const t=No(i.shape),n=e({inputs:{x:i},backend:r,attrs:{dtype:"float32"}}),s=cS({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===i.dtype){const t=z$({inputs:{input:i},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:a}});return r.disposeIntermediateTensorInfo(t),n}if(!$(i.dtype,a)){const e=uS({inputs:{x:i},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:a}}if(r.shouldExecuteOnCPU([i])){const e=r.texData.get(i.dataId).values,[t,n,s]=QE(e,i.shape,i.dtype,a);return r.makeTensorInfo(t,n,s)}if("int32"===a)return function(e,t){const n=new ZN(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(i,r);if("bool"===a){const e=r.makeTensorInfo([],"bool",N("bool",1)),t=B$({inputs:{a:i,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${a}`)}},U$="return ceil(x);",V$=xS({opSnippet:U$,packedOpSnippet:U$,cpuKernelImpl:eN}),G$={kernelName:Ie,backendName:"webgl",kernelFunc:V$};class H${constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class j${constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const q$={kernelName:Ce,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:i,clipValueMax:a}=r;let o;o=X().getBool("WEBGL_PACK_CLIP")?new j$(s.shape):new H$(s.shape);const u=[[i],[a]];return n.runWebGLProgram(o,[s],s.dtype,u)}};class K${constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function X$(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const Y$={kernelName:Ee,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=n.texData.get(r.dataId),i=new K$(r.shape),a=[X$(r,s.complexTensorInfos.real),X$(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(i,a,a[0].dtype)}};class Z${constructor(e){this.outputShape=[],this.outputShape=Cl(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,s=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class J${constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Cl(e,t);const n=this.outputShape,r=n.length,s=$E(r),i=GN("coords",r),a=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const u=a[t],l=a.slice(-2),c=a.join();let h=`if (${u} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${l.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];h+=`\n        if (${u} < ${o[e]}  && ${u} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${Q$(a,u,t)}),\n            vec2(${Q$(l,u,t)}));\n        }`}const d=o.length,p=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${Q$(a,u,p)}),\n          vec2(${Q$(l,u,p)}));`,this.userCode=`\n      float getValue(${a.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[r-1]} = ${i[r-1]} + 1;\n        if (${i[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[r-2]} = ${i[r-2]} + 1;\n        if (${i[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[r-1]} = ${i[r-1]} - 1;\n        if (${i[r-2]} < ${n[r-2]} &&\n            ${i[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}}function Q$(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function eT(e){const{inputs:t,backend:n}=e,{input:r}=t;return uS({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const tT={kernelName:mt,backendName:"webgl",kernelFunc:eT};function nT(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>z$({inputs:{input:e},backend:n}))),s=e.map((e=>eT({inputs:{input:e},backend:n}))),i=nT(r,t,n),a=nT(s,t,n),o=cS({inputs:{real:i,imag:a},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),s.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a),o}let s=n.shouldExecuteOnCPU(e);if("string"===r&&(s=!0),s){const s=e.map((e=>{const r=x(e.shape.slice(t));return ES({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),i=s.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),a=Cl(s.map((e=>e.shape)),1),o=1===s[0].shape[0],u=tN(i,a,r,o),l=Cl(e.map((e=>e.shape)),t),c=n.makeTensorInfo(l,r,u);return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const i=X().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(e.length>i){const r=[];for(let s=0;s<e.length;s+=i){const a=e.slice(s,s+i);r.push(nT(a,t,n))}const s=nT(r,t,n);for(const e of r)n.disposeIntermediateTensorInfo(e);return s}if(X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const s=new J$(e.map((e=>e.shape)),t);return n.runWebGLProgram(s,e,r)}const{tensors2D:a,outShape:o}=function(e,t,n){const r=Cl(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>ES({inputs:{x:e},attrs:{shape:[-1,x(e.shape.slice(t))]},backend:n}))),outShape:r}}(e,t,n),u=new Z$(a.map((e=>e.shape))),l=n.runWebGLProgram(u,a,r);a.forEach((e=>n.disposeIntermediateTensorInfo(e)));const c=ES({inputs:{x:l},attrs:{shape:o},backend:n});return n.disposeIntermediateTensorInfo(l),c}function rT(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,i=D(s,t[0].shape)[0];Il(t.map((e=>e.shape)),i);const a=Cl(t.map((e=>e.shape)),i);if(0===x(a))return n.makeTensorInfo(a,t[0].dtype,[]);const o=t.filter((e=>x(e.shape)>0));return 1===o.length?uS({inputs:{x:o[0]},backend:n}):nT(o,i,n)}const sT={kernelName:Ne,backendName:"webgl",kernelFunc:rT};class iT{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const i=e.padInfo.top,a=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,b=m?2:3,x=m?3:1;let y="",w="";n&&(y=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,w="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${o}, ${u});\n      const ivec2 pads = ivec2(${i}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${x}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${b}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${w}\n        setOutput(result);\n      }\n    `}}class aT{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,s=e.strideDepth,i=e.strideHeight,a=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${i}, ${a});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class oT{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=OE(this.outputShape.length);const i=e.padInfo.left,a=e.strideWidth,o=e.dilationWidth,u=e.filterHeight,l=e.filterWidth,c=l;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<l;e++)h+=`\n           vec4 xTexelC${2*e};\n           int xTexelC${2*e}Ready;\n           vec4 xTexelC${2*e+1};\n           int xTexelC${2*e+1}Ready;\n           vec4 xC${e};`;h+=`\n     for (int r = 0; r < ${u}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let e=0;e<l;e++)h+=`\n           xTexelC${2*e} = vec4(0.0);\n           xTexelC${2*e}Ready = 0;\n           xTexelC${2*e+1} = vec4(0.0);\n           xTexelC${2*e+1}Ready = 0;\n           xC${e} = vec4(0.0);`;h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let t=0;t<(c+1)/2;t++){const n=2*t;if(h+=`\n           xC = xCCorner + ${n*o};\n           `,1===a){if(n<l&&(i%2==1?(h+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n               `,h+=1===o&&n>0?`\n                 xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                   } else {\n                     xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                   }\n                   `):h+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xC${n} = xTexelC${n};\n                 `,n+1<l)){const e=i%2==0?d(o):o;o%2==0&&i%2==1||o%2!=0&&i%2!=1?(h+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                     xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${n+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${n+1}Ready = 1;\n                   }\n                   `,h+=o>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${n+1} = vec4(previous.zw, xTexelC${n+1}.xy);\n                     } else {\n                      xC${n+1} = vec4(0.0, 0.0, xTexelC${n+1}.xy);\n                     }\n                     `:`\n                     xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);\n                     `):h+=1===e?`\n                     xC${n+1} = xTexelC${n};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                       xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${n+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${n+1}Ready = 1;\n                     }\n\n                     xC${n+1} = xTexelC${n+1};\n                     `}}else n<l&&(i%2==1?(h+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n               `,n+1<l&&(h+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);\n                 `)):(h+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(\n                   xTexelC${n}.xy, xTexelC${n+1}.xy);\n               `,n+1<l&&(h+=`\n                   xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n                 `)));n<l&&(h+=`\n             wTexel = getW(r, ${n}, d1, d2);\n             dotProd += xC${n}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${n}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,n+1<l&&(h+=`\n               wTexel = getW(r, ${n+1}, d1, d2);\n               dotProd += xC${n+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${n+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let p="",f="";n&&(p=r?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:s?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${p}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${h}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${m}\n         ${f}\n         setOutput(result);\n       }\n     `}}class uT{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=OE(this.outputShape.length);const{dataFormat:n}=t,r=fE(),s="channelsLast"===n,i=s?1:2,a=s?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let u="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)u+=`\n          blockIndex = rc.z + ${t};\n          pos = rc.y + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${i}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${a}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${s}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${u}\n\n        ${r.output} = result;\n      }\n    `}}function lT(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function cT({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:o=null}){const u=e.shape,l=r.texData.get(e.dataId),c=n.inChannels,h=u[0]*u[1]*u[2],d=n.outChannels,p="channelsLast"===n.dataFormat;let m;const g=[];if(null!=i){const e=lT(i.shape,p);null!=e&&(i=ES({inputs:{x:i},backend:r,attrs:{shape:e}}),g.push(i))}if(null!=s){const e=lT(s.shape,p);null!=e&&(s=ES({inputs:{x:s},backend:r,attrs:{shape:e}}),g.push(s))}if((1!==h&&1!==d||!(c>1e3))&&l.isPacked&&p&&null!=l.texture&&u[2]%2!=0&&y(l.shape.slice(-3),u.slice(-3))){const c=u[0]*u[1]*(u[2]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},d=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,f(aE(l.shape,h.shape),(()=>`packed reshape ${l.shape} to ${h.shape} isn't free`));const p=ES({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});g.push(p);const b=LS({a:h,b:p,backend:r,transposeA:!1,transposeB:!1,bias:s,activation:o,preluActivationWeights:i,leakyreluAlpha:a}),x=r.texData.get(b.dataId);f(x.isPacked,(()=>"batchMatMul result is expected to be packed")),l.shape=d,x.shape=n.outShape,m=uS({inputs:{x:b},backend:r}),m.shape=n.outShape,g.push(b)}else{const u=n.outHeight*n.outWidth,l=ES({inputs:{x:e},backend:r,attrs:{shape:p?[n.batchSize,u,n.inChannels]:[n.batchSize,n.inChannels,u]}}),c=ES({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=LS({a:p?l:c,b:p?c:l,transposeA:!p,transposeB:!1,backend:r,bias:s,activation:o,preluActivationWeights:i,leakyreluAlpha:a});m=ES({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),g.push(l),g.push(c),g.push(h)}for(const e of g)r.disposeIntermediateTensorInfo(e);return m}function hT({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:o=null}){const{filterWidth:u,filterHeight:l,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=n,f="channelsLast"===p,m=u*l*c,g=d*h,b=[n.batchSize,m,g],y=[];if(null!=i){const e=lT(i.shape,f);null!=e&&(i=ES({inputs:{x:i},backend:r,attrs:{shape:e}}),y.push(i))}if(null!=s){const e=lT(s.shape,f);null!=e&&(s=ES({inputs:{x:s},backend:r,attrs:{shape:e}}),y.push(s))}const w=ES({inputs:{x:t},backend:r,attrs:{shape:[1,m,x(t.shape)/m]}});y.push(w);const v=new uT(b,n),k=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],I=r.runWebGLProgram(v,[e],"float32",k),C=ES({inputs:{x:I},backend:r,attrs:{shape:b}});y.push(I),y.push(C);const D=null!=s,E=null!=i,N="leakyrelu"===o,S=o?wS(o,!0):null,$=new vS(f?C.shape:w.shape,f?w.shape:C.shape,f?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],!0,!1,D,S,E,N),T=f?[C,w]:[w,C];if(s&&T.push(s),E&&T.push(i),N){const e=r.makeTensorInfo([],"float32",Ar(a,"float32"));T.push(e),y.push(e)}const A=r.runWebGLProgram($,T,"float32"),F=ES({inputs:{x:A},backend:r,attrs:{shape:n.outShape}});y.push(A);for(const e of y)r.disposeIntermediateTensorInfo(e);return F}const dT={kernelName:Se,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:a,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r,h=pa(u),d=sa(s.shape,i.shape,a,l,o,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(d.strideWidth<=2&&"channelsLast"===h&&X().getBool("WEBGL_EXP_CONV")){const e=new oT(d),t=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=n.runWebGLProgram(e,[s,i],"float32",t)}else if(X().getBool("WEBGL_CONV_IM2COL"))p=hT({x:s,filter:i,convInfo:d,backend:n});else{const e=new iT(d);p=n.runWebGLProgram(e,[s,i],"float32")}else p=cT({x:s,filter:i,convInfo:d,backend:n});const f=ES({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class pT{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,i="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${i}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class fT{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,i="channelsLast"===e.dataFormat,a=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=i?1:2,l=i?2:3,c=i?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${i}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class mT{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.padInfo.front,i=e.padInfo.top,a=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${s};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${i};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${a};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class gT{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,i=e.strideHeight,a=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const bT={kernelName:$e,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:a,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r,h=pa(u),d=sa(s.shape,c,a,1,o,l,!1,h),p=new pT(d);return n.runWebGLProgram(p,[s,i],"float32")}},xT={kernelName:Te,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{inputShape:a,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r,h=pa(l),d=sa(a,i.shape,o,1,u,c,!1,h),p=new fT(d);return n.runWebGLProgram(p,[s,i],"float32")}},yT={kernelName:Ae,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:a,pad:o,dilations:u}=r,l=ia(s.shape,i.shape,a,u,o),c=new aT(l);return n.runWebGLProgram(c,[s,i],"float32")}},wT={kernelName:Fe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:a,pad:o,filterShape:u}=r,l=ia(s.shape,u,a,1,o),c=new mT(l);return n.runWebGLProgram(c,[s,i],"float32")}},vT={kernelName:Re,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{pad:a,strides:o,inputShape:u}=r,l=ia(u,i.shape,o,1,a),c=new gT(l);return n.runWebGLProgram(c,[s,i],"float32")}},kT=xS({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),IT={kernelName:_e,backendName:"webgl",kernelFunc:kT},CT=xS({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),DT={kernelName:Oe,backendName:"webgl",kernelFunc:CT};class ET{constructor(e,t,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,a,o,u]=e,[l]=t,[c,h]=n;this.outputShape=[l,c,h,u];const d="bilinear"===r?1:0,[p,f]=[a-1+".0",o-1+".0"],[m,g,b]=c>1?[""+(a-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[x,y,w]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${x});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${i}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${y};\n\n        float in_y = ${b};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const NT={kernelName:Le,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:i,boxInd:a}=t,{cropSize:o,method:u,extrapolationValue:l}=r,c=new ET(s.shape,i.shape,o,u,l);return n.runWebGLProgram(c,[s,i,a],"float32")}};var ST;!function(e){e.Prod="*",e.Sum="+"}(ST||(ST={}));class $T{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const s=this.outputShape.length,i=this.op===ST.Prod?"1.0":"0.0",a=n?i:`getX(${TT(s,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1];let u="",l="";n?(u=r?"end != "+(o-1):"end != 0",l=r?"end + 1":"end - 1"):(u=r?`end + pow2 < ${o}`:"end >= pow2",l=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${$E(s)} coords = getOutputCoords();\n        int end = ${AT(s,"coords",this.op)};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${u}) {\n          int idx = ${l};\n          ${AT(s,"coords",this.op)} = idx;\n          val ${this.op}= getX(${TT(s,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function TT(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function AT(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function FT(e,t,n,r,s,i){const a=t.shape.length,o=yo([r],a);let u=t;null!=o&&(u=MS({inputs:{x:t},backend:n,attrs:{perm:o}}));const l=vo(1,a)[0];if(l!==a-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);const c=u.shape[l];let h=uS({inputs:{x:u},backend:n});for(let t=0;t<=Math.ceil(Math.log2(c))-1;t++){const r=new $T(e,u.shape,!1,i),s=[[t]],a=h;h=n.runWebGLProgram(r,[h],h.dtype,s),n.disposeIntermediateTensorInfo(a)}if(s){const t=new $T(e,u.shape,s,i),r=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=o){const e=MS({inputs:{x:h},backend:n,attrs:{perm:wo(o)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(u),e}return h}const RT={kernelName:Me,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,exclusive:a,reverse:o}=r;return FT(ST.Prod,s,n,i,a,o)}},_T={kernelName:Be,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,exclusive:a,reverse:o}=r;return FT(ST.Sum,s,n,i,a,o)}},OT={kernelName:ze,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:i}=t,{size:a,binaryOutput:o}=r;if(1===s.shape.length){const e=n.readSync(s.dataId),t=n.readSync(i.dataId),r=ZE(e,t,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,r)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(i),r=JE(e,t,a,o);return n.makeTensorInfo(r.shape,i.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class MT{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const BT={kernelName:Pe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:i,dataFormat:a}=r,o=s.shape[0],u=("NHWC"===a?s.shape[1]:s.shape[2])*i,l=("NHWC"===a?s.shape[2]:s.shape[3])*i,c=("NHWC"===a?s.shape[3]:s.shape[1])/(i*i),h=new MT("NHWC"===a?[o,u,l,c]:[o,c,u,l],i,a);return n.runWebGLProgram(h,[s],s.dtype)}};class LT{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=OE(this.outputShape.length);const i=e.filterHeight,a=e.filterWidth,o=e.outChannels/e.inChannels;let u="",l="";n&&(u=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,l="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${i}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${l}\n        setOutput(result);\n      }\n    `}}class zT{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=OE(this.outputShape.length);const i=e.outChannels/e.inChannels,a=e.padInfo.left,o=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,c=e.filterWidth,h=c;let p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<c;e++)p+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;p+=`\n    for (int r = 0; r < ${l}; r++) {\n      `;for(let e=0;e<c;e++)p+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(h+1)/2;e++){const t=2*e;if(p+=`\n          xC = xCCorner + ${t*u};\n          `,1===o){if(t<c&&(a%2==1?(p+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,p+=1===u&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):p+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<c)){const e=a%2==0?d(u):u;u%2==0&&a%2==1||u%2!=0&&a%2!=1?(p+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,p+=u>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                    } else {\n                     xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                    }\n                    `:`\n                    xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                    `):p+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<c&&(a%2==1?(p+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<c&&(p+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(p+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<c&&(p+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<c&&(p+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<c&&(p+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}p+="\n    }\n  ",p+="\n      }\n    ";let f="",m="";n&&(f=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,m="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${f}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${p}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${g}\n        ${m}\n        setOutput(result);\n      }\n    `}}const PT={kernelName:We,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:a,pad:o,dilations:u,dimRoundingMode:l}=r;let c=u;null==c&&(c=[1,1]),f(da(a,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`));const h=sa(s.shape,i.shape,a,c,o,l,!0);let d;d=X().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new zT(h):new LT(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[s,i],"float32",p)}};class WT{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${i} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class UT{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,i=t-1-e.padInfo.top,a=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const VT={kernelName:Ue,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:a,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r,h=sa(s.shape,c,a,o,u,l,!0),d=new WT(h);return n.runWebGLProgram(d,[s,i],"float32")}},GT={kernelName:Ve,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{strides:a,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r,h=sa(c,i.shape,a,o,u,l,!0),d=new UT(h);return n.runWebGLProgram(d,[s,i],"float32")}};class HT{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const jT={kernelName:Ge,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=[...r.shape,...r.shape],i=x(r.shape),a=ES({inputs:{x:r},backend:n,attrs:{shape:[i]}}),o=new HT(i),u=n.runWebGLProgram(o,[a],a.dtype),l=ES({inputs:{x:u},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(u),l}};class qT{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:s,strideWidth:i,filterHeight:a,filterWidth:o,dilationHeight:u,dilationWidth:l}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${i});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${a}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const KT={kernelName:He,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:a,pad:o,dilations:u}=r,l=ta(s.shape,i.shape,a,o,"NHWC",u);let c;const h=new qT(l);c=n.runWebGLProgram(h,[s,i],"float32");const d=ES({inputs:{x:c},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(c),d}},XT={kernelName:Xe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,i=t,{allDims:a,summedDims:o,idDims:u}=ic(s,i.length);oc(a.length,u,i);const{path:l,steps:c}=uc(o,u),h=c.length;let d=null,p=a.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=ac(p,u[t]);let s;lc(e)?s=i[t]:(s=MS({inputs:{x:i[t]},backend:n,attrs:{perm:e}}),f.push(s));const a=s.shape.slice();for(let e=0;e<r.length;++e)a.splice(r[e],0,1);y(s.shape,a)||(s=ES({inputs:{x:s},backend:n,attrs:{shape:a}}),f.push(s)),null===d?d=s:(d=CS({inputs:{a:s,b:d},backend:n}),f.push(d))}e<h-1&&(l[e]>=0&&(d=_S({inputs:{x:d},backend:n,attrs:{axis:l[e]-(a.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},YT=xS({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),ZT={kernelName:Ye,backendName:"webgl",kernelFunc:YT},JT={kernelName:Ze,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:s}=t,i=X().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new oS("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new aS("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(i,[r,s],r.dtype)}},QT=yS({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:nN}),eA={kernelName:Qe,backendName:"webgl",kernelFunc:QT},tA=xS({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${Gl};\n  float a1 = ${Hl};\n  float a2 = ${jl};\n  float a3 = ${ql};\n  float a4 = ${Kl};\n  float a5 = ${Xl};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),nA={kernelName:Je,backendName:"webgl",kernelFunc:tA},rA=xS({opSnippet:"if (isnan(x)) return x;\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:rN,dtype:"float32"}),sA={kernelName:et,backendName:"webgl",kernelFunc:rA};function iA(e){const{inputs:t,attrs:n,backend:r}=e,{dim:s}=n,{input:i}=t,a=i.shape.length,o=i.shape.slice();let u=s;return s<0&&(f(-(a+1)<=s,(()=>`Axis must be in the interval [${-(a+1)}, ${a}]`)),u=a+s+1),o.splice(u,0,1),ES({inputs:{x:i},backend:r,attrs:{shape:o}})}const aA={kernelName:tt,backendName:"webgl",kernelFunc:iA},oA="return exp(x) - 1.0;",uA=xS({opSnippet:oA,packedOpSnippet:oA,cpuKernelImpl:sN}),lA={kernelName:nt,backendName:"webgl",kernelFunc:uA};class cA{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${r}.0`:"1.0";let a;if("real"===e)a="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);a="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${a}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function hA(e,t,n){const r=n.texData.get(e.dataId),s=x(e.shape),i=e.shape[e.shape.length-1],a=ES({inputs:{x:e},backend:n,attrs:{shape:[s/i,i]}}),o=a.shape,u=new cA("real",o,t),l=new cA("imag",o,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(u,c,"float32"),d=n.runWebGLProgram(l,c,"float32"),p=cS({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=ES({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(p),f}const dA={kernelName:rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return hA(r,!1,n)}};class pA{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function fA(e){const{backend:t,attrs:n}=e,{shape:r,value:s}=n;let{dtype:i}=n;if(i=i||_(s),"string"===i){const e=S(i,x(r));return e.fill(s),t.makeTensorInfo(r,i,e)}{const e=new pA(r,s),n=[[s]];return t.runWebGLProgram(e,[],i,n)}}const mA={kernelName:st,backendName:"webgl",kernelFunc:fA};class gA{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const bA={kernelName:it,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,s=new gA(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}},xA="return floor(x);",yA=xS({opSnippet:xA,packedOpSnippet:xA,cpuKernelImpl:iN}),wA={kernelName:at,backendName:"webgl",kernelFunc:yA},vA=yS({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),kA={kernelName:ot,backendName:"webgl",kernelFunc:vA};class IA{constructor(e){this.variableNames=["A"];const t=fE(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class CA{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=fE(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const DA={kernelName:"FromPixels",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:s}=t;const{numChannels:i}=r,a="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[u,l]=a?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=[l,u],h=[l,u,i];if(o||a){const e=X().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=EA&&e===NA||(NA=e,EA=document.createElement("canvas").getContext("2d",{willReadFrequently:NA})),EA.canvas.width=u,EA.canvas.height=l,EA.drawImage(s,0,0,u,l),s=EA.canvas}const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=LD.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),s);const p=X().getBool("WEBGL_PACK")?new CA(h):new IA(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}};let EA,NA=X().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const SA={kernelName:ir,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i,bias:a,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r,m=pa(c),g=sa(s.shape,i.shape,u,h,l,d,!1,m);let b;const x=[],y=null!=a,w=null!=o,v="leakyrelu"===p,k=()=>{const e=[s,i],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=ES({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return x.push(t),t}return e};if(y&&e.push(t(a,c)),w&&e.push(t(o,c)),v){const t=n.makeTensorInfo([],"float32",Ar(f,"float32"));e.push(t),x.push(t)}return e};if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(g.strideWidth<=2&&"channelsLast"===m&&X().getBool("WEBGL_EXP_CONV")){const e=p?wS(p,!0):null,t=new oT(g,y,e,w,v),r=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],s=k();b=n.runWebGLProgram(t,s,"float32",r)}else if(X().getBool("WEBGL_CONV_IM2COL"))b=hT({x:s,filter:i,convInfo:g,backend:n,bias:a,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const e=p?wS(p,!1):null,t=new iT(g,y,e,w,v),r=k();b=n.runWebGLProgram(t,r,"float32")}else b=cT({x:s,filter:i,convInfo:g,backend:n,bias:a,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const I=ES({inputs:{x:b},backend:n,attrs:{shape:g.outShape}});return x.push(b),x.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}},$A={kernelName:ar,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i,bias:a,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=r,m=[];let g=c;null==g&&(g=[1,1]),f(da(u,g),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${g}'`));const b=sa(s.shape,i.shape,u,g,l,h,!0),x=X().getBool("WEBGL_PACK_DEPTHWISECONV")&&b.strideWidth<=2&&b.outChannels/b.inChannels==1,y=d?wS(d,x):null,w=[s,i],v=null!=a,k=null!=o,I="leakyrelu"===d;if(v&&w.push(a),k&&w.push(o),I){const e=n.makeTensorInfo([],"float32",Ar(p,"float32"));w.push(e),m.push(e)}let C;C=x?new zT(b,v,y,k,I):new LT(b,v,y,k,I);const D=[[b.padInfo.top,b.padInfo.left],[b.strideHeight,b.strideWidth],[b.dilationHeight,b.dilationWidth],[b.inHeight,b.inWidth]],E=n.runWebGLProgram(C,w,"float32",D);return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),E}};class TA{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;const s=$E(n.length);let i="\n    int index;";for(let e=0;e<this.sliceDim;e++)i+=`\n          index = round(getIndices(coords[0], ${e}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[e]};\n          flattenIndex += index * ${this.strides[e]};`;this.userCode=`\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${i}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const AA={kernelName:ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,i=s.shape,a=i[i.length-1],o=x(r.shape),[u,l,c,h]=Ll(r,s),d=ES({inputs:{x:s},backend:n,attrs:{shape:[l,a]}}),p=ES({inputs:{x:r},backend:n,attrs:{shape:[x(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.readSync(s.dataId),t=n.bufferSync(r),i=aN(e,t,r.dtype,l,a,c,h,r.shape,o);return n.makeTensorInfo(u,r.dtype,i.values)}const f=new TA(a,h,[l,c],r.shape),m=n.runWebGLProgram(f,[p,d],p.dtype),g=ES({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),g}};class FA{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=$E(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("index"):r.push(`${n[t]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function RA(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:i}=t,{axis:a,batchDims:o}=r,u=D(a,s.shape)[0];if(X().get("DEBUG")){const e=n.readSync(i.dataId),t=s.shape[u];for(let n=0;n<e.length;++n){const r=e[n];f(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}const l=Ec(s,i,u,o),c=x(i.shape),h=[],d=ES({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),p=ES({inputs:{x:i},backend:n,attrs:{shape:[l.batchSize,c/l.batchSize]}});h.push(d),h.push(p);const m=[l.batchSize,l.outerSize,c/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([s,i])||"string"===s.dtype){const e=n.bufferSync(p),t=n.bufferSync(d),r=oN(t,e,m);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l.outputShape,r.dtype,r.values)}const g=new FA(d.shape,m),b=n.runWebGLProgram(g,[d,p],d.dtype);h.push(b);const y=ES({inputs:{x:b},backend:n,attrs:{shape:l.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}const _A={kernelName:lt,backendName:"webgl",kernelFunc:RA},OA=yS({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:uN,dtype:"bool"}),MA={kernelName:ht,backendName:"webgl",kernelFunc:OA},BA=yS({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:lN}),LA={kernelName:dt,backendName:"webgl",kernelFunc:BA},zA={kernelName:ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return hA(r,!0,n)}},PA=xS({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),WA={kernelName:gt,backendName:"webgl",kernelFunc:PA},UA=xS({opSnippet:"return float(isinf(x));",dtype:"bool"}),VA={kernelName:bt,backendName:"webgl",kernelFunc:UA},GA=xS({opSnippet:"return float(isnan(x));",dtype:"bool"}),HA={kernelName:xt,backendName:"webgl",kernelFunc:GA},jA=yS({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:cN,dtype:"bool"}),qA={kernelName:wt,backendName:"webgl",kernelFunc:jA},KA=yS({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:hN,dtype:"bool"}),XA={kernelName:vt,backendName:"webgl",kernelFunc:KA},YA={kernelName:kt,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:i}=n,a=dN(r,s,i);return t.makeTensorInfo([a.length],"float32",a)}},ZA=xS({opSnippet:"if (isnan(x)) return x;\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:pN}),JA={kernelName:It,backendName:"webgl",kernelFunc:ZA},QA=xS({opSnippet:"if (isnan(x)) return x;\n  return log(1.0 + x);\n"}),eF={kernelName:Ct,backendName:"webgl",kernelFunc:QA},tF=yS({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),nF={kernelName:Dt,backendName:"webgl",kernelFunc:tF},rF=xS({opSnippet:"return float(!(x >= 1.0));"}),sF={kernelName:Et,backendName:"webgl",kernelFunc:rF},iF=yS({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),aF={kernelName:Nt,backendName:"webgl",kernelFunc:iF};class oF{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[];const i=t,a=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${i}; j <= ${i}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${a}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class uF{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=t,a=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${i};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${i}; j <= ${i}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const lF={kernelName:St,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:i,bias:a,alpha:o,beta:u}=r,l=X().getBool("WEBGL_PACK_NORMALIZATION")?new uF(s.shape,i,a,o,u):new oF(s.shape,i,a,o,u);return n.runWebGLProgram(l,[s],s.dtype)}};class cF{constructor(e,t,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const hF={kernelName:$t,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s,y:i,dy:a}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r,h=new cF(s.shape,o,u,l,c);return n.runWebGLProgram(h,[s,i,a],s.dtype)}};function dF(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:i,keepDims:a}=r,o=s.shape.length,u=D(i,s.shape);let l=u;const c=yo(l,o),h=null!=c,d=n.shouldExecuteOnCPU([s]);let p=s;if(h){if(d){const e=n.texData.get(p.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=s.shape[c[e]];const r=WN(e,s.shape,s.dtype,c,t);p=n.makeTensorInfo(t,s.dtype),n.texData.get(p.dataId).values=r}else p=RS(s,c,n);l=vo(l.length,o)}xo("max",l,o);const[f,m]=go(p.shape,l);let g,b=f;if(a&&(b=bo(f,u)),d){const e=n.texData.get(p.dataId).values,t=fN(e,x(m),b,s.dtype);g=n.makeTensorInfo(b,s.dtype),n.texData.get(g.dataId).values=t}else g=function(e,t,n,r){const s=x(t),i=ES({inputs:{x:e},attrs:{shape:[x(e.shape)/s,s]},backend:r}),a=TS(i,e.dtype,"max",r),o=ES({inputs:{x:a},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(a),o}(p,m,b,n);return h&&n.disposeIntermediateTensorInfo(p),g}const pF={kernelName:Tt,backendName:"webgl",kernelFunc:dF},fF=yS({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:mN}),mF={kernelName:At,backendName:"webgl",kernelFunc:fF},gF={kernelName:Ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;dE(s,"maxPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:u}=r;f(da(a,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const l=na(s.shape,i,a,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&y(l.inShape,l.outShape))return uS({inputs:{x:s},backend:n});const c=new b$(l,"max",!1);return n.runWebGLProgram(c,[s],s.dtype)}},bF={kernelName:_t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:i,strides:a,pad:o,dataFormat:u,dimRoundingMode:l}=r,c=ra(s.shape,i,a,[1,1,1],o,l,u),h=new x$(c,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}};class xF{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,s=e.effectiveFilterHeight,i=e.effectiveFilterWidth,a=s-1-e.padInfo.top,o=i-1-e.padInfo.left,u=s*i-1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${i} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class yF{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.dilationDepth,i=e.dilationHeight,a=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=u-1-e.padInfo.top,d=l-1-e.padInfo.left,p=o*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${i}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${a}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const wF={kernelName:Ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,a=i,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,h=ra(a.shape,o,u,[1,1,1],l,c),d=new x$(h,"max",!0),p=n.runWebGLProgram(d,[a],a.dtype),f=new yF(h),m=n.runWebGLProgram(f,[s,p],a.dtype);return n.disposeIntermediateTensorInfo(p),m}},vF={kernelName:Rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i,output:a}=t,o=i;dE([i,a],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,d=na(o.shape,u,l,1,c,h),p=new b$(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new xF(d),g=n.runWebGLProgram(m,[s,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},kF={kernelName:Mt,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:i,pad:a,includeBatchInIndex:o}=t,u=n;f(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const l=[1,1];f(da(i,l),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`));const c=na(r.shape,s,i,l,a),[h,d]=function(e,t,n,r){let s=new b$(n,"max",!1);const i=r.runWebGLProgram(s,[e],"float32");return s=new b$(n,"max",!0,!0,t),[i,r.runWebGLProgram(s,[e],"float32")]}(r,o,c,u);return[h,d]}},IF={kernelName:Bt,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:s,axis:i}=t,a=n,o=r.shape.length,u=D(i,r.shape);let l=u;const c=yo(l,o),h=null!=c,d=a.shouldExecuteOnCPU([r]),p=[];let f=r;if(h){if(d){const e=a.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const n=WN(e,r.shape,r.dtype,c,t);f=a.makeTensorInfo(t,r.dtype),a.texData.get(f.dataId).values=n}else f=RS(r,c,a);p.push(f),l=vo(l.length,o)}xo("sum",l,o);const[m,g]=go(f.shape,l);let b=m;s&&(b=bo(m,u));const y=function(e,t,n,r){const s=x(t),i=ES({inputs:{x:e},attrs:{shape:[x(e.shape)/s,s]},backend:r}),a=TS(i,"float32","mean",r),o=ES({inputs:{x:a},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(a),o}(f,g,b,a);for(const e of p)a.disposeIntermediateTensorInfo(e);return y}},CF={kernelName:Lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r,o=s.shape.length,u=D(i,s.shape);let l=u;const c=yo(l,o);let h=s;null!=c&&(h=MS({inputs:{x:s},backend:n,attrs:{perm:c}}),l=vo(l.length,s.shape.length)),xo("min",l,o);const[d,p]=go(h.shape,l),f=ES({inputs:{x:h},backend:n,attrs:{shape:[-1,x(p)]}}),m=TS(f,f.dtype,"min",n);let g;return g=ES(a?{inputs:{x:m},backend:n,attrs:{shape:bo(d,u)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},DF=yS({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:gN}),EF={kernelName:zt,backendName:"webgl",kernelFunc:DF};class NF{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=$E(r),i=t.map((e=>e[0])).join(","),a=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${i});\n      ${s} end = ${s}(${a});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${i};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class SF{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=$E(r),i=t.map((e=>e[0])).join(","),a=t.map(((t,n)=>t[0]+e[n])).join(","),o=GN("rc",r),u=GN("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===r){const e=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${i});\n      const ${s} end = ${s}(${a});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const $F={kernelName:Pt,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:s,mode:i}=n,a=X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new SF(r.shape,s,i):new NF(r.shape,s,i);return t.runWebGLProgram(a,[r],r.dtype)}},TF=yS({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n"}),AF={kernelName:Wt,backendName:"webgl",kernelFunc:TF};class FF{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const RF=yS({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),_F={kernelName:Ke,backendName:"webgl",kernelFunc:RF},OF="return a - b;",MF=yS({opSnippet:OF,packedOpSnippet:OF,supportsComplex:!0,cpuKernelImpl:LN}),BF={kernelName:Hn,backendName:"webgl",kernelFunc:MF};function LF(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:i}=r,a=D([i],s.shape),o=dF({inputs:{x:s},backend:n,attrs:{reductionIndices:a,keepDims:!1}}),u=bo(o.shape,a),l=ES({inputs:{x:o},backend:n,attrs:{shape:u}}),c=MF({inputs:{a:s,b:l},backend:n}),h=rA({inputs:{x:c},backend:n}),d=_S({inputs:{x:h},backend:n,attrs:{axis:a,keepDims:!1}}),p=ES({inputs:{x:d},backend:n,attrs:{shape:u}}),f=RF({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const zF={kernelName:Rn,backendName:"webgl",kernelFunc:LF},PF={kernelName:Ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:i,seed:a,normalized:o}=r,u=o?s:LF({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),l=u.shape[0],c=u.shape[1],h=new FF(l,c,i),d=[[a]],p=n.runWebGLProgram(h,[u],"int32",d);return o||n.disposeIntermediateTensorInfo(u),p}},WF={kernelName:Gt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,s]=xN(e.values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,t)}let s;return s=X().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new eS(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new ZN(r.shape,"if (isnan(x)) return x;\n  return -x;\n"),n.runWebGLProgram(s,[r],r.dtype)}},UF=Mu,VF={kernelName:jt,backendName:"webgl",kernelFunc:function(e){or("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:u}=r,l=n.readSync(s.dataId),c=n.readSync(i.dataId),{selectedIndices:h}=UF(l,c,a,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},GF=Bu,HF={kernelName:qt,backendName:"webgl",kernelFunc:function(e){or("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r,c=n.readSync(s.dataId),h=n.readSync(i.dataId),{selectedIndices:d,validOutputs:p}=GF(c,h,a,o,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},jF=Lu,qF={kernelName:Kt,backendName:"webgl",kernelFunc:function(e){or("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r,c=n.readSync(s.dataId),h=n.readSync(i.dataId),d=a,p=o,f=u,m=l,{selectedIndices:g,selectedScores:b}=jF(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};class KF{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const XF={kernelName:Yt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:i,depth:a,onValue:o,offValue:u}=r,l=x(s.shape),c=new KF(l,a,o,u),h=ES({inputs:{x:s},backend:n,attrs:{shape:[l]}}),d=n.runWebGLProgram(c,[h],i);n.disposeIntermediateTensorInfo(h);const p=ES({inputs:{x:d},backend:n,attrs:{shape:[...s.shape,a]}});return n.disposeIntermediateTensorInfo(d),p}};function YF(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=z$({inputs:{input:r},backend:n}),t=YF({inputs:{x:e},backend:n}),s=eT({inputs:{input:r},backend:n}),i=YF({inputs:{x:s},backend:n}),a=cS({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),a}return fA({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const ZF={kernelName:tr,backendName:"webgl",kernelFunc:YF},JF={kernelName:Xt,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const t=z$({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),i=eT({inputs:{input:s},backend:r}),a=YF({inputs:{x:i},backend:r}),o=cS({inputs:{real:n,imag:a},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(a),o}return fA({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}},QF={kernelName:Zt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return iA({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const i=t[0].shape,a=t[0].dtype;t.forEach((e=>{m(i,e.shape,"All tensors passed to stack must have matching shapes"),f(a===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=rT({inputs:t.map((e=>{const t=iA({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}};class eR{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=$E(r),i=t.map((e=>e[0])).join(","),a=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${i});\n      ${s} end = ${s}(${a});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${i};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class tR{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=$E(r),i=t.map((e=>e[0])).join(","),a=t.map(((t,n)=>t[0]+e[n])).join(","),o=GN("rc",r),u=GN("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h=[`${s} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${l}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let e=0,t=1===r?2:4;e<t;e++)p+=`\n        ${h[e]}\n        if (${d}) {\n          result[${e}] = float(value);\n        } else {\n          ${s} source = rc - start;\n          result[${e}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${i});\n      const ${s} end = ${s}(${a});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const nR=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:i,constantValue:a}=r;if(0===x(s.shape)){const e=i.map(((e,t)=>e[0]+s.shape[t]+e[1]));return fA({backend:n,attrs:{shape:e,value:a,dtype:s.dtype}})}const o=X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new tR(s.shape,i,a):new eR(s.shape,i,a),u=[[a]];return n.runWebGLProgram(o,[s],s.dtype,u)},rR={kernelName:Jt,backendName:"webgl",kernelFunc:nR},sR=yS({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n"}),iR={kernelName:Qt,backendName:"webgl",kernelFunc:sR},aR={kernelName:tn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r,o=s.shape.length,u=[],l=D(i,s.shape);let c=l;const h=yo(c,o);let d,p=s;if(null!=h&&(p=MS({inputs:{x:s},backend:n,attrs:{perm:h}}),c=vo(c.length,o),u.push(p)),xo("prod",c,o),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:r,outDtype:s}=wN(p.shape,p.dtype,e,c);d=n.makeTensorInfo(r,s,t)}else{const[e,t]=go(p.shape,c),r=x(t),i=ES({inputs:{x:p},backend:n,attrs:{shape:[-1,r]}}),a=TS(i,ss(s.dtype),"prod",n);d=ES({inputs:{x:a},backend:n,attrs:{shape:e}}),u.push(i),u.push(a)}if(a){u.push(d);const e=bo(d.shape,l);d=ES({inputs:{x:d},backend:n,attrs:{shape:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},oR={kernelName:nn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:s,paramsDenseValues:i,indices:a}=t,{outputRaggedRank:o}=r,u=s.map((e=>n.readSync(e.dataId))),l=s.map((e=>e.shape)),c=n.readSync(i.dataId),h=n.readSync(a.dataId),[d,p,f]=vN(u,l,c,i.shape,i.dtype,h,a.shape,o),m=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,i.dtype,p);return m.concat([g])}},uR={kernelName:rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:s,deltas:i}=t,a=n.readSync(r.dataId),o=n.readSync(s.dataId),u=n.readSync(i.dataId),[l,c]=kN(a,r.shape,r.dtype,o,s.shape,u,i.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([c.length],r.dtype,c)]}},lR={kernelName:sn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:s,values:i,defaultValue:a,rowPartitionTensors:o}=t,{rowPartitionTypes:u}=r,l=n.readSync(s.dataId),c=n.readSync(i.dataId),h=n.readSync(a.dataId),d=o.map((e=>n.readSync(e.dataId))),p=o.map((e=>e.shape)),[f,m]=IN(l,s.shape,c,i.shape,i.dtype,h,a.shape,d,p,u);return n.makeTensorInfo(f,i.dtype,m)}},cR=e=>{const{backend:t,attrs:n}=e,{start:r,stop:s,step:i,dtype:a}=n,o=CN(r,s,i,a);return t.makeTensorInfo([o.length],a,o)},hR={kernelName:an,backendName:"webgl",kernelFunc:cR},dR=xS({opSnippet:"return 1.0 / x;"}),pR={kernelName:un,backendName:"webgl",kernelFunc:dR},fR=xS({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),mR={kernelName:ln,backendName:"webgl",kernelFunc:fR},gR=xS({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),bR={kernelName:mn,backendName:"webgl",kernelFunc:gR};class xR{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[i,a,o,u]=e;this.outputShape=[i,t,n,u];const l=[r&&t>1?a-1:a,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class yR{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,o,u]=e;this.outputShape=[i,t,n,u];const l=[r&&t>1?a-1:a,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const wR={kernelName:pn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:a,size:o}=r,[u,l]=o,c=X().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new yR(s.shape,u,l,i,a):new xR(s.shape,u,l,i,a);return n.runWebGLProgram(c,[s],"float32")}};class vR{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,i,a]=e,o=[n&&i>1?r-1:r,n&&a>1?s-1:s],u=[n&&i>1?i-1:i,n&&a>1?a-1:a],l=o[0]/u[0],c=o[1]/u[1],h=1/l,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const kR={kernelName:fn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:i}=t,{alignCorners:a}=r,o=new vR(i.shape,s.shape,a);return n.runWebGLProgram(o,[i],i.dtype)}};class IR{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[i,a,o,u]=e;this.outputShape=[i,t,n,u];const l=[r&&t>1?a-1:a,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class CR{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,o,u]=e;this.outputShape=[i,t,n,u];const l=[r&&t>1?a-1:a,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const DR={kernelName:hn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:a,size:o}=r,[u,l]=o,c=X().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new CR(s.shape,u,l,i,a):new IR(s.shape,u,l,i,a);return n.runWebGLProgram(c,[s],s.dtype)}};class ER{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,i,a]=e,o=[n&&i>1?r-1:r,n&&a>1?s-1:s],u=[n&&i>1?i-1:i,n&&a>1?a-1:a],l=o[0]/u[0],c=o[1]/u[1],h=1/l,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const NR={kernelName:dn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:i}=t,{alignCorners:a}=r,o=new ER(i.shape,s.shape,a);return n.runWebGLProgram(o,[i],i.dtype)}};class SR{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),s=$E(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class $R{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=GN("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,i=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,a=$E(n);function o(n){const r=e.map(((r,s)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${a} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${s}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${i}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const TR={kernelName:gn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:i}=r,a=s.shape.length,o=D(i,s.shape);if(0===a)return uS({inputs:{x:s},backend:n});const u=X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new $R(s.shape,o):new SR(s.shape,o);return n.runWebGLProgram(u,[s],s.dtype)}};class AR{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let s="";s="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${s}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const FR={kernelName:rr,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:i,center:a}=t,o=n,u=new AR(r.shape,i),[l,c]=Fl(a,r.shape[1],r.shape[2]),h=[[l,c,Math.sin(s),Math.cos(s)]];return o.runWebGLProgram(u,[r],r.dtype,h)}},RR=xS({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),_R={kernelName:bn,backendName:"webgl",kernelFunc:RR},OR=xS({opSnippet:"return inversesqrt(x);",cpuKernelImpl:DN}),MR={kernelName:xn,backendName:"webgl",kernelFunc:OR};class BR{constructor(e,t,n,r,s,i,a=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const o=$E(s.length),u=$E(i.length);let l="";1===n?l="i":2===n&&(l="i, j");const c=`getIndices(${l})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const d=`getUpdates(${h})`,p=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${s});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const LR={kernelName:yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:i}=t,{shape:a}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=Wl(0,s,a),d=[h/l,l];if(0===h)return n.makeTensorInfo(a,s.dtype);const p=ES({inputs:{x:s},backend:n,attrs:{shape:[u,o]}}),f=ES({inputs:{x:i},backend:n,attrs:{shape:[u,l]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new BR(u,o,p.shape.length,f.shape.length,c,d),b=n.runWebGLProgram(g,[f,p,m],f.dtype),x=ES({inputs:{x:b},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(m),x}};class zR{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const s=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=2===X().getNumber("WEBGL_VERSION")?"while (left < right) {":s,a="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${i}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${a} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const PR={kernelName:wn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:i}=t,{side:a}=r,o=new zR(s.shape[0],s.shape[1],i.shape[1],a),u=[[s.shape[1]]];return n.runWebGLProgram(o,[s,i],"int32",u)}};class WR{constructor(e,t,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],a=[];for(let r=0;r<t.length;r++)a.push(`${n[r]}`),r<e&&i.push(`${n[r]}`);r=i.join(),s=a.join()}const i=$E(n);this.userCode=`\n      void main() {\n        ${i} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}const UR={kernelName:vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:i}=t,a=new WR(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(a,[r,s,i],rs(s.dtype,i.dtype))}},VR=xS({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Ul};\n  float scale = ${Vl};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),GR={kernelName:kn,backendName:"webgl",kernelFunc:VR},HR=xS({opSnippet:"if (isnan(x)) return x;\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:NN}),jR={kernelName:Nn,backendName:"webgl",kernelFunc:HR},qR=xS({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),KR={kernelName:En,backendName:"webgl",kernelFunc:qR},XR=xS({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),YR={kernelName:Cn,backendName:"webgl",kernelFunc:XR},ZR=xS({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),JR={kernelName:Dn,backendName:"webgl",kernelFunc:ZR},QR=xS({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),e_={kernelName:Sn,backendName:"webgl",kernelFunc:QR},t_={kernelName:An,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:i,paddings:a}=r;f(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=i.reduce(((e,t)=>e*t)),u=[[0,0]];u.push(...a);for(let e=1+i.length;e<s.shape.length;++e)u.push([0,0]);const l=[],c=nR({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),h=Rl(c.shape,i,o,!1),d=_l(h.length,i.length,!1),p=Ol(c.shape,i,o,!1),m=ES({inputs:{x:c},backend:n,attrs:{shape:h}}),g=MS({inputs:{x:m},backend:n,attrs:{perm:d}}),b=ES({inputs:{x:g},backend:n,attrs:{shape:p}});return l.push(c),l.push(m),l.push(g),l.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},n_={kernelName:_n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:i,defaultValue:a}=t;if(1!==i.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${i.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n         ${s.shape}`);if(0!==a.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${a.shape}`);const o=n.readSync(r.dataId),u=n.readSync(s.dataId),l=n.readSync(i.dataId),c=n.readSync(a.dataId)[0],[h,d,p,f,m]=TN(o,r.shape,r.dtype,u,s.dtype,l,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},r_={kernelName:On,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:i}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(1!==i.shape.length)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const a=Array.from(n.readSync(s.dataId)),o=n.readSync(r.dataId),u=Array.from(n.readSync(i.dataId)),[l,c,h]=AN(o,r.shape,r.dtype,a,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],i.dtype,new Int32Array(h))]}},s_={kernelName:Mn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:i}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${s.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${i.shape}`);const a=n.readSync(r.dataId),o=n.readSync(s.dataId),u=n.readSync(i.dataId),[l,c]=FN(a,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}},i_={kernelName:Bn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:i}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${s.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${i.shape}`);const a=n.readSync(r.dataId),o=n.readSync(s.dataId),u=n.readSync(i.dataId),[l,c]=FN(a,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}},a_={kernelName:Ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:i,defaultValue:a}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:d}=Wl(0,s,o);if("string"===i.dtype){const e=n.bufferSync(s),t=n.bufferSync(i),r=Or(n.readSync(a.dataId)[0]),p=EN(e,t,o,d,c,l,u,h,r,!1);return n.makeTensorInfo(o,p.dtype,p.values)}const p=new BR(l,u,s.shape.length,i.shape.length,h,[d,1],!1),f=n.runWebGLProgram(p,[i,s,a],i.dtype),m=ES({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),m}},o_={kernelName:Fn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:i,axis:a}=r,o=D(a,s.shape)[0],u=hc(s,i,o),l=s.shape.length,c=new Array(l).fill(0),h=s.shape.slice();return u.map((e=>{const t=[...h];t[o]=e;const r=F$({inputs:{x:s},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r}))}},u_="return sqrt(x);",l_=xS({opSnippet:u_,packedOpSnippet:u_,cpuKernelImpl:RN}),c_={kernelName:$n,backendName:"webgl",kernelFunc:l_},h_={kernelName:Pn,backendName:"webgl",kernelFunc:xS({opSnippet:"return x * x;"})},d_="return (a - b) * (a - b);",p_=yS({opSnippet:d_,packedOpSnippet:d_}),f_={kernelName:zn,backendName:"webgl",kernelFunc:p_},m_={kernelName:nr,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,s=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,i=new ZN(r.shape,s);return n.runWebGLProgram(i,[r],r.dtype)}};class g_{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=$E(n.length),i=$E(n.length);let a="";if(1===r)a="coords * strides + begin";else{let e=0;a=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${e});\n      ${s} strides = ${s}(${t});\n\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}}const b_={kernelName:Wn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:i,end:a,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r,{finalShapeSparse:p,finalShape:m,isIdentity:g,sliceDim0:b,isSimpleSlice:x,begin:y,end:w,strides:v}=Mi(s.shape,i,a,o,u,l,c,h,d);let k;if(g)k=ES({inputs:{x:s},backend:n,attrs:{shape:m}});else if(b||x){f(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=Ii(y,w,v),t=F$({inputs:{x:s},backend:n,attrs:{begin:y,size:e}});k=ES({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else if(n.shouldExecuteOnCPU([s])){const e=n.readSync(s.dataId),t=oi(s.shape,s.dtype,e),r=_N(p,t,v,y);k=n.makeTensorInfo(m,s.dtype,r.values)}else{const e=new g_(y,v,p);k=n.runWebGLProgram(e,[s],s.dtype)}const I=ES({inputs:{x:k},backend:n,attrs:{shape:m}});return n.disposeIntermediateTensorInfo(k),I}},x_={kernelName:Un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:i,leftPad:a,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=t,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,m]=ON(d,p,s,i,a,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},y_={kernelName:Vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:i,delimiter:a}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(1!==i.shape.length)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(0!==a.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const o=n.readSync(i.dataId),u=n.readSync(a.dataId)[0],[l,c,h]=MN(o,u,s),d=c.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},w_={kernelName:Gn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:i}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const a=n.readSync(i.dataId),o=BN(a,s);return n.makeTensorInfo(i.shape,"int32",o)}},v_=xS({opSnippet:"return tan(x);"}),k_={kernelName:jn,backendName:"webgl",kernelFunc:v_},I_=xS({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),C_={kernelName:qn,backendName:"webgl",kernelFunc:I_};class D_{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=$E(this.rank),s=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function E_(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:i}=r;if("string"===s.dtype||s.shape.length>5){const e=n.readSync(s.dataId),t="string"===s.dtype?e.map((e=>Or(e))):e,r=oi(s.shape,s.dtype,t),a=zN(r,i);return n.makeTensorInfo(a.shape,a.dtype,a.values)}const a=new D_(s.shape,i);return n.runWebGLProgram(a,[s],s.dtype)}const N_={kernelName:Kn,backendName:"webgl",kernelFunc:E_};class S_{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class $_{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function T_(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function A_(e){let t=1;for(;t<e;)t*=2;return t}const F_={kernelName:Xn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:i,sorted:a}=r,o=X().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=X().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=s.shape,c=l[l.length-1];if(n.shouldExecuteOnCPU([s])||c<o||i>u){const e=n.readSync(s.dataId),[t,r]=PN(e,l,s.dtype,i,a);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===i)return l[l.length-1]=0,[n.makeTensorInfo(l,s.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(1===c)return[s,fA({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const h=n.texData.get(s.dataId),d=null!==h&&h.isPacked,p=d?n.unpackTensor(s):s,f=x(l)/c,m=ES({inputs:{x:p},attrs:{shape:[f,c]},backend:n});d&&T_(n,p);const g=A_(i),b=A_(c);let y=null;const w=()=>null===y?[m,m]:[m,y],v=(e,t,r)=>{const s=w(),i=new S_(r),a=[[c],[null===y?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=y;y=n.runWebGLProgram(i,s,"int32",a),T_(n,o)};for(let e=1;e<g;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)v(t,n,[f,b])}for(let e=b;e>g;e/=2){const t=w(),r=new $_([f,e/2]),s=[[c],[null===y?1:0],[g]],i=y;y=n.runWebGLProgram(r,t,"int32",s),T_(n,i);const a=g/2,o=2*a;for(let e=a;e>=1;e/=2)v(o,e,y.shape)}let k=y;y=F$({inputs:{x:y},backend:n,attrs:{begin:0,size:[f,i]}}),T_(n,k);let I=RA({inputs:{x:m,indices:y},backend:n,attrs:{axis:1,batchDims:1}});T_(n,m);const C=l.slice(0,-1);C.push(i),k=y,y=ES({inputs:{x:y},attrs:{shape:C},backend:n}),T_(n,k);const D=I;return I=ES({inputs:{x:I},attrs:{shape:C},backend:n}),T_(n,D),[I,y]}};class R_{constructor(e,t,n,r,s,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const a="nearest"===n?1:2;let o;switch(r){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${s});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${s});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${a} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const __={kernelName:Yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,transforms:i}=t,{interpolation:a,fillMode:o,fillValue:u,outputShape:l}=r,[c,h,d,p]=s.shape,[f,m]=null!=l?l:[h,d],g=new R_(h,d,a,o,u,[c,f,m,p]);return n.runWebGLProgram(g,[s,i],"float32")}},O_={kernelName:Jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:i}=t;dE(i,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=r.readSync(i.dataId),{outputValues:o,outputShape:u,indices:l}=UN(a,s,i.shape,i.dtype);return[r.makeTensorInfo(u,i.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}},M_={kernelName:Qn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:i}=r;i<0&&(i+=s.shape.length);const a=s,o=a.shape.length,u=s.shape[i],l=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==i&&(l[c++]=a.shape[e]);const h=[],d=new Array(o).fill(0),p=a.shape.slice();p[i]=1;const f=new Array(u);for(let e=0;e<f.length;e++){d[i]=e;const t=F$({inputs:{x:a},backend:n,attrs:{begin:d,size:p}}),r=ES({inputs:{x:t},backend:n,attrs:{shape:l}});f[e]=r,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class B_{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,s=e.inSize,i=e.numSegments,a=i*Math.ceil(s/n);this.outputShape=[r,a];const o=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${i})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${i})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}const L_=[zS,WS,VS,HS,KS,ZS,JS,QS,i$,a$,u$,c$,d$,f$,g$,y$,w$,I$,C$,D$,S$,_$,O$,M$,W$,G$,q$,hS,Y$,sT,dT,bT,xT,yT,wT,vT,IT,DT,NT,RT,_T,OT,BT,PT,VT,GT,jT,KT,XT,ZT,JT,eA,nA,sA,aA,lA,dA,mA,bA,wA,kA,DA,SA,$A,AA,_A,MA,LA,lS,zA,tT,WA,VA,HA,fS,qA,XA,YA,JA,eF,nF,sF,aF,lF,hF,pF,mF,gF,bF,wF,vF,kF,IF,CF,EF,$F,AF,PF,DS,WF,VF,HF,qF,L$,XF,JF,QF,rR,iR,bS,aR,oR,uR,lR,hR,P$,_F,pR,mR,bR,NS,wR,kR,DR,NR,TR,FR,_R,MR,LR,PR,UR,GR,jR,KR,YR,JR,R$,zF,e_,t_,n_,r_,s_,i_,a_,o_,c_,h_,f_,m_,b_,x_,y_,w_,BF,OS,k_,C_,N_,F_,__,BS,O_,M_,{kernelName:er,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:i}=t,{numSegments:a}=r,o=s.shape.length,u=[];let l=0;const c=yo([l],o);let h=s;null!=c&&(h=MS({inputs:{x:s},backend:n,attrs:{perm:c}}),u.push(h),l=vo(1,o)[0]);const d=Dc(h.shape,l,a),p=x([h.shape[l]]),f=ES({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});u.push(f);const m=ss(s.dtype),g=(e,t,r,s,i)=>{const a=e.shape[0],o=e.shape[1],l=Cc(o,i),c=new B_({windowSize:l,inSize:o,batchSize:a,numSegments:i},t),h=n.compileAndRun(c,[e,r],s);if(u.push(h),h.shape[1]===i)return h;const d=cR({backend:n,attrs:{start:0,stop:i,step:1,dtype:"float32"}}),p=E_({inputs:{x:d},backend:n,attrs:{reps:[o/l]}});return u.push(d),u.push(p),g(h,t,p,s,i)},b=ES({inputs:{x:g(f,"unsortedSegmentSum",i,m,a)},backend:n,attrs:{shape:d}});let y=b;if(null!=c){u.push(b);const e=wo(c);y=MS({inputs:{x:y},backend:n,attrs:{perm:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},ZF];for(const e of L_)fr(e)},684:function(e,t){var n;!function(r){"use strict";var s=Math.cosh||function(e){return Math.abs(e)<1e-9?1-e:.5*(Math.exp(e)+Math.exp(-e))},i=Math.sinh||function(e){return Math.abs(e)<1e-9?e:.5*(Math.exp(e)-Math.exp(-e))},a=function(){throw SyntaxError("Invalid Param")};function o(e,t){var n=Math.abs(e),r=Math.abs(t);return 0===e?Math.log(r):0===t?Math.log(n):n<3e3&&r<3e3?.5*Math.log(e*e+t*t):(e/=2,t/=2,.5*Math.log(e*e+t*t)+Math.LN2)}function u(e,t){if(!(this instanceof u))return new u(e,t);var n=function(e,t){var n={re:0,im:0};if(null==e)n.re=n.im=0;else if(void 0!==t)n.re=e,n.im=t;else switch(typeof e){case"object":if("im"in e&&"re"in e)n.re=e.re,n.im=e.im;else if("abs"in e&&"arg"in e){if(!Number.isFinite(e.abs)&&Number.isFinite(e.arg))return u.INFINITY;n.re=e.abs*Math.cos(e.arg),n.im=e.abs*Math.sin(e.arg)}else if("r"in e&&"phi"in e){if(!Number.isFinite(e.r)&&Number.isFinite(e.phi))return u.INFINITY;n.re=e.r*Math.cos(e.phi),n.im=e.r*Math.sin(e.phi)}else 2===e.length?(n.re=e[0],n.im=e[1]):a();break;case"string":n.im=n.re=0;var r=e.match(/\d+\.?\d*e[+-]?\d+|\d+\.?\d*|\.\d+|./g),s=1,i=0;null===r&&a();for(var o=0;o<r.length;o++){var l=r[o];" "===l||"\t"===l||"\n"===l||("+"===l?s++:"-"===l?i++:"i"===l||"I"===l?(s+i===0&&a()," "===r[o+1]||isNaN(r[o+1])?n.im+=parseFloat((i%2?"-":"")+"1"):(n.im+=parseFloat((i%2?"-":"")+r[o+1]),o++),s=i=0):((s+i===0||isNaN(l))&&a(),"i"===r[o+1]||"I"===r[o+1]?(n.im+=parseFloat((i%2?"-":"")+l),o++):n.re+=parseFloat((i%2?"-":"")+l),s=i=0))}s+i>0&&a();break;case"number":n.im=0,n.re=e;break;default:a()}return isNaN(n.re)||isNaN(n.im),n}(e,t);this.re=n.re,this.im=n.im}u.prototype={re:0,im:0,sign:function(){var e=this.abs();return new u(this.re/e,this.im/e)},add:function(e,t){var n=new u(e,t);return this.isInfinite()&&n.isInfinite()?u.NAN:this.isInfinite()||n.isInfinite()?u.INFINITY:new u(this.re+n.re,this.im+n.im)},sub:function(e,t){var n=new u(e,t);return this.isInfinite()&&n.isInfinite()?u.NAN:this.isInfinite()||n.isInfinite()?u.INFINITY:new u(this.re-n.re,this.im-n.im)},mul:function(e,t){var n=new u(e,t);return this.isInfinite()&&n.isZero()||this.isZero()&&n.isInfinite()?u.NAN:this.isInfinite()||n.isInfinite()?u.INFINITY:0===n.im&&0===this.im?new u(this.re*n.re,0):new u(this.re*n.re-this.im*n.im,this.re*n.im+this.im*n.re)},div:function(e,t){var n=new u(e,t);if(this.isZero()&&n.isZero()||this.isInfinite()&&n.isInfinite())return u.NAN;if(this.isInfinite()||n.isZero())return u.INFINITY;if(this.isZero()||n.isInfinite())return u.ZERO;e=this.re,t=this.im;var r,s,i=n.re,a=n.im;return 0===a?new u(e/i,t/i):Math.abs(i)<Math.abs(a)?new u((e*(s=i/a)+t)/(r=i*s+a),(t*s-e)/r):new u((e+t*(s=a/i))/(r=a*s+i),(t-e*s)/r)},pow:function(e,t){var n=new u(e,t);if(e=this.re,t=this.im,n.isZero())return u.ONE;if(0===n.im){if(0===t&&e>0)return new u(Math.pow(e,n.re),0);if(0===e)switch((n.re%4+4)%4){case 0:return new u(Math.pow(t,n.re),0);case 1:return new u(0,Math.pow(t,n.re));case 2:return new u(-Math.pow(t,n.re),0);case 3:return new u(0,-Math.pow(t,n.re))}}if(0===e&&0===t&&n.re>0&&n.im>=0)return u.ZERO;var r=Math.atan2(t,e),s=o(e,t);return e=Math.exp(n.re*s-n.im*r),t=n.im*s+n.re*r,new u(e*Math.cos(t),e*Math.sin(t))},sqrt:function(){var e,t,n=this.re,r=this.im,s=this.abs();if(n>=0){if(0===r)return new u(Math.sqrt(n),0);e=.5*Math.sqrt(2*(s+n))}else e=Math.abs(r)/Math.sqrt(2*(s-n));return t=n<=0?.5*Math.sqrt(2*(s-n)):Math.abs(r)/Math.sqrt(2*(s+n)),new u(e,r<0?-t:t)},exp:function(){var e=Math.exp(this.re);return this.im,new u(e*Math.cos(this.im),e*Math.sin(this.im))},expm1:function(){var e=this.re,t=this.im;return new u(Math.expm1(e)*Math.cos(t)+function(e){var t=Math.PI/4;if(-t>e||e>t)return Math.cos(e)-1;var n=e*e;return n*(n*(n*(n*(n*(n*(n*(n/20922789888e3-1/87178291200)+1/479001600)-1/3628800)+1/40320)-1/720)+1/24)-.5)}(t),Math.exp(e)*Math.sin(t))},log:function(){var e=this.re,t=this.im;return new u(o(e,t),Math.atan2(t,e))},abs:function(){return e=this.re,t=this.im,n=Math.abs(e),r=Math.abs(t),n<3e3&&r<3e3?Math.sqrt(n*n+r*r):(n<r?(n=r,r=e/t):r=t/e,n*Math.sqrt(1+r*r));var e,t,n,r},arg:function(){return Math.atan2(this.im,this.re)},sin:function(){var e=this.re,t=this.im;return new u(Math.sin(e)*s(t),Math.cos(e)*i(t))},cos:function(){var e=this.re,t=this.im;return new u(Math.cos(e)*s(t),-Math.sin(e)*i(t))},tan:function(){var e=2*this.re,t=2*this.im,n=Math.cos(e)+s(t);return new u(Math.sin(e)/n,i(t)/n)},cot:function(){var e=2*this.re,t=2*this.im,n=Math.cos(e)-s(t);return new u(-Math.sin(e)/n,i(t)/n)},sec:function(){var e=this.re,t=this.im,n=.5*s(2*t)+.5*Math.cos(2*e);return new u(Math.cos(e)*s(t)/n,Math.sin(e)*i(t)/n)},csc:function(){var e=this.re,t=this.im,n=.5*s(2*t)-.5*Math.cos(2*e);return new u(Math.sin(e)*s(t)/n,-Math.cos(e)*i(t)/n)},asin:function(){var e=this.re,t=this.im,n=new u(t*t-e*e+1,-2*e*t).sqrt(),r=new u(n.re-t,n.im+e).log();return new u(r.im,-r.re)},acos:function(){var e=this.re,t=this.im,n=new u(t*t-e*e+1,-2*e*t).sqrt(),r=new u(n.re-t,n.im+e).log();return new u(Math.PI/2-r.im,r.re)},atan:function(){var e=this.re,t=this.im;if(0===e){if(1===t)return new u(0,1/0);if(-1===t)return new u(0,-1/0)}var n=e*e+(1-t)*(1-t),r=new u((1-t*t-e*e)/n,-2*e/n).log();return new u(-.5*r.im,.5*r.re)},acot:function(){var e=this.re,t=this.im;if(0===t)return new u(Math.atan2(1,e),0);var n=e*e+t*t;return 0!==n?new u(e/n,-t/n).atan():new u(0!==e?e/0:0,0!==t?-t/0:0).atan()},asec:function(){var e=this.re,t=this.im;if(0===e&&0===t)return new u(0,1/0);var n=e*e+t*t;return 0!==n?new u(e/n,-t/n).acos():new u(0!==e?e/0:0,0!==t?-t/0:0).acos()},acsc:function(){var e=this.re,t=this.im;if(0===e&&0===t)return new u(Math.PI/2,1/0);var n=e*e+t*t;return 0!==n?new u(e/n,-t/n).asin():new u(0!==e?e/0:0,0!==t?-t/0:0).asin()},sinh:function(){var e=this.re,t=this.im;return new u(i(e)*Math.cos(t),s(e)*Math.sin(t))},cosh:function(){var e=this.re,t=this.im;return new u(s(e)*Math.cos(t),i(e)*Math.sin(t))},tanh:function(){var e=2*this.re,t=2*this.im,n=s(e)+Math.cos(t);return new u(i(e)/n,Math.sin(t)/n)},coth:function(){var e=2*this.re,t=2*this.im,n=s(e)-Math.cos(t);return new u(i(e)/n,-Math.sin(t)/n)},csch:function(){var e=this.re,t=this.im,n=Math.cos(2*t)-s(2*e);return new u(-2*i(e)*Math.cos(t)/n,2*s(e)*Math.sin(t)/n)},sech:function(){var e=this.re,t=this.im,n=Math.cos(2*t)+s(2*e);return new u(2*s(e)*Math.cos(t)/n,-2*i(e)*Math.sin(t)/n)},asinh:function(){var e=this.im;this.im=-this.re,this.re=e;var t=this.asin();return this.re=-this.im,this.im=e,e=t.re,t.re=-t.im,t.im=e,t},acosh:function(){var e=this.acos();if(e.im<=0){var t=e.re;e.re=-e.im,e.im=t}else t=e.im,e.im=-e.re,e.re=t;return e},atanh:function(){var e=this.re,t=this.im,n=e>1&&0===t,r=1-e,s=1+e,i=r*r+t*t,a=0!==i?new u((s*r-t*t)/i,(t*r+s*t)/i):new u(-1!==e?e/0:0,0!==t?t/0:0),l=a.re;return a.re=o(a.re,a.im)/2,a.im=Math.atan2(a.im,l)/2,n&&(a.im=-a.im),a},acoth:function(){var e=this.re,t=this.im;if(0===e&&0===t)return new u(0,Math.PI/2);var n=e*e+t*t;return 0!==n?new u(e/n,-t/n).atanh():new u(0!==e?e/0:0,0!==t?-t/0:0).atanh()},acsch:function(){var e=this.re,t=this.im;if(0===t)return new u(0!==e?Math.log(e+Math.sqrt(e*e+1)):1/0,0);var n=e*e+t*t;return 0!==n?new u(e/n,-t/n).asinh():new u(0!==e?e/0:0,0!==t?-t/0:0).asinh()},asech:function(){var e=this.re,t=this.im;if(this.isZero())return u.INFINITY;var n=e*e+t*t;return 0!==n?new u(e/n,-t/n).acosh():new u(0!==e?e/0:0,0!==t?-t/0:0).acosh()},inverse:function(){if(this.isZero())return u.INFINITY;if(this.isInfinite())return u.ZERO;var e=this.re,t=this.im,n=e*e+t*t;return new u(e/n,-t/n)},conjugate:function(){return new u(this.re,-this.im)},neg:function(){return new u(-this.re,-this.im)},ceil:function(e){return e=Math.pow(10,e||0),new u(Math.ceil(this.re*e)/e,Math.ceil(this.im*e)/e)},floor:function(e){return e=Math.pow(10,e||0),new u(Math.floor(this.re*e)/e,Math.floor(this.im*e)/e)},round:function(e){return e=Math.pow(10,e||0),new u(Math.round(this.re*e)/e,Math.round(this.im*e)/e)},equals:function(e,t){var n=new u(e,t);return Math.abs(n.re-this.re)<=u.EPSILON&&Math.abs(n.im-this.im)<=u.EPSILON},clone:function(){return new u(this.re,this.im)},toString:function(){var e=this.re,t=this.im,n="";return this.isNaN()?"NaN":this.isInfinite()?"Infinity":(Math.abs(e)<u.EPSILON&&(e=0),Math.abs(t)<u.EPSILON&&(t=0),0===t?n+e:(0!==e?(n+=e,n+=" ",t<0?(t=-t,n+="-"):n+="+",n+=" "):t<0&&(t=-t,n+="-"),1!==t&&(n+=t),n+"i"))},toVector:function(){return[this.re,this.im]},valueOf:function(){return 0===this.im?this.re:null},isNaN:function(){return isNaN(this.re)||isNaN(this.im)},isZero:function(){return 0===this.im&&0===this.re},isFinite:function(){return isFinite(this.re)&&isFinite(this.im)},isInfinite:function(){return!(this.isNaN()||this.isFinite())}},u.ZERO=new u(0,0),u.ONE=new u(1,0),u.I=new u(0,1),u.PI=new u(Math.PI,0),u.E=new u(Math.E,0),u.INFINITY=new u(1/0,1/0),u.NAN=new u(NaN,NaN),u.EPSILON=1e-15,void 0===(n=function(){return u}.apply(t,[]))||(e.exports=n)}()},201:function(e,t){var n;!function(r){"use strict";var s={s:1,n:0,d:1};function i(e,t){if(isNaN(e=parseInt(e,10)))throw c.InvalidParameter;return e*t}function a(e,t){if(0===t)throw c.DivisionByZero;var n=Object.create(c.prototype);n.s=e<0?-1:1;var r=l(e=e<0?-e:e,t);return n.n=e/r,n.d=t/r,n}function o(e){for(var t={},n=e,r=2,s=4;s<=n;){for(;n%r==0;)n/=r,t[r]=(t[r]||0)+1;s+=1+2*r++}return n!==e?n>1&&(t[n]=(t[n]||0)+1):t[e]=(t[e]||0)+1,t}var u=function(e,t){var n,r=0,a=1,o=1,u=0,l=0,h=0,d=1,p=1,f=0,m=1,g=1,b=1,x=1e7;if(null==e);else if(void 0!==t){if(o=(r=e)*(a=t),r%1!=0||a%1!=0)throw c.NonIntegerParameter}else switch(typeof e){case"object":if("d"in e&&"n"in e)r=e.n,a=e.d,"s"in e&&(r*=e.s);else{if(!(0 in e))throw c.InvalidParameter;r=e[0],1 in e&&(a=e[1])}o=r*a;break;case"number":if(e<0&&(o=e,e=-e),e%1==0)r=e;else if(e>0){for(e>=1&&(e/=p=Math.pow(10,Math.floor(1+Math.log(e)/Math.LN10)));m<=x&&b<=x;){if(e===(n=(f+g)/(m+b))){m+b<=x?(r=f+g,a=m+b):b>m?(r=g,a=b):(r=f,a=m);break}e>n?(f+=g,m+=b):(g+=f,b+=m),m>x?(r=g,a=b):(r=f,a=m)}r*=p}else(isNaN(e)||isNaN(t))&&(a=r=NaN);break;case"string":if(null===(m=e.match(/\d+|./g)))throw c.InvalidParameter;if("-"===m[f]?(o=-1,f++):"+"===m[f]&&f++,m.length===f+1?l=i(m[f++],o):"."===m[f+1]||"."===m[f]?("."!==m[f]&&(u=i(m[f++],o)),(1+ ++f===m.length||"("===m[f+1]&&")"===m[f+3]||"'"===m[f+1]&&"'"===m[f+3])&&(l=i(m[f],o),d=Math.pow(10,m[f].length),f++),("("===m[f]&&")"===m[f+2]||"'"===m[f]&&"'"===m[f+2])&&(h=i(m[f+1],o),p=Math.pow(10,m[f+1].length)-1,f+=3)):"/"===m[f+1]||":"===m[f+1]?(l=i(m[f],o),d=i(m[f+2],1),f+=3):"/"===m[f+3]&&" "===m[f+1]&&(u=i(m[f],o),l=i(m[f+2],o),d=i(m[f+4],1),f+=5),m.length<=f){o=r=h+(a=d*p)*u+p*l;break}default:throw c.InvalidParameter}if(0===a)throw c.DivisionByZero;s.s=o<0?-1:1,s.n=Math.abs(r),s.d=Math.abs(a)};function l(e,t){if(!e)return t;if(!t)return e;for(;;){if(!(e%=t))return t;if(!(t%=e))return e}}function c(e,t){if(u(e,t),!(this instanceof c))return a(s.s*s.n,s.d);e=l(s.d,s.n),this.s=s.s,this.n=s.n/e,this.d=s.d/e}c.DivisionByZero=new Error("Division by Zero"),c.InvalidParameter=new Error("Invalid argument"),c.NonIntegerParameter=new Error("Parameters must be integer"),c.prototype={s:1,n:0,d:1,abs:function(){return a(this.n,this.d)},neg:function(){return a(-this.s*this.n,this.d)},add:function(e,t){return u(e,t),a(this.s*this.n*s.d+s.s*this.d*s.n,this.d*s.d)},sub:function(e,t){return u(e,t),a(this.s*this.n*s.d-s.s*this.d*s.n,this.d*s.d)},mul:function(e,t){return u(e,t),a(this.s*s.s*this.n*s.n,this.d*s.d)},div:function(e,t){return u(e,t),a(this.s*s.s*this.n*s.d,this.d*s.n)},clone:function(){return a(this.s*this.n,this.d)},mod:function(e,t){if(isNaN(this.n)||isNaN(this.d))return new c(NaN);if(void 0===e)return a(this.s*this.n%this.d,1);if(u(e,t),0===s.n&&0===this.d)throw c.DivisionByZero;return a(this.s*(s.d*this.n)%(s.n*this.d),s.d*this.d)},gcd:function(e,t){return u(e,t),a(l(s.n,this.n)*l(s.d,this.d),s.d*this.d)},lcm:function(e,t){return u(e,t),0===s.n&&0===this.n?a(0,1):a(s.n*this.n,l(s.n,this.n)*l(s.d,this.d))},ceil:function(e){return e=Math.pow(10,e||0),isNaN(this.n)||isNaN(this.d)?new c(NaN):a(Math.ceil(e*this.s*this.n/this.d),e)},floor:function(e){return e=Math.pow(10,e||0),isNaN(this.n)||isNaN(this.d)?new c(NaN):a(Math.floor(e*this.s*this.n/this.d),e)},round:function(e){return e=Math.pow(10,e||0),isNaN(this.n)||isNaN(this.d)?new c(NaN):a(Math.round(e*this.s*this.n/this.d),e)},inverse:function(){return a(this.s*this.d,this.n)},pow:function(e,t){if(u(e,t),1===s.d)return s.s<0?a(Math.pow(this.s*this.d,s.n),Math.pow(this.n,s.n)):a(Math.pow(this.s*this.n,s.n),Math.pow(this.d,s.n));if(this.s<0)return null;var n=o(this.n),r=o(this.d),i=1,l=1;for(var c in n)if("1"!==c){if("0"===c){i=0;break}if(n[c]*=s.n,n[c]%s.d!=0)return null;n[c]/=s.d,i*=Math.pow(c,n[c])}for(var c in r)if("1"!==c){if(r[c]*=s.n,r[c]%s.d!=0)return null;r[c]/=s.d,l*=Math.pow(c,r[c])}return s.s<0?a(l,i):a(i,l)},equals:function(e,t){return u(e,t),this.s*this.n*s.d==s.s*s.n*this.d},compare:function(e,t){u(e,t);var n=this.s*this.n*s.d-s.s*s.n*this.d;return(0<n)-(n<0)},simplify:function(e){if(isNaN(this.n)||isNaN(this.d))return this;e=e||.001;for(var t=this.abs(),n=t.toContinued(),r=1;r<n.length;r++){for(var s=a(n[r-1],1),i=r-2;i>=0;i--)s=s.inverse().add(n[i]);if(s.sub(t).abs().valueOf()<e)return s.mul(this.s)}return this},divisible:function(e,t){return u(e,t),!(!(s.n*this.d)||this.n*s.d%(s.n*this.d))},valueOf:function(){return this.s*this.n/this.d},toFraction:function(e){var t,n="",r=this.n,s=this.d;return this.s<0&&(n+="-"),1===s?n+=r:(e&&(t=Math.floor(r/s))>0&&(n+=t,n+=" ",r%=s),n+=r,n+="/",n+=s),n},toLatex:function(e){var t,n="",r=this.n,s=this.d;return this.s<0&&(n+="-"),1===s?n+=r:(e&&(t=Math.floor(r/s))>0&&(n+=t,r%=s),n+="\\frac{",n+=r,n+="}{",n+=s,n+="}"),n},toContinued:function(){var e,t=this.n,n=this.d,r=[];if(isNaN(t)||isNaN(n))return r;do{r.push(Math.floor(t/n)),e=t%n,t=n,n=e}while(1!==t);return r},toString:function(e){var t=this.n,n=this.d;if(isNaN(t)||isNaN(n))return"NaN";e=e||15;var r=function(e,t){for(;t%2==0;t/=2);for(;t%5==0;t/=5);if(1===t)return 0;for(var n=10%t,r=1;1!==n;r++)if(n=10*n%t,r>2e3)return 0;return r}(0,n),s=function(e,t,n){for(var r=1,s=function(e,t,n){for(var r=1;t>0;e=e*e%n,t>>=1)1&t&&(r=r*e%n);return r}(10,n,t),i=0;i<300;i++){if(r===s)return i;r=10*r%t,s=10*s%t}return 0}(0,n,r),i=this.s<0?"-":"";if(i+=t/n|0,t%=n,(t*=10)&&(i+="."),r){for(var a=s;a--;)i+=t/n|0,t%=n,t*=10;for(i+="(",a=r;a--;)i+=t/n|0,t%=n,t*=10;i+=")"}else for(a=e;t&&a--;)i+=t/n|0,t%=n,t*=10;return i}},void 0===(n=function(){return c}.apply(t,[]))||(e.exports=n)}()},228:e=>{e.exports=function e(t,n){"use strict";var r,s,i=/(^([+\-]?(?:0|[1-9]\d*)(?:\.\d*)?(?:[eE][+\-]?\d+)?)?$|^0x[0-9a-f]+$|\d+)/gi,a=/(^[ ]*|[ ]*$)/g,o=/(^([\w ]+,?[\w ]+)?[\w ]+,?[\w ]+\d+:\d+(:\d+)?[\w ]?|^\d{1,4}[\/\-]\d{1,4}[\/\-]\d{1,4}|^\w+, \w+ \d+, \d{4})/,u=/^0x[0-9a-f]+$/i,l=/^0/,c=function(t){return e.insensitive&&(""+t).toLowerCase()||""+t},h=c(t).replace(a,"")||"",d=c(n).replace(a,"")||"",p=h.replace(i,"\0$1\0").replace(/\0$/,"").replace(/^\0/,"").split("\0"),f=d.replace(i,"\0$1\0").replace(/\0$/,"").replace(/^\0/,"").split("\0"),m=parseInt(h.match(u),16)||1!==p.length&&h.match(o)&&Date.parse(h),g=parseInt(d.match(u),16)||m&&d.match(o)&&Date.parse(d)||null;if(g){if(m<g)return-1;if(m>g)return 1}for(var b=0,x=Math.max(p.length,f.length);b<x;b++){if(r=!(p[b]||"").match(l)&&parseFloat(p[b])||p[b]||0,s=!(f[b]||"").match(l)&&parseFloat(f[b])||f[b]||0,isNaN(r)!==isNaN(s))return isNaN(r)?1:-1;if(typeof r!=typeof s&&(r+="",s+=""),r<s)return-1;if(r>s)return 1}return 0}},720:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var s={},i={};function a(e,t){var n,r,a;return t?(a=0<=(e>>>=0)&&e<256)&&(r=i[e])?r:(n=u(e,(0|e)<0?-1:0,!0),a&&(i[e]=n),n):(a=-128<=(e|=0)&&e<128)&&(r=s[e])?r:(n=u(e,e<0?-1:0,!1),a&&(s[e]=n),n)}function o(e,t){if(isNaN(e))return t?b:g;if(t){if(e<0)return b;if(e>=p)return k}else{if(e<=-f)return I;if(e+1>=f)return v}return e<0?o(-e,t).neg():u(e%d|0,e/d|0,t)}function u(e,t,r){return new n(e,t,r)}n.fromInt=a,n.fromNumber=o,n.fromBits=u;var l=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(e.substring(1),t,n).neg();for(var s=o(l(n,8)),i=g,a=0;a<e.length;a+=8){var u=Math.min(8,e.length-a),h=parseInt(e.substring(a,a+u),n);if(u<8){var d=o(l(n,u));i=i.mul(d).add(o(h))}else i=(i=i.mul(s)).add(o(h))}return i.unsigned=t,i}function h(e,t){return"number"==typeof e?o(e,t):"string"==typeof e?c(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=h;var d=4294967296,p=d*d,f=p/2,m=a(1<<24),g=a(0);n.ZERO=g;var b=a(0,!0);n.UZERO=b;var x=a(1);n.ONE=x;var y=a(1,!0);n.UONE=y;var w=a(-1);n.NEG_ONE=w;var v=u(-1,2147483647,!1);n.MAX_VALUE=v;var k=u(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var I=u(0,-2147483648,!1);n.MIN_VALUE=I;var C=n.prototype;C.toInt=function(){return this.unsigned?this.low>>>0:this.low},C.toNumber=function(){return this.unsigned?(this.high>>>0)*d+(this.low>>>0):this.high*d+(this.low>>>0)},C.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var t=o(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var s=o(l(e,6),this.unsigned),i=this,a="";;){var u=i.div(s),c=(i.sub(u.mul(s)).toInt()>>>0).toString(e);if((i=u).isZero())return c+a;for(;c.length<6;)c="0"+c;a=""+c+a}},C.getHighBits=function(){return this.high},C.getHighBitsUnsigned=function(){return this.high>>>0},C.getLowBits=function(){return this.low},C.getLowBitsUnsigned=function(){return this.low>>>0},C.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},C.isZero=function(){return 0===this.high&&0===this.low},C.eqz=C.isZero,C.isNegative=function(){return!this.unsigned&&this.high<0},C.isPositive=function(){return this.unsigned||this.high>=0},C.isOdd=function(){return 1==(1&this.low)},C.isEven=function(){return 0==(1&this.low)},C.equals=function(e){return r(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},C.eq=C.equals,C.notEquals=function(e){return!this.eq(e)},C.neq=C.notEquals,C.ne=C.notEquals,C.lessThan=function(e){return this.comp(e)<0},C.lt=C.lessThan,C.lessThanOrEqual=function(e){return this.comp(e)<=0},C.lte=C.lessThanOrEqual,C.le=C.lessThanOrEqual,C.greaterThan=function(e){return this.comp(e)>0},C.gt=C.greaterThan,C.greaterThanOrEqual=function(e){return this.comp(e)>=0},C.gte=C.greaterThanOrEqual,C.ge=C.greaterThanOrEqual,C.compare=function(e){if(r(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},C.comp=C.compare,C.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(x)},C.neg=C.negate,C.add=function(e){r(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,s=this.low>>>16,i=65535&this.low,a=e.high>>>16,o=65535&e.high,l=e.low>>>16,c=0,d=0,p=0,f=0;return p+=(f+=i+(65535&e.low))>>>16,d+=(p+=s+l)>>>16,c+=(d+=n+o)>>>16,c+=t+a,u((p&=65535)<<16|(f&=65535),(c&=65535)<<16|(d&=65535),this.unsigned)},C.subtract=function(e){return r(e)||(e=h(e)),this.add(e.neg())},C.sub=C.subtract,C.multiply=function(e){if(this.isZero())return g;if(r(e)||(e=h(e)),t)return u(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(I))return e.isOdd()?I:g;if(e.eq(I))return this.isOdd()?I:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,s=65535&this.high,i=this.low>>>16,a=65535&this.low,l=e.high>>>16,c=65535&e.high,d=e.low>>>16,p=65535&e.low,f=0,b=0,x=0,y=0;return x+=(y+=a*p)>>>16,b+=(x+=i*p)>>>16,x&=65535,b+=(x+=a*d)>>>16,f+=(b+=s*p)>>>16,b&=65535,f+=(b+=i*d)>>>16,b&=65535,f+=(b+=a*c)>>>16,f+=n*p+s*d+i*c+a*l,u((x&=65535)<<16|(y&=65535),(f&=65535)<<16|(b&=65535),this.unsigned)},C.mul=C.multiply,C.divide=function(e){if(r(e)||(e=h(e)),e.isZero())throw Error("division by zero");var n,s,i;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?b:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return b;if(e.gt(this.shru(1)))return y;i=b}else{if(this.eq(I))return e.eq(x)||e.eq(w)?I:e.eq(I)?x:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?x:w:(s=this.sub(e.mul(n)),i=n.add(s.div(e)));if(e.eq(I))return this.unsigned?b:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();i=g}for(s=this;s.gte(e);){n=Math.max(1,Math.floor(s.toNumber()/e.toNumber()));for(var a=Math.ceil(Math.log(n)/Math.LN2),c=a<=48?1:l(2,a-48),d=o(n),p=d.mul(e);p.isNegative()||p.gt(s);)p=(d=o(n-=c,this.unsigned)).mul(e);d.isZero()&&(d=x),i=i.add(d),s=s.sub(p)}return i},C.div=C.divide,C.modulo=function(e){return r(e)||(e=h(e)),t?u((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},C.mod=C.modulo,C.rem=C.modulo,C.not=function(){return u(~this.low,~this.high,this.unsigned)},C.and=function(e){return r(e)||(e=h(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},C.or=function(e){return r(e)||(e=h(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},C.xor=function(e){return r(e)||(e=h(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},C.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},C.shl=C.shiftLeft,C.shiftRight=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},C.shr=C.shiftRight,C.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},C.shru=C.shiftRightUnsigned,C.shr_u=C.shiftRightUnsigned,C.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},C.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},C.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},C.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},C.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},377:(e,t,n)=>{var r=n(832),s=n(652),i=n(801),a=n(30),o=n(618),u=n(49),l=n(971);l.alea=r,l.xor128=s,l.xorwow=i,l.xorshift7=a,l.xor4096=o,l.tychei=u,e.exports=l},832:function(e,t,n){var r;!function(e,s,i){function a(e){var t,n=this,r=(t=4022871197,function(e){e=String(e);for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new a(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.alea=u}(0,e=n.nmd(e),n.amdD)},49:function(e,t,n){var r;!function(e,s,i){function a(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.tychei=u}(0,e=n.nmd(e),n.amdD)},652:function(e,t,n){var r;!function(e,s,i){function a(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xor128=u}(0,e=n.nmd(e),n.amdD)},618:function(e,t,n){var r;!function(e,s,i){function a(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,i=t.i;return t.w=r=r+1640531527|0,n=s[i+34&127],e=s[i=i+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[i]=n^e,t.i=i,n+(r^r>>>16)|0},function(e,t){var n,r,s,i,a,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),s=0,i=-32;i<u;++i)t&&(r^=t.charCodeAt((i+32)%t.length)),0===i&&(a=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,i>=0&&(a=a+1640531527|0,s=0==(n=o[127&i]^=r+a)?s+1:0);for(s>=128&&(o[127&(t&&t.length||0)]=-1),s=127,i=512;i>0;--i)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;e.w=a,e.X=o,e.i=s}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.X&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xor4096=u}(0,e=n.nmd(e),n.amdD)},30:function(e,t,n){var r;!function(e,s,i){function a(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],n^=(e^=e<<13)^e<<9,r[s]=n,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.x&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xorshift7=u}(0,e=n.nmd(e),n.amdD)},801:function(e,t,n){var r;!function(e,s,i){function a(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xorwow=u}(0,e=n.nmd(e),n.amdD)},971:function(e,t,n){var r;!function(s,i,a){var o,u=256,l=a.pow(u,6),c=a.pow(2,52),h=2*c,d=255;function p(e,t,n){var r=[],d=b(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,x(i)]:null==e?function(){try{var e;return o&&(e=o.randomBytes)?e=e(u):(e=new Uint8Array(u),(s.crypto||s.msCrypto).getRandomValues(e)),x(e)}catch(e){var t=s.navigator,n=t&&t.plugins;return[+new Date,s,n,s.screen,x(i)]}}():e,3),r),p=new f(r),y=function(){for(var e=p.g(6),t=l,n=0;e<c;)e=(e+n)*u,t*=u,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return y.int32=function(){return 0|p.g(4)},y.quick=function(){return p.g(4)/4294967296},y.double=y,b(x(p.S),i),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,p),e.state=function(){return m(p,{})}),n?(a.random=e,t):e})(y,d,"global"in t?t.global:this==a,t.state)}function f(e){var t,n=e.length,r=this,s=0,i=r.i=r.j=0,a=r.S=[];for(n||(e=[n++]);s<u;)a[s]=s++;for(s=0;s<u;s++)a[s]=a[i=d&i+e[s%n]+(t=a[s])],a[i]=t;(r.g=function(e){for(var t,n=0,s=r.i,i=r.j,a=r.S;e--;)t=a[s=d&s+1],n=n*u+a[d&(a[s]=a[i=d&i+t])+(a[i]=t)];return r.i=s,r.j=i,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(g(e[n],t-1))}catch(e){}return r.length?r:"string"==s?e:e+"\0"}function b(e,t){for(var n,r=e+"",s=0;s<r.length;)t[d&s]=d&(n^=19*t[d&s])+r.charCodeAt(s++);return x(t)}function x(e){return String.fromCharCode.apply(0,e)}if(b(a.random(),i),e.exports){e.exports=p;try{o=n(42)}catch(e){}}else void 0===(r=function(){return p}.call(t,n,t,e))||(e.exports=r)}("undefined"!=typeof self?self:this,[],Math)},138:(e,t,n)=>{"use strict";n.a(e,(async(e,t)=>{try{var r=n(157),s=n(551);console.log((0,r._b3)(-4).toString()),console.log("inside webpack index.js");const e=browser.runtime.getURL("model/output/model.json"),i=await s.FBF(e);i.summary();const a=100,o=s.nGf([1,a,a,3]),u=i.predict(o);console.log(u.toString()),t()}catch(e){t(e)}}),1)},410:()=>{},628:()=>{},601:()=>{},792:()=>{},977:()=>{},42:()=>{},814:function(e){e.exports=function(){"use strict";function e(e,n){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=function(e,n){if(e){if("string"==typeof e)return t(e,n);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?t(e,n):void 0}}(e))||n&&e&&"number"==typeof e.length){r&&(e=r);var s=0,i=function(){};return{s:i,n:function(){return s>=e.length?{done:!0}:{done:!1,value:e[s++]}},e:function(e){throw e},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,o=!0,u=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return o=e.done,e},e:function(e){u=!0,a=e},f:function(){try{o||null==r.return||r.return()}finally{if(u)throw a}}}}function t(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function r(){return!0}function s(){return!1}function i(){}var a="Argument is not a typed-function.";return function t(){function o(e){return"object"===n(e)&&null!==e&&e.constructor===Object}var u,l,c=[{name:"number",test:function(e){return"number"==typeof e}},{name:"string",test:function(e){return"string"==typeof e}},{name:"boolean",test:function(e){return"boolean"==typeof e}},{name:"Function",test:function(e){return"function"==typeof e}},{name:"Array",test:Array.isArray},{name:"Date",test:function(e){return e instanceof Date}},{name:"RegExp",test:function(e){return e instanceof RegExp}},{name:"Object",test:o},{name:"null",test:function(e){return null===e}},{name:"undefined",test:function(e){return void 0===e}}],h={name:"any",test:r,isAny:!0},d=0,p={createCount:0};function f(t){var n=u.get(t);if(n)return n;var r,s,i='Unknown type "'+t+'"',a=t.toLowerCase(),o=e(l);try{for(o.s();!(s=o.n()).done;)if((r=s.value).toLowerCase()===a){i+='. Did you mean "'+r+'" ?';break}}catch(e){o.e(e)}finally{o.f()}throw new TypeError(i)}function m(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"any",n=t?f(t).index:l.length,r=[],s=0;s<e.length;++s){if(!e[s]||"string"!=typeof e[s].name||"function"!=typeof e[s].test)throw new TypeError("Object with properties {name: string, test: function} expected");var i=e[s].name;if(u.has(i))throw new TypeError('Duplicate type name "'+i+'"');r.push(i),u.set(i,{name:i,test:e[s].test,isAny:e[s].isAny,index:n+s,conversionsTo:[]})}var a=l.slice(n);l=l.slice(0,n).concat(r).concat(a);for(var o=n+r.length;o<l.length;++o)u.get(l[o]).index=o}function g(){u=new Map,l=[],d=0,m([h],!1)}function b(e){var t=l.filter((function(t){var n=u.get(t);return!n.isAny&&n.test(e)}));return t.length?t:["any"]}function x(e){return e&&"function"==typeof e&&"_typedFunctionData"in e}function y(t,n,r){if(!x(t))throw new TypeError(a);var s=r&&r.exact,i=C(Array.isArray(n)?n.join(","):n),o=w(i);if(!s||o in t.signatures){var u=t._typedFunctionData.signatureMap.get(o);if(u)return u}var l,c,h,d=i.length;if(s)for(c in l=[],t.signatures)l.push(t._typedFunctionData.signatureMap.get(c));else l=t._typedFunctionData.signatures;for(var p=0;p<d;++p){var f,m=i[p],g=[],b=void 0,y=e(l);try{for(y.s();!(f=y.n()).done;){var v=S((b=f.value).params,p);if(v&&(!m.restParam||v.restParam)){if(!v.hasAny&&"continue"===function(){var e=I(v);if(m.types.some((function(t){return!e.has(t.name)})))return"continue"}())continue;g.push(b)}}}catch(e){y.e(e)}finally{y.f()}if(0===(l=g).length)break}var k,D=e(l);try{for(D.s();!(k=D.n()).done;)if((h=k.value).params.length<=d)return h}catch(e){D.e(e)}finally{D.f()}throw new TypeError("Signature not found (signature: "+(t.name||"unnamed")+"("+w(i,", ")+"))")}function w(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:",";return e.map((function(e){return e.name})).join(t)}function v(e){var t=0===e.indexOf("..."),n=(t?e.length>3?e.slice(3):"any":e).split("|").map((function(e){return f(e.trim())})),r=!1,s=t?"...":"";return{types:n.map((function(e){return r=e.isAny||r,s+=e.name+"|",{name:e.name,typeIndex:e.index,test:e.test,isAny:e.isAny,conversion:null,conversionIndex:-1}})),name:s.slice(0,-1),hasAny:r,hasConversion:!1,restParam:t}}function k(t){var n=function(t){if(0===t.length)return[];var n=t.map(f);t.length>1&&n.sort((function(e,t){return e.index-t.index}));var r=n[0].conversionsTo;if(1===t.length)return r;r=r.concat([]);for(var s=new Set(t),i=1;i<n.length;++i){var a,o=void 0,u=e(n[i].conversionsTo);try{for(u.s();!(a=u.n()).done;)o=a.value,s.has(o.from)||(r.push(o),s.add(o.from))}catch(e){u.e(e)}finally{u.f()}}return r}(t.types.map((function(e){return e.name}))),r=t.hasAny,s=t.name,i=n.map((function(e){var t=f(e.from);return r=t.isAny||r,s+="|"+e.from,{name:e.from,typeIndex:t.index,test:t.test,isAny:t.isAny,conversion:e,conversionIndex:e.index}}));return{types:t.types.concat(i),name:s,hasAny:r,hasConversion:i.length>0,restParam:t.restParam}}function I(e){return e.typeSet||(e.typeSet=new Set,e.types.forEach((function(t){return e.typeSet.add(t.name)}))),e.typeSet}function C(e){var t=[];if("string"!=typeof e)throw new TypeError("Signatures must be strings");var n=e.trim();if(""===n)return t;for(var r=n.split(","),s=0;s<r.length;++s){var i=v(r[s].trim());if(i.restParam&&s!==r.length-1)throw new SyntaxError('Unexpected rest parameter "'+r[s]+'": only allowed for the last parameter');if(0===i.types.length)return null;t.push(i)}return t}function D(e){var t=H(e);return!!t&&t.restParam}function E(e){if(e&&0!==e.types.length){if(1===e.types.length)return f(e.types[0].name).test;if(2===e.types.length){var t=f(e.types[0].name).test,n=f(e.types[1].name).test;return function(e){return t(e)||n(e)}}var s=e.types.map((function(e){return f(e.name).test}));return function(e){for(var t=0;t<s.length;t++)if(s[t](e))return!0;return!1}}return r}function N(e){var t,n,r;if(D(e)){var s=(t=G(e).map(E)).length,i=E(H(e));return function(e){for(var n=0;n<t.length;n++)if(!t[n](e[n]))return!1;return function(e){for(var t=s;t<e.length;t++)if(!i(e[t]))return!1;return!0}(e)&&e.length>=s+1}}return 0===e.length?function(e){return 0===e.length}:1===e.length?(n=E(e[0]),function(e){return n(e[0])&&1===e.length}):2===e.length?(n=E(e[0]),r=E(e[1]),function(e){return n(e[0])&&r(e[1])&&2===e.length}):(t=e.map(E),function(e){for(var n=0;n<t.length;n++)if(!t[n](e[n]))return!1;return e.length===t.length})}function S(e,t){return t<e.length?e[t]:D(e)?H(e):null}function $(e,t){var n=S(e,t);return n?I(n):new Set}function T(e){return null===e.conversion||void 0===e.conversion}function A(t,n){var r=new Set;return t.forEach((function(t){var s,i,a=e($(t.params,n));try{for(a.s();!(i=a.n()).done;)s=i.value,r.add(s)}catch(e){a.e(e)}finally{a.f()}})),r.has("any")?["any"]:Array.from(r)}function F(e,t,r){var s,i,a,o=e||"unnamed",u=r,l=function(){var e=[];if(u.forEach((function(n){var r=E(S(n.params,a));(a<n.params.length||D(n.params))&&r(t[a])&&e.push(n)})),0===e.length){if((i=A(u,a)).length>0){var n=b(t[a]);return(s=new TypeError("Unexpected type of argument in function "+o+" (expected: "+i.join(" or ")+", actual: "+n.join(" | ")+", index: "+a+")")).data={category:"wrongType",fn:o,index:a,actual:n,expected:i},{v:s}}}else u=e};for(a=0;a<t.length;a++){var c=l();if("object"===n(c))return c.v}var h=u.map((function(e){return D(e.params)?1/0:e.params.length}));if(t.length<Math.min.apply(null,h))return i=A(u,a),(s=new TypeError("Too few arguments in function "+o+" (expected: "+i.join(" or ")+", index: "+t.length+")")).data={category:"tooFewArgs",fn:o,index:t.length,expected:i},s;var d=Math.max.apply(null,h);if(t.length>d)return(s=new TypeError("Too many arguments in function "+o+" (expected: "+d+", actual: "+t.length+")")).data={category:"tooManyArgs",fn:o,index:t.length,expectedLength:d},s;for(var p=[],f=0;f<t.length;++f)p.push(b(t[f]).join("|"));return(s=new TypeError('Arguments of type "'+p.join(", ")+'" do not match any of the defined signatures of function '+o+".")).data={category:"mismatch",actual:p},s}function R(e){for(var t=l.length+1,n=0;n<e.types.length;n++)T(e.types[n])&&(t=Math.min(t,e.types[n].typeIndex));return t}function _(e){for(var t=d+1,n=0;n<e.types.length;n++)T(e.types[n])||(t=Math.min(t,e.types[n].conversionIndex));return t}function O(e,t){if(e.hasAny){if(!t.hasAny)return 1}else if(t.hasAny)return-1;if(e.restParam){if(!t.restParam)return 1}else if(t.restParam)return-1;if(e.hasConversion){if(!t.hasConversion)return 1}else if(t.hasConversion)return-1;var n=R(e)-R(t);if(n<0)return-1;if(n>0)return 1;var r=_(e)-_(t);return r<0?-1:r>0?1:0}function M(t,n){var r=t.params,s=n.params,i=H(r),a=H(s),o=D(r),u=D(s);if(o&&i.hasAny){if(!u||!a.hasAny)return 1}else if(u&&a.hasAny)return-1;var l,c,h=0,d=0,p=e(r);try{for(p.s();!(c=p.n()).done;)(l=c.value).hasAny&&++h,l.hasConversion&&++d}catch(e){p.e(e)}finally{p.f()}var f,m=0,g=0,b=e(s);try{for(b.s();!(f=b.n()).done;)(l=f.value).hasAny&&++m,l.hasConversion&&++g}catch(e){b.e(e)}finally{b.f()}if(h!==m)return h-m;if(o&&i.hasConversion){if(!u||!a.hasConversion)return 1}else if(u&&a.hasConversion)return-1;if(d!==g)return d-g;if(o){if(!u)return 1}else if(u)return-1;var x=(r.length-s.length)*(o?-1:1);if(0!==x)return x;for(var y,w=[],v=0,k=0;k<r.length;++k){var I=O(r[k],s[k]);w.push(I),v+=I}if(0!==v)return v;for(var C=0,E=w;C<E.length;C++)if(0!==(y=E[C]))return y;return 0}function B(e,t){var n=t;if(e.some((function(e){return e.hasConversion}))){var r=D(e),s=e.map(L);n=function(){for(var e=[],n=r?arguments.length-1:arguments.length,i=0;i<n;i++)e[i]=s[i](arguments[i]);return r&&(e[n]=arguments[n].map(s[n])),t.apply(this,e)}}var i=n;if(D(e)){var a=e.length-1;i=function(){return n.apply(this,j(arguments,0,a).concat([j(arguments,a)]))}}return i}function L(e){var t,n,r,s,i=[],a=[];switch(e.types.forEach((function(e){e.conversion&&(i.push(f(e.conversion.from).test),a.push(e.conversion.convert))})),a.length){case 0:return function(e){return e};case 1:return t=i[0],r=a[0],function(e){return t(e)?r(e):e};case 2:return t=i[0],n=i[1],r=a[0],s=a[1],function(e){return t(e)?r(e):n(e)?s(e):e};default:return function(e){for(var t=0;t<a.length;t++)if(i[t](e))return a[t](e);return e}}}function z(e){return function e(t,n,r){if(n<t.length){var s=t[n],i=[];if(s.restParam){var a=s.types.filter(T);a.length<s.types.length&&i.push({types:a,name:"..."+a.map((function(e){return e.name})).join("|"),hasAny:a.some((function(e){return e.isAny})),hasConversion:!1,restParam:!0}),i.push(s)}else i=s.types.map((function(e){return{types:[e],name:e.name,hasAny:e.isAny,hasConversion:e.conversion,restParam:!1}}));return o=i,u=function(s){return e(t,n+1,r.concat([s]))},Array.prototype.concat.apply([],o.map(u))}var o,u;return[r]}(e,0,[])}function P(t,n,r){var s,i,a=[],o=e(t);try{for(o.s();!(i=o.n()).done;){var u=r[s=i.value];if("number"!=typeof u)throw new TypeError('No definition for referenced signature "'+s+'"');if("function"!=typeof(u=n[u]))return!1;a.push(u)}}catch(e){o.e(e)}finally{o.f()}return a}function W(e,t,n){for(var r=function(e){return e.map((function(e){return Y(e)?K(e.referToSelf.callback):X(e)?q(e.referTo.references,e.referTo.callback):e}))}(e),s=new Array(r.length).fill(!1),i=!0;i;){i=!1;for(var a=!0,o=0;o<r.length;++o)if(!s[o]){var u=r[o];if(Y(u))r[o]=u.referToSelf.callback(n),r[o].referToSelf=u.referToSelf,s[o]=!0,a=!1;else if(X(u)){var l=P(u.referTo.references,r,t);l?(r[o]=u.referTo.callback.apply(this,l),r[o].referTo=u.referTo,s[o]=!0,a=!1):i=!0}}if(a&&i)throw new SyntaxError("Circular reference detected in resolving typed.referTo")}return r}function U(t,n){if(p.createCount++,0===Object.keys(n).length)throw new SyntaxError("No signatures provided");p.warnAgainstDeprecatedThis&&function(e){var t=/\bthis(\(|\.signatures\b)/;Object.keys(e).forEach((function(n){var r=e[n];if(t.test(r.toString()))throw new SyntaxError("Using `this` to self-reference a function is deprecated since typed-function@3. Use typed.referTo and typed.referToSelf instead.")}))}(n);var r,a=[],o=[],u={},l=[],c=function(){if(!Object.prototype.hasOwnProperty.call(n,r))return"continue";var t=C(r);if(!t)return"continue";a.forEach((function(n){if(function(t,n){for(var r=Math.max(t.length,n.length),s=0;s<r;s++){var i,a=$(t,s),o=!1,u=void 0,l=e($(n,s));try{for(l.s();!(i=l.n()).done;)if(u=i.value,a.has(u)){o=!0;break}}catch(e){l.e(e)}finally{l.f()}if(!o)return!1}var c=t.length,h=n.length,d=D(t),p=D(n);return d?p?c===h:h>=c:p?c>=h:c===h}(n,t))throw new TypeError('Conflicting signatures "'+w(n)+'" and "'+w(t)+'".')})),a.push(t);var s=o.length;o.push(n[r]);var i,c=void 0,h=e(z(t.map(k)));try{for(h.s();!(i=h.n()).done;){var d=w(c=i.value);l.push({params:c,name:d,fn:s}),c.every((function(e){return!e.hasConversion}))&&(u[d]=s)}}catch(e){h.e(e)}finally{h.f()}};for(r in n)c();l.sort(M);var h,d=W(o,u,pe);for(h in u)Object.prototype.hasOwnProperty.call(u,h)&&(u[h]=d[u[h]]);for(var f=[],m=new Map,g=0,b=l;g<b.length;g++)h=b[g],m.has(h.name)||(h.fn=d[h.fn],f.push(h),m.set(h.name,h));for(var x=f[0]&&f[0].params.length<=2&&!D(f[0].params),y=f[1]&&f[1].params.length<=2&&!D(f[1].params),v=f[2]&&f[2].params.length<=2&&!D(f[2].params),I=f[3]&&f[3].params.length<=2&&!D(f[3].params),S=f[4]&&f[4].params.length<=2&&!D(f[4].params),T=f[5]&&f[5].params.length<=2&&!D(f[5].params),A=x&&y&&v&&I&&S&&T,F=0;F<f.length;++F)f[F].test=N(f[F].params);for(var R=x?E(f[0].params[0]):s,_=y?E(f[1].params[0]):s,O=v?E(f[2].params[0]):s,L=I?E(f[3].params[0]):s,P=S?E(f[4].params[0]):s,U=T?E(f[5].params[0]):s,V=x?E(f[0].params[1]):s,G=y?E(f[1].params[1]):s,H=v?E(f[2].params[1]):s,j=I?E(f[3].params[1]):s,q=S?E(f[4].params[1]):s,K=T?E(f[5].params[1]):s,X=0;X<f.length;++X)f[X].implementation=B(f[X].params,f[X].fn);var Y=x?f[0].implementation:i,Z=y?f[1].implementation:i,J=v?f[2].implementation:i,Q=I?f[3].implementation:i,ee=S?f[4].implementation:i,te=T?f[5].implementation:i,ne=x?f[0].params.length:-1,re=y?f[1].params.length:-1,se=v?f[2].params.length:-1,ie=I?f[3].params.length:-1,ae=S?f[4].params.length:-1,oe=T?f[5].params.length:-1,ue=A?6:0,le=f.length,ce=f.map((function(e){return e.test})),he=f.map((function(e){return e.implementation})),de=function(){for(var e=ue;e<le;e++)if(ce[e](arguments))return he[e].apply(this,arguments);return p.onMismatch(t,arguments,f)};function pe(e,t){return arguments.length===ne&&R(e)&&V(t)?Y.apply(this,arguments):arguments.length===re&&_(e)&&G(t)?Z.apply(this,arguments):arguments.length===se&&O(e)&&H(t)?J.apply(this,arguments):arguments.length===ie&&L(e)&&j(t)?Q.apply(this,arguments):arguments.length===ae&&P(e)&&q(t)?ee.apply(this,arguments):arguments.length===oe&&U(e)&&K(t)?te.apply(this,arguments):de.apply(this,arguments)}try{Object.defineProperty(pe,"name",{value:t})}catch(e){}return pe.signatures=u,pe._typedFunctionData={signatures:f,signatureMap:m},pe}function V(e,t,n){throw F(e,t,n)}function G(e){return j(e,0,e.length-1)}function H(e){return e[e.length-1]}function j(e,t,n){return Array.prototype.slice.call(e,t,n)}function q(e,t){return{referTo:{references:e,callback:t}}}function K(e){if("function"!=typeof e)throw new TypeError("Callback function expected as first argument");return{referToSelf:{callback:e}}}function X(e){return e&&"object"===n(e.referTo)&&Array.isArray(e.referTo.references)&&"function"==typeof e.referTo.callback}function Y(e){return e&&"object"===n(e.referToSelf)&&"function"==typeof e.referToSelf.callback}function Z(e,t){if(!e)return t;if(t&&t!==e){var n=new Error("Function names do not match (expected: "+e+", actual: "+t+")");throw n.data={actual:t,expected:e},n}return e}function J(e){var t;for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(x(e[n])||"string"==typeof e[n].signature)&&(t=Z(t,e[n].name));return t}function Q(e,t){var n;for(n in t)if(Object.prototype.hasOwnProperty.call(t,n)){if(n in e&&t[n]!==e[n]){var r=new Error('Signature "'+n+'" is defined twice');throw r.data={signature:n,sourceFunction:t[n],destFunction:e[n]},r}e[n]=t[n]}}g(),m(c);var ee=p;function te(e){if(!e||"string"!=typeof e.from||"string"!=typeof e.to||"function"!=typeof e.convert)throw new TypeError("Object with properties {from: string, to: string, convert: function} expected");if(e.to===e.from)throw new SyntaxError('Illegal to define conversion from "'+e.from+'" to itself.')}return p=function(e){for(var t="string"==typeof e,n=t?e:"",r={},s=t?1:0;s<arguments.length;++s){var i=arguments[s],a={},u=void 0;if("function"==typeof i?(u=i.name,"string"==typeof i.signature?a[i.signature]=i:x(i)&&(a=i.signatures)):o(i)&&(a=i,t||(u=J(i))),0===Object.keys(a).length){var l=new TypeError("Argument to 'typed' at index "+s+" is not a (typed) function, nor an object with signatures as keys and functions as values.");throw l.data={index:s,argument:i},l}t||(n=Z(n,u)),Q(r,a)}return U(n||"",r)},p.create=t,p.createCount=ee.createCount,p.onMismatch=V,p.throwMismatchError=V,p.createError=F,p.clear=g,p.clearConversions=function(){var t,n,r=e(l);try{for(r.s();!(n=r.n()).done;)t=n.value,u.get(t).conversionsTo=[]}catch(e){r.e(e)}finally{r.f()}d=0},p.addTypes=m,p._findType=f,p.referTo=function(){var e=G(arguments).map((function(e){return w(C(e))})),t=H(arguments);if("function"!=typeof t)throw new TypeError("Callback function expected as last argument");return q(e,t)},p.referToSelf=K,p.convert=function(e,t){var n=f(t);if(n.test(e))return e;var r=n.conversionsTo;if(0===r.length)throw new Error("There are no conversions to "+t+" defined.");for(var s=0;s<r.length;s++)if(f(r[s].from).test(e))return r[s].convert(e);throw new Error("Cannot convert "+e+" to "+t)},p.findSignature=y,p.find=function(e,t,n){return y(e,t,n).implementation},p.isTypedFunction=x,p.warnAgainstDeprecatedThis=!0,p.addType=function(e,t){var n="any";!1!==t&&u.has("Object")&&(n="Object"),p.addTypes([e],n)},p.addConversion=function(e){te(e);var t=f(e.to);if(!t.conversionsTo.every((function(t){return t.from!==e.from})))throw new Error('There is already a conversion from "'+e.from+'" to "'+t.name+'"');t.conversionsTo.push({from:e.from,convert:e.convert,index:d++})},p.addConversions=function(e){e.forEach(p.addConversion)},p.removeConversion=function(e){te(e);var t=f(e.to),n=function(e,t){for(var n=0;n<e.length;n++)if(t(e[n]))return e[n]}(t.conversionsTo,(function(t){return t.from===e.from}));if(!n)throw new Error("Attempt to remove nonexistent conversion from "+e.from+" to "+e.to);if(n.convert!==e.convert)throw new Error("Conversion to remove does not match existing conversion");var r=t.conversionsTo.indexOf(n);t.conversionsTo.splice(r,1)},p.resolve=function(e,t){if(!x(e))throw new TypeError(a);for(var n=e._typedFunctionData.signatures,r=0;r<n.length;++r)if(n[r].test(t))return n[r];return null},p}()}()},157:(e,t,n)=>{"use strict";function r(){return r=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},r.apply(this,arguments)}n.d(t,{_b3:()=>Pn});var s={epsilon:1e-12,matrix:"Matrix",number:"number",precision:64,predictable:!1,randomSeed:null},i=function(e){if(e)throw new Error("The global config is readonly. \nPlease create a mathjs instance if you want to change the default configuration. \nExample:\n\n  import { create, all } from 'mathjs';\n  const mathjs = create(all);\n  mathjs.config({ number: 'BigNumber' });\n");return Object.freeze(s)};r(i,s,{MATRIX_OPTIONS:["Matrix","Array"],NUMBER_OPTIONS:["number","BigNumber","Fraction"]});var a,o,u=9e15,l=1e9,c="0123456789abcdef",h="2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058",d="3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789",p={precision:20,rounding:4,modulo:1,toExpNeg:-7,toExpPos:21,minE:-u,maxE:u,crypto:!1},f=!0,m="[DecimalError] ",g=m+"Invalid argument: ",b=m+"Precision limit exceeded",x=m+"crypto unavailable",y="[object Decimal]",w=Math.floor,v=Math.pow,k=/^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i,I=/^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i,C=/^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i,D=/^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,E=1e7,N=h.length-1,S=d.length-1,$={toStringTag:y};function T(e){var t,n,r,s=e.length-1,i="",a=e[0];if(s>0){for(i+=a,t=1;t<s;t++)(n=7-(r=e[t]+"").length)&&(i+=W(n)),i+=r;(n=7-(r=(a=e[t])+"").length)&&(i+=W(n))}else if(0===a)return"0";for(;a%10==0;)a/=10;return i+a}function A(e,t,n){if(e!==~~e||e<t||e>n)throw Error(g+e)}function F(e,t,n,r){var s,i,a,o;for(i=e[0];i>=10;i/=10)--t;return--t<0?(t+=7,s=0):(s=Math.ceil((t+1)/7),t%=7),i=v(10,7-t),o=e[s]%i|0,null==r?t<3?(0==t?o=o/100|0:1==t&&(o=o/10|0),a=n<4&&99999==o||n>3&&49999==o||5e4==o||0==o):a=(n<4&&o+1==i||n>3&&o+1==i/2)&&(e[s+1]/i/100|0)==v(10,t-2)-1||(o==i/2||0==o)&&0==(e[s+1]/i/100|0):t<4?(0==t?o=o/1e3|0:1==t?o=o/100|0:2==t&&(o=o/10|0),a=(r||n<4)&&9999==o||!r&&n>3&&4999==o):a=((r||n<4)&&o+1==i||!r&&n>3&&o+1==i/2)&&(e[s+1]/i/1e3|0)==v(10,t-3)-1,a}function R(e,t,n){for(var r,s,i=[0],a=0,o=e.length;a<o;){for(s=i.length;s--;)i[s]*=t;for(i[0]+=c.indexOf(e.charAt(a++)),r=0;r<i.length;r++)i[r]>n-1&&(void 0===i[r+1]&&(i[r+1]=0),i[r+1]+=i[r]/n|0,i[r]%=n)}return i.reverse()}$.absoluteValue=$.abs=function(){var e=new this.constructor(this);return e.s<0&&(e.s=1),O(e)},$.ceil=function(){return O(new this.constructor(this),this.e+1,2)},$.clampedTo=$.clamp=function(e,t){var n=this,r=n.constructor;if(e=new r(e),t=new r(t),!e.s||!t.s)return new r(NaN);if(e.gt(t))throw Error(g+t);return n.cmp(e)<0?e:n.cmp(t)>0?t:new r(n)},$.comparedTo=$.cmp=function(e){var t,n,r,s,i=this,a=i.d,o=(e=new i.constructor(e)).d,u=i.s,l=e.s;if(!a||!o)return u&&l?u!==l?u:a===o?0:!a^u<0?1:-1:NaN;if(!a[0]||!o[0])return a[0]?u:o[0]?-l:0;if(u!==l)return u;if(i.e!==e.e)return i.e>e.e^u<0?1:-1;for(t=0,n=(r=a.length)<(s=o.length)?r:s;t<n;++t)if(a[t]!==o[t])return a[t]>o[t]^u<0?1:-1;return r===s?0:r>s^u<0?1:-1},$.cosine=$.cos=function(){var e,t,n=this,r=n.constructor;return n.d?n.d[0]?(e=r.precision,t=r.rounding,r.precision=e+Math.max(n.e,n.sd())+7,r.rounding=1,n=function(e,t){var n,r,s;if(t.isZero())return t;(r=t.d.length)<32?s=(1/Z(4,n=Math.ceil(r/3))).toString():(n=16,s="2.3283064365386962890625e-10"),e.precision+=n,t=Y(e,1,t.times(s),new e(1));for(var i=n;i--;){var a=t.times(t);t=a.times(a).minus(a).times(8).plus(1)}return e.precision-=n,t}(r,J(r,n)),r.precision=e,r.rounding=t,O(2==o||3==o?n.neg():n,e,t,!0)):new r(1):new r(NaN)},$.cubeRoot=$.cbrt=function(){var e,t,n,r,s,i,a,o,u,l,c=this,h=c.constructor;if(!c.isFinite()||c.isZero())return new h(c);for(f=!1,(i=c.s*v(c.s*c,1/3))&&Math.abs(i)!=1/0?r=new h(i.toString()):(n=T(c.d),(i=((e=c.e)-n.length+1)%3)&&(n+=1==i||-2==i?"0":"00"),i=v(n,1/3),e=w((e+1)/3)-(e%3==(e<0?-1:2)),(r=new h(n=i==1/0?"5e"+e:(n=i.toExponential()).slice(0,n.indexOf("e")+1)+e)).s=c.s),a=(e=h.precision)+3;;)if(l=(u=(o=r).times(o).times(o)).plus(c),r=_(l.plus(c).times(o),l.plus(u),a+2,1),T(o.d).slice(0,a)===(n=T(r.d)).slice(0,a)){if("9999"!=(n=n.slice(a-3,a+1))&&(s||"4999"!=n)){+n&&(+n.slice(1)||"5"!=n.charAt(0))||(O(r,e+1,1),t=!r.times(r).times(r).eq(c));break}if(!s&&(O(o,e+1,0),o.times(o).times(o).eq(c))){r=o;break}a+=4,s=1}return f=!0,O(r,e,h.rounding,t)},$.decimalPlaces=$.dp=function(){var e,t=this.d,n=NaN;if(t){if(n=7*((e=t.length-1)-w(this.e/7)),e=t[e])for(;e%10==0;e/=10)n--;n<0&&(n=0)}return n},$.dividedBy=$.div=function(e){return _(this,new this.constructor(e))},$.dividedToIntegerBy=$.divToInt=function(e){var t=this.constructor;return O(_(this,new t(e),0,1,1),t.precision,t.rounding)},$.equals=$.eq=function(e){return 0===this.cmp(e)},$.floor=function(){return O(new this.constructor(this),this.e+1,3)},$.greaterThan=$.gt=function(e){return this.cmp(e)>0},$.greaterThanOrEqualTo=$.gte=function(e){var t=this.cmp(e);return 1==t||0===t},$.hyperbolicCosine=$.cosh=function(){var e,t,n,r,s,i=this,a=i.constructor,o=new a(1);if(!i.isFinite())return new a(i.s?1/0:NaN);if(i.isZero())return o;n=a.precision,r=a.rounding,a.precision=n+Math.max(i.e,i.sd())+4,a.rounding=1,(s=i.d.length)<32?t=(1/Z(4,e=Math.ceil(s/3))).toString():(e=16,t="2.3283064365386962890625e-10"),i=Y(a,1,i.times(t),new a(1),!0);for(var u,l=e,c=new a(8);l--;)u=i.times(i),i=o.minus(u.times(c.minus(u.times(c))));return O(i,a.precision=n,a.rounding=r,!0)},$.hyperbolicSine=$.sinh=function(){var e,t,n,r,s=this,i=s.constructor;if(!s.isFinite()||s.isZero())return new i(s);if(t=i.precision,n=i.rounding,i.precision=t+Math.max(s.e,s.sd())+4,i.rounding=1,(r=s.d.length)<3)s=Y(i,2,s,s,!0);else{e=(e=1.4*Math.sqrt(r))>16?16:0|e,s=Y(i,2,s=s.times(1/Z(5,e)),s,!0);for(var a,o=new i(5),u=new i(16),l=new i(20);e--;)a=s.times(s),s=s.times(o.plus(a.times(u.times(a).plus(l))))}return i.precision=t,i.rounding=n,O(s,t,n,!0)},$.hyperbolicTangent=$.tanh=function(){var e,t,n=this,r=n.constructor;return n.isFinite()?n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+7,r.rounding=1,_(n.sinh(),n.cosh(),r.precision=e,r.rounding=t)):new r(n.s)},$.inverseCosine=$.acos=function(){var e,t=this,n=t.constructor,r=t.abs().cmp(1),s=n.precision,i=n.rounding;return-1!==r?0===r?t.isNeg()?z(n,s,i):new n(0):new n(NaN):t.isZero()?z(n,s+4,i).times(.5):(n.precision=s+6,n.rounding=1,t=t.asin(),e=z(n,s+4,i).times(.5),n.precision=s,n.rounding=i,e.minus(t))},$.inverseHyperbolicCosine=$.acosh=function(){var e,t,n=this,r=n.constructor;return n.lte(1)?new r(n.eq(1)?0:NaN):n.isFinite()?(e=r.precision,t=r.rounding,r.precision=e+Math.max(Math.abs(n.e),n.sd())+4,r.rounding=1,f=!1,n=n.times(n).minus(1).sqrt().plus(n),f=!0,r.precision=e,r.rounding=t,n.ln()):new r(n)},$.inverseHyperbolicSine=$.asinh=function(){var e,t,n=this,r=n.constructor;return!n.isFinite()||n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+2*Math.max(Math.abs(n.e),n.sd())+6,r.rounding=1,f=!1,n=n.times(n).plus(1).sqrt().plus(n),f=!0,r.precision=e,r.rounding=t,n.ln())},$.inverseHyperbolicTangent=$.atanh=function(){var e,t,n,r,s=this,i=s.constructor;return s.isFinite()?s.e>=0?new i(s.abs().eq(1)?s.s/0:s.isZero()?s:NaN):(e=i.precision,t=i.rounding,r=s.sd(),Math.max(r,e)<2*-s.e-1?O(new i(s),e,t,!0):(i.precision=n=r-s.e,s=_(s.plus(1),new i(1).minus(s),n+e,1),i.precision=e+4,i.rounding=1,s=s.ln(),i.precision=e,i.rounding=t,s.times(.5))):new i(NaN)},$.inverseSine=$.asin=function(){var e,t,n,r,s=this,i=s.constructor;return s.isZero()?new i(s):(t=s.abs().cmp(1),n=i.precision,r=i.rounding,-1!==t?0===t?((e=z(i,n+4,r).times(.5)).s=s.s,e):new i(NaN):(i.precision=n+6,i.rounding=1,s=s.div(new i(1).minus(s.times(s)).sqrt().plus(1)).atan(),i.precision=n,i.rounding=r,s.times(2)))},$.inverseTangent=$.atan=function(){var e,t,n,r,s,i,a,o,u,l=this,c=l.constructor,h=c.precision,d=c.rounding;if(l.isFinite()){if(l.isZero())return new c(l);if(l.abs().eq(1)&&h+4<=S)return(a=z(c,h+4,d).times(.25)).s=l.s,a}else{if(!l.s)return new c(NaN);if(h+4<=S)return(a=z(c,h+4,d).times(.5)).s=l.s,a}for(c.precision=o=h+10,c.rounding=1,e=n=Math.min(28,o/7+2|0);e;--e)l=l.div(l.times(l).plus(1).sqrt().plus(1));for(f=!1,t=Math.ceil(o/7),r=1,u=l.times(l),a=new c(l),s=l;-1!==e;)if(s=s.times(u),i=a.minus(s.div(r+=2)),s=s.times(u),void 0!==(a=i.plus(s.div(r+=2))).d[t])for(e=t;a.d[e]===i.d[e]&&e--;);return n&&(a=a.times(2<<n-1)),f=!0,O(a,c.precision=h,c.rounding=d,!0)},$.isFinite=function(){return!!this.d},$.isInteger=$.isInt=function(){return!!this.d&&w(this.e/7)>this.d.length-2},$.isNaN=function(){return!this.s},$.isNegative=$.isNeg=function(){return this.s<0},$.isPositive=$.isPos=function(){return this.s>0},$.isZero=function(){return!!this.d&&0===this.d[0]},$.lessThan=$.lt=function(e){return this.cmp(e)<0},$.lessThanOrEqualTo=$.lte=function(e){return this.cmp(e)<1},$.logarithm=$.log=function(e){var t,n,r,s,i,a,o,u,l=this,c=l.constructor,h=c.precision,d=c.rounding;if(null==e)e=new c(10),t=!0;else{if(n=(e=new c(e)).d,e.s<0||!n||!n[0]||e.eq(1))return new c(NaN);t=e.eq(10)}if(n=l.d,l.s<0||!n||!n[0]||l.eq(1))return new c(n&&!n[0]?-1/0:1!=l.s?NaN:n?0:1/0);if(t)if(n.length>1)i=!0;else{for(s=n[0];s%10==0;)s/=10;i=1!==s}if(f=!1,a=j(l,o=h+5),r=t?L(c,o+10):j(e,o),F((u=_(a,r,o,1)).d,s=h,d))do{if(a=j(l,o+=10),r=t?L(c,o+10):j(e,o),u=_(a,r,o,1),!i){+T(u.d).slice(s+1,s+15)+1==1e14&&(u=O(u,h+1,0));break}}while(F(u.d,s+=10,d));return f=!0,O(u,h,d)},$.minus=$.sub=function(e){var t,n,r,s,i,a,o,u,l,c,h,d,p=this,m=p.constructor;if(e=new m(e),!p.d||!e.d)return p.s&&e.s?p.d?e.s=-e.s:e=new m(e.d||p.s!==e.s?p:NaN):e=new m(NaN),e;if(p.s!=e.s)return e.s=-e.s,p.plus(e);if(l=p.d,d=e.d,o=m.precision,u=m.rounding,!l[0]||!d[0]){if(d[0])e.s=-e.s;else{if(!l[0])return new m(3===u?-0:0);e=new m(p)}return f?O(e,o,u):e}if(n=w(e.e/7),c=w(p.e/7),l=l.slice(),i=c-n){for((h=i<0)?(t=l,i=-i,a=d.length):(t=d,n=c,a=l.length),i>(r=Math.max(Math.ceil(o/7),a)+2)&&(i=r,t.length=1),t.reverse(),r=i;r--;)t.push(0);t.reverse()}else{for((h=(r=l.length)<(a=d.length))&&(a=r),r=0;r<a;r++)if(l[r]!=d[r]){h=l[r]<d[r];break}i=0}for(h&&(t=l,l=d,d=t,e.s=-e.s),a=l.length,r=d.length-a;r>0;--r)l[a++]=0;for(r=d.length;r>i;){if(l[--r]<d[r]){for(s=r;s&&0===l[--s];)l[s]=E-1;--l[s],l[r]+=E}l[r]-=d[r]}for(;0===l[--a];)l.pop();for(;0===l[0];l.shift())--n;return l[0]?(e.d=l,e.e=B(l,n),f?O(e,o,u):e):new m(3===u?-0:0)},$.modulo=$.mod=function(e){var t,n=this,r=n.constructor;return e=new r(e),!n.d||!e.s||e.d&&!e.d[0]?new r(NaN):!e.d||n.d&&!n.d[0]?O(new r(n),r.precision,r.rounding):(f=!1,9==r.modulo?(t=_(n,e.abs(),0,3,1)).s*=e.s:t=_(n,e,0,r.modulo,1),t=t.times(e),f=!0,n.minus(t))},$.naturalExponential=$.exp=function(){return H(this)},$.naturalLogarithm=$.ln=function(){return j(this)},$.negated=$.neg=function(){var e=new this.constructor(this);return e.s=-e.s,O(e)},$.plus=$.add=function(e){var t,n,r,s,i,a,o,u,l,c,h=this,d=h.constructor;if(e=new d(e),!h.d||!e.d)return h.s&&e.s?h.d||(e=new d(e.d||h.s===e.s?h:NaN)):e=new d(NaN),e;if(h.s!=e.s)return e.s=-e.s,h.minus(e);if(l=h.d,c=e.d,o=d.precision,u=d.rounding,!l[0]||!c[0])return c[0]||(e=new d(h)),f?O(e,o,u):e;if(i=w(h.e/7),r=w(e.e/7),l=l.slice(),s=i-r){for(s<0?(n=l,s=-s,a=c.length):(n=c,r=i,a=l.length),s>(a=(i=Math.ceil(o/7))>a?i+1:a+1)&&(s=a,n.length=1),n.reverse();s--;)n.push(0);n.reverse()}for((a=l.length)-(s=c.length)<0&&(s=a,n=c,c=l,l=n),t=0;s;)t=(l[--s]=l[s]+c[s]+t)/E|0,l[s]%=E;for(t&&(l.unshift(t),++r),a=l.length;0==l[--a];)l.pop();return e.d=l,e.e=B(l,r),f?O(e,o,u):e},$.precision=$.sd=function(e){var t,n=this;if(void 0!==e&&e!==!!e&&1!==e&&0!==e)throw Error(g+e);return n.d?(t=P(n.d),e&&n.e+1>t&&(t=n.e+1)):t=NaN,t},$.round=function(){var e=this,t=e.constructor;return O(new t(e),e.e+1,t.rounding)},$.sine=$.sin=function(){var e,t,n=this,r=n.constructor;return n.isFinite()?n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+Math.max(n.e,n.sd())+7,r.rounding=1,n=function(e,t){var n,r=t.d.length;if(r<3)return t.isZero()?t:Y(e,2,t,t);n=(n=1.4*Math.sqrt(r))>16?16:0|n,t=Y(e,2,t=t.times(1/Z(5,n)),t);for(var s,i=new e(5),a=new e(16),o=new e(20);n--;)s=t.times(t),t=t.times(i.plus(s.times(a.times(s).minus(o))));return t}(r,J(r,n)),r.precision=e,r.rounding=t,O(o>2?n.neg():n,e,t,!0)):new r(NaN)},$.squareRoot=$.sqrt=function(){var e,t,n,r,s,i,a=this,o=a.d,u=a.e,l=a.s,c=a.constructor;if(1!==l||!o||!o[0])return new c(!l||l<0&&(!o||o[0])?NaN:o?a:1/0);for(f=!1,0==(l=Math.sqrt(+a))||l==1/0?(((t=T(o)).length+u)%2==0&&(t+="0"),l=Math.sqrt(t),u=w((u+1)/2)-(u<0||u%2),r=new c(t=l==1/0?"5e"+u:(t=l.toExponential()).slice(0,t.indexOf("e")+1)+u)):r=new c(l.toString()),n=(u=c.precision)+3;;)if(r=(i=r).plus(_(a,i,n+2,1)).times(.5),T(i.d).slice(0,n)===(t=T(r.d)).slice(0,n)){if("9999"!=(t=t.slice(n-3,n+1))&&(s||"4999"!=t)){+t&&(+t.slice(1)||"5"!=t.charAt(0))||(O(r,u+1,1),e=!r.times(r).eq(a));break}if(!s&&(O(i,u+1,0),i.times(i).eq(a))){r=i;break}n+=4,s=1}return f=!0,O(r,u,c.rounding,e)},$.tangent=$.tan=function(){var e,t,n=this,r=n.constructor;return n.isFinite()?n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+10,r.rounding=1,(n=n.sin()).s=1,n=_(n,new r(1).minus(n.times(n)).sqrt(),e+10,0),r.precision=e,r.rounding=t,O(2==o||4==o?n.neg():n,e,t,!0)):new r(NaN)},$.times=$.mul=function(e){var t,n,r,s,i,a,o,u,l,c=this,h=c.constructor,d=c.d,p=(e=new h(e)).d;if(e.s*=c.s,!(d&&d[0]&&p&&p[0]))return new h(!e.s||d&&!d[0]&&!p||p&&!p[0]&&!d?NaN:d&&p?0*e.s:e.s/0);for(n=w(c.e/7)+w(e.e/7),(u=d.length)<(l=p.length)&&(i=d,d=p,p=i,a=u,u=l,l=a),i=[],r=a=u+l;r--;)i.push(0);for(r=l;--r>=0;){for(t=0,s=u+r;s>r;)o=i[s]+p[r]*d[s-r-1]+t,i[s--]=o%E|0,t=o/E|0;i[s]=(i[s]+t)%E|0}for(;!i[--a];)i.pop();return t?++n:i.shift(),e.d=i,e.e=B(i,n),f?O(e,h.precision,h.rounding):e},$.toBinary=function(e,t){return Q(this,2,e,t)},$.toDecimalPlaces=$.toDP=function(e,t){var n=this,r=n.constructor;return n=new r(n),void 0===e?n:(A(e,0,l),void 0===t?t=r.rounding:A(t,0,8),O(n,e+n.e+1,t))},$.toExponential=function(e,t){var n,r=this,s=r.constructor;return void 0===e?n=M(r,!0):(A(e,0,l),void 0===t?t=s.rounding:A(t,0,8),n=M(r=O(new s(r),e+1,t),!0,e+1)),r.isNeg()&&!r.isZero()?"-"+n:n},$.toFixed=function(e,t){var n,r,s=this,i=s.constructor;return void 0===e?n=M(s):(A(e,0,l),void 0===t?t=i.rounding:A(t,0,8),n=M(r=O(new i(s),e+s.e+1,t),!1,e+r.e+1)),s.isNeg()&&!s.isZero()?"-"+n:n},$.toFraction=function(e){var t,n,r,s,i,a,o,u,l,c,h,d,p=this,m=p.d,b=p.constructor;if(!m)return new b(p);if(l=n=new b(1),r=u=new b(0),a=(i=(t=new b(r)).e=P(m)-p.e-1)%7,t.d[0]=v(10,a<0?7+a:a),null==e)e=i>0?t:l;else{if(!(o=new b(e)).isInt()||o.lt(l))throw Error(g+o);e=o.gt(t)?i>0?t:l:o}for(f=!1,o=new b(T(m)),c=b.precision,b.precision=i=7*m.length*2;h=_(o,t,0,1,1),1!=(s=n.plus(h.times(r))).cmp(e);)n=r,r=s,s=l,l=u.plus(h.times(s)),u=s,s=t,t=o.minus(h.times(s)),o=s;return s=_(e.minus(n),r,0,1,1),u=u.plus(s.times(l)),n=n.plus(s.times(r)),u.s=l.s=p.s,d=_(l,r,i,1).minus(p).abs().cmp(_(u,n,i,1).minus(p).abs())<1?[l,r]:[u,n],b.precision=c,f=!0,d},$.toHexadecimal=$.toHex=function(e,t){return Q(this,16,e,t)},$.toNearest=function(e,t){var n=this,r=n.constructor;if(n=new r(n),null==e){if(!n.d)return n;e=new r(1),t=r.rounding}else{if(e=new r(e),void 0===t?t=r.rounding:A(t,0,8),!n.d)return e.s?n:e;if(!e.d)return e.s&&(e.s=n.s),e}return e.d[0]?(f=!1,n=_(n,e,0,t,1).times(e),f=!0,O(n)):(e.s=n.s,n=e),n},$.toNumber=function(){return+this},$.toOctal=function(e,t){return Q(this,8,e,t)},$.toPower=$.pow=function(e){var t,n,r,s,i,a,o=this,u=o.constructor,l=+(e=new u(e));if(!(o.d&&e.d&&o.d[0]&&e.d[0]))return new u(v(+o,l));if((o=new u(o)).eq(1))return o;if(r=u.precision,i=u.rounding,e.eq(1))return O(o,r,i);if((t=w(e.e/7))>=e.d.length-1&&(n=l<0?-l:l)<=9007199254740991)return s=U(u,o,n,r),e.s<0?new u(1).div(s):O(s,r,i);if((a=o.s)<0){if(t<e.d.length-1)return new u(NaN);if(0==(1&e.d[t])&&(a=1),0==o.e&&1==o.d[0]&&1==o.d.length)return o.s=a,o}return(t=0!=(n=v(+o,l))&&isFinite(n)?new u(n+"").e:w(l*(Math.log("0."+T(o.d))/Math.LN10+o.e+1)))>u.maxE+1||t<u.minE-1?new u(t>0?a/0:0):(f=!1,u.rounding=o.s=1,n=Math.min(12,(t+"").length),(s=H(e.times(j(o,r+n)),r)).d&&F((s=O(s,r+5,1)).d,r,i)&&(t=r+10,+T((s=O(H(e.times(j(o,t+n)),t),t+5,1)).d).slice(r+1,r+15)+1==1e14&&(s=O(s,r+1,0))),s.s=a,f=!0,u.rounding=i,O(s,r,i))},$.toPrecision=function(e,t){var n,r=this,s=r.constructor;return void 0===e?n=M(r,r.e<=s.toExpNeg||r.e>=s.toExpPos):(A(e,1,l),void 0===t?t=s.rounding:A(t,0,8),n=M(r=O(new s(r),e,t),e<=r.e||r.e<=s.toExpNeg,e)),r.isNeg()&&!r.isZero()?"-"+n:n},$.toSignificantDigits=$.toSD=function(e,t){var n=this.constructor;return void 0===e?(e=n.precision,t=n.rounding):(A(e,1,l),void 0===t?t=n.rounding:A(t,0,8)),O(new n(this),e,t)},$.toString=function(){var e=this,t=e.constructor,n=M(e,e.e<=t.toExpNeg||e.e>=t.toExpPos);return e.isNeg()&&!e.isZero()?"-"+n:n},$.truncated=$.trunc=function(){return O(new this.constructor(this),this.e+1,1)},$.valueOf=$.toJSON=function(){var e=this,t=e.constructor,n=M(e,e.e<=t.toExpNeg||e.e>=t.toExpPos);return e.isNeg()?"-"+n:n};var _=function(){function e(e,t,n){var r,s=0,i=e.length;for(e=e.slice();i--;)r=e[i]*t+s,e[i]=r%n|0,s=r/n|0;return s&&e.unshift(s),e}function t(e,t,n,r){var s,i;if(n!=r)i=n>r?1:-1;else for(s=i=0;s<n;s++)if(e[s]!=t[s]){i=e[s]>t[s]?1:-1;break}return i}function n(e,t,n,r){for(var s=0;n--;)e[n]-=s,s=e[n]<t[n]?1:0,e[n]=s*r+e[n]-t[n];for(;!e[0]&&e.length>1;)e.shift()}return function(r,s,i,o,u,l){var c,h,d,p,f,m,g,b,x,y,v,k,I,C,D,N,S,$,T,A,F=r.constructor,R=r.s==s.s?1:-1,_=r.d,M=s.d;if(!(_&&_[0]&&M&&M[0]))return new F(r.s&&s.s&&(_?!M||_[0]!=M[0]:M)?_&&0==_[0]||!M?0*R:R/0:NaN);for(l?(f=1,h=r.e-s.e):(l=E,f=7,h=w(r.e/f)-w(s.e/f)),T=M.length,S=_.length,y=(x=new F(R)).d=[],d=0;M[d]==(_[d]||0);d++);if(M[d]>(_[d]||0)&&h--,null==i?(C=i=F.precision,o=F.rounding):C=u?i+(r.e-s.e)+1:i,C<0)y.push(1),m=!0;else{if(C=C/f+2|0,d=0,1==T){for(p=0,M=M[0],C++;(d<S||p)&&C--;d++)D=p*l+(_[d]||0),y[d]=D/M|0,p=D%M|0;m=p||d<S}else{for((p=l/(M[0]+1)|0)>1&&(M=e(M,p,l),_=e(_,p,l),T=M.length,S=_.length),N=T,k=(v=_.slice(0,T)).length;k<T;)v[k++]=0;(A=M.slice()).unshift(0),$=M[0],M[1]>=l/2&&++$;do{p=0,(c=t(M,v,T,k))<0?(I=v[0],T!=k&&(I=I*l+(v[1]||0)),(p=I/$|0)>1?(p>=l&&(p=l-1),1==(c=t(g=e(M,p,l),v,b=g.length,k=v.length))&&(p--,n(g,T<b?A:M,b,l))):(0==p&&(c=p=1),g=M.slice()),(b=g.length)<k&&g.unshift(0),n(v,g,k,l),-1==c&&(c=t(M,v,T,k=v.length))<1&&(p++,n(v,T<k?A:M,k,l)),k=v.length):0===c&&(p++,v=[0]),y[d++]=p,c&&v[0]?v[k++]=_[N]||0:(v=[_[N]],k=1)}while((N++<S||void 0!==v[0])&&C--);m=void 0!==v[0]}y[0]||y.shift()}if(1==f)x.e=h,a=m;else{for(d=1,p=y[0];p>=10;p/=10)d++;x.e=d+h*f-1,O(x,u?i+x.e+1:i,o,m)}return x}}();function O(e,t,n,r){var s,i,a,o,u,l,c,h,d,p=e.constructor;e:if(null!=t){if(!(h=e.d))return e;for(s=1,o=h[0];o>=10;o/=10)s++;if((i=t-s)<0)i+=7,a=t,u=(c=h[d=0])/v(10,s-a-1)%10|0;else if((d=Math.ceil((i+1)/7))>=(o=h.length)){if(!r)break e;for(;o++<=d;)h.push(0);c=u=0,s=1,a=(i%=7)-7+1}else{for(c=o=h[d],s=1;o>=10;o/=10)s++;u=(a=(i%=7)-7+s)<0?0:c/v(10,s-a-1)%10|0}if(r=r||t<0||void 0!==h[d+1]||(a<0?c:c%v(10,s-a-1)),l=n<4?(u||r)&&(0==n||n==(e.s<0?3:2)):u>5||5==u&&(4==n||r||6==n&&(i>0?a>0?c/v(10,s-a):0:h[d-1])%10&1||n==(e.s<0?8:7)),t<1||!h[0])return h.length=0,l?(t-=e.e+1,h[0]=v(10,(7-t%7)%7),e.e=-t||0):h[0]=e.e=0,e;if(0==i?(h.length=d,o=1,d--):(h.length=d+1,o=v(10,7-i),h[d]=a>0?(c/v(10,s-a)%v(10,a)|0)*o:0),l)for(;;){if(0==d){for(i=1,a=h[0];a>=10;a/=10)i++;for(a=h[0]+=o,o=1;a>=10;a/=10)o++;i!=o&&(e.e++,h[0]==E&&(h[0]=1));break}if(h[d]+=o,h[d]!=E)break;h[d--]=0,o=1}for(i=h.length;0===h[--i];)h.pop()}return f&&(e.e>p.maxE?(e.d=null,e.e=NaN):e.e<p.minE&&(e.e=0,e.d=[0])),e}function M(e,t,n){if(!e.isFinite())return q(e);var r,s=e.e,i=T(e.d),a=i.length;return t?(n&&(r=n-a)>0?i=i.charAt(0)+"."+i.slice(1)+W(r):a>1&&(i=i.charAt(0)+"."+i.slice(1)),i=i+(e.e<0?"e":"e+")+e.e):s<0?(i="0."+W(-s-1)+i,n&&(r=n-a)>0&&(i+=W(r))):s>=a?(i+=W(s+1-a),n&&(r=n-s-1)>0&&(i=i+"."+W(r))):((r=s+1)<a&&(i=i.slice(0,r)+"."+i.slice(r)),n&&(r=n-a)>0&&(s+1===a&&(i+="."),i+=W(r))),i}function B(e,t){var n=e[0];for(t*=7;n>=10;n/=10)t++;return t}function L(e,t,n){if(t>N)throw f=!0,n&&(e.precision=n),Error(b);return O(new e(h),t,1,!0)}function z(e,t,n){if(t>S)throw Error(b);return O(new e(d),t,n,!0)}function P(e){var t=e.length-1,n=7*t+1;if(t=e[t]){for(;t%10==0;t/=10)n--;for(t=e[0];t>=10;t/=10)n++}return n}function W(e){for(var t="";e--;)t+="0";return t}function U(e,t,n,r){var s,i=new e(1),a=Math.ceil(r/7+4);for(f=!1;;){if(n%2&&ee((i=i.times(t)).d,a)&&(s=!0),0===(n=w(n/2))){n=i.d.length-1,s&&0===i.d[n]&&++i.d[n];break}ee((t=t.times(t)).d,a)}return f=!0,i}function V(e){return 1&e.d[e.d.length-1]}function G(e,t,n){for(var r,s=new e(t[0]),i=0;++i<t.length;){if(!(r=new e(t[i])).s){s=r;break}s[n](r)&&(s=r)}return s}function H(e,t){var n,r,s,i,a,o,u,l=0,c=0,h=0,d=e.constructor,p=d.rounding,m=d.precision;if(!e.d||!e.d[0]||e.e>17)return new d(e.d?e.d[0]?e.s<0?0:1/0:1:e.s?e.s<0?0:e:NaN);for(null==t?(f=!1,u=m):u=t,o=new d(.03125);e.e>-2;)e=e.times(o),h+=5;for(u+=r=Math.log(v(2,h))/Math.LN10*2+5|0,n=i=a=new d(1),d.precision=u;;){if(i=O(i.times(e),u,1),n=n.times(++c),T((o=a.plus(_(i,n,u,1))).d).slice(0,u)===T(a.d).slice(0,u)){for(s=h;s--;)a=O(a.times(a),u,1);if(null!=t)return d.precision=m,a;if(!(l<3&&F(a.d,u-r,p,l)))return O(a,d.precision=m,p,f=!0);d.precision=u+=10,n=i=o=new d(1),c=0,l++}a=o}}function j(e,t){var n,r,s,i,a,o,u,l,c,h,d,p=1,m=e,g=m.d,b=m.constructor,x=b.rounding,y=b.precision;if(m.s<0||!g||!g[0]||!m.e&&1==g[0]&&1==g.length)return new b(g&&!g[0]?-1/0:1!=m.s?NaN:g?0:m);if(null==t?(f=!1,c=y):c=t,b.precision=c+=10,r=(n=T(g)).charAt(0),!(Math.abs(i=m.e)<15e14))return l=L(b,c+2,y).times(i+""),m=j(new b(r+"."+n.slice(1)),c-10).plus(l),b.precision=y,null==t?O(m,y,x,f=!0):m;for(;r<7&&1!=r||1==r&&n.charAt(1)>3;)r=(n=T((m=m.times(e)).d)).charAt(0),p++;for(i=m.e,r>1?(m=new b("0."+n),i++):m=new b(r+"."+n.slice(1)),h=m,u=a=m=_(m.minus(1),m.plus(1),c,1),d=O(m.times(m),c,1),s=3;;){if(a=O(a.times(d),c,1),T((l=u.plus(_(a,new b(s),c,1))).d).slice(0,c)===T(u.d).slice(0,c)){if(u=u.times(2),0!==i&&(u=u.plus(L(b,c+2,y).times(i+""))),u=_(u,new b(p),c,1),null!=t)return b.precision=y,u;if(!F(u.d,c-10,x,o))return O(u,b.precision=y,x,f=!0);b.precision=c+=10,l=a=m=_(h.minus(1),h.plus(1),c,1),d=O(m.times(m),c,1),s=o=1}u=l,s+=2}}function q(e){return String(e.s*e.s/0)}function K(e,t){var n,r,s;for((n=t.indexOf("."))>-1&&(t=t.replace(".","")),(r=t.search(/e/i))>0?(n<0&&(n=r),n+=+t.slice(r+1),t=t.substring(0,r)):n<0&&(n=t.length),r=0;48===t.charCodeAt(r);r++);for(s=t.length;48===t.charCodeAt(s-1);--s);if(t=t.slice(r,s)){if(s-=r,e.e=n=n-r-1,e.d=[],r=(n+1)%7,n<0&&(r+=7),r<s){for(r&&e.d.push(+t.slice(0,r)),s-=7;r<s;)e.d.push(+t.slice(r,r+=7));r=7-(t=t.slice(r)).length}else r-=s;for(;r--;)t+="0";e.d.push(+t),f&&(e.e>e.constructor.maxE?(e.d=null,e.e=NaN):e.e<e.constructor.minE&&(e.e=0,e.d=[0]))}else e.e=0,e.d=[0];return e}function X(e,t){var n,r,s,i,a,o,u,l,c;if(t.indexOf("_")>-1){if(t=t.replace(/(\d)_(?=\d)/g,"$1"),D.test(t))return K(e,t)}else if("Infinity"===t||"NaN"===t)return+t||(e.s=NaN),e.e=NaN,e.d=null,e;if(I.test(t))n=16,t=t.toLowerCase();else if(k.test(t))n=2;else{if(!C.test(t))throw Error(g+t);n=8}for((i=t.search(/p/i))>0?(u=+t.slice(i+1),t=t.substring(2,i)):t=t.slice(2),a=(i=t.indexOf("."))>=0,r=e.constructor,a&&(i=(o=(t=t.replace(".","")).length)-i,s=U(r,new r(n),i,2*i)),i=c=(l=R(t,n,E)).length-1;0===l[i];--i)l.pop();return i<0?new r(0*e.s):(e.e=B(l,c),e.d=l,f=!1,a&&(e=_(e,s,4*o)),u&&(e=e.times(Math.abs(u)<54?v(2,u):We.pow(2,u))),f=!0,e)}function Y(e,t,n,r,s){var i,a,o,u,l=e.precision,c=Math.ceil(l/7);for(f=!1,u=n.times(n),o=new e(r);;){if(a=_(o.times(u),new e(t++*t++),l,1),o=s?r.plus(a):r.minus(a),r=_(a.times(u),new e(t++*t++),l,1),void 0!==(a=o.plus(r)).d[c]){for(i=c;a.d[i]===o.d[i]&&i--;);if(-1==i)break}i=o,o=r,r=a,a=i}return f=!0,a.d.length=c+1,a}function Z(e,t){for(var n=e;--t;)n*=e;return n}function J(e,t){var n,r=t.s<0,s=z(e,e.precision,1),i=s.times(.5);if((t=t.abs()).lte(i))return o=r?4:1,t;if((n=t.divToInt(s)).isZero())o=r?3:2;else{if((t=t.minus(n.times(s))).lte(i))return o=V(n)?r?2:3:r?4:1,t;o=V(n)?r?1:4:r?3:2}return t.minus(s).abs()}function Q(e,t,n,r){var s,i,o,u,h,d,p,f,m,g=e.constructor,b=void 0!==n;if(b?(A(n,1,l),void 0===r?r=g.rounding:A(r,0,8)):(n=g.precision,r=g.rounding),e.isFinite()){for(b?(s=2,16==t?n=4*n-3:8==t&&(n=3*n-2)):s=t,(o=(p=M(e)).indexOf("."))>=0&&(p=p.replace(".",""),(m=new g(1)).e=p.length-o,m.d=R(M(m),10,s),m.e=m.d.length),i=h=(f=R(p,10,s)).length;0==f[--h];)f.pop();if(f[0]){if(o<0?i--:((e=new g(e)).d=f,e.e=i,f=(e=_(e,m,n,r,0,s)).d,i=e.e,d=a),o=f[n],u=s/2,d=d||void 0!==f[n+1],d=r<4?(void 0!==o||d)&&(0===r||r===(e.s<0?3:2)):o>u||o===u&&(4===r||d||6===r&&1&f[n-1]||r===(e.s<0?8:7)),f.length=n,d)for(;++f[--n]>s-1;)f[n]=0,n||(++i,f.unshift(1));for(h=f.length;!f[h-1];--h);for(o=0,p="";o<h;o++)p+=c.charAt(f[o]);if(b){if(h>1)if(16==t||8==t){for(o=16==t?4:3,--h;h%o;h++)p+="0";for(h=(f=R(p,s,t)).length;!f[h-1];--h);for(o=1,p="1.";o<h;o++)p+=c.charAt(f[o])}else p=p.charAt(0)+"."+p.slice(1);p=p+(i<0?"p":"p+")+i}else if(i<0){for(;++i;)p="0"+p;p="0."+p}else if(++i>h)for(i-=h;i--;)p+="0";else i<h&&(p=p.slice(0,i)+"."+p.slice(i))}else p=b?"0p+0":"0";p=(16==t?"0x":2==t?"0b":8==t?"0o":"")+p}else p=q(e);return e.s<0?"-"+p:p}function ee(e,t){if(e.length>t)return e.length=t,!0}function te(e){return new this(e).abs()}function ne(e){return new this(e).acos()}function re(e){return new this(e).acosh()}function se(e,t){return new this(e).plus(t)}function ie(e){return new this(e).asin()}function ae(e){return new this(e).asinh()}function oe(e){return new this(e).atan()}function ue(e){return new this(e).atanh()}function le(e,t){e=new this(e),t=new this(t);var n,r=this.precision,s=this.rounding,i=r+4;return e.s&&t.s?e.d||t.d?!t.d||e.isZero()?(n=t.s<0?z(this,r,s):new this(0)).s=e.s:!e.d||t.isZero()?(n=z(this,i,1).times(.5)).s=e.s:t.s<0?(this.precision=i,this.rounding=1,n=this.atan(_(e,t,i,1)),t=z(this,i,1),this.precision=r,this.rounding=s,n=e.s<0?n.minus(t):n.plus(t)):n=this.atan(_(e,t,i,1)):(n=z(this,i,1).times(t.s>0?.25:.75)).s=e.s:n=new this(NaN),n}function ce(e){return new this(e).cbrt()}function he(e){return O(e=new this(e),e.e+1,2)}function de(e,t,n){return new this(e).clamp(t,n)}function pe(e){if(!e||"object"!=typeof e)throw Error(m+"Object expected");var t,n,r,s=!0===e.defaults,i=["precision",1,l,"rounding",0,8,"toExpNeg",-u,0,"toExpPos",0,u,"maxE",0,u,"minE",-u,0,"modulo",0,9];for(t=0;t<i.length;t+=3)if(n=i[t],s&&(this[n]=p[n]),void 0!==(r=e[n])){if(!(w(r)===r&&r>=i[t+1]&&r<=i[t+2]))throw Error(g+n+": "+r);this[n]=r}if(n="crypto",s&&(this[n]=p[n]),void 0!==(r=e[n])){if(!0!==r&&!1!==r&&0!==r&&1!==r)throw Error(g+n+": "+r);if(r){if("undefined"==typeof crypto||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw Error(x);this[n]=!0}else this[n]=!1}return this}function fe(e){return new this(e).cos()}function me(e){return new this(e).cosh()}function ge(e,t){return new this(e).div(t)}function be(e){return new this(e).exp()}function xe(e){return O(e=new this(e),e.e+1,3)}function ye(){var e,t,n=new this(0);for(f=!1,e=0;e<arguments.length;)if((t=new this(arguments[e++])).d)n.d&&(n=n.plus(t.times(t)));else{if(t.s)return f=!0,new this(1/0);n=t}return f=!0,n.sqrt()}function we(e){return e instanceof We||e&&e.toStringTag===y||!1}function ve(e){return new this(e).ln()}function ke(e,t){return new this(e).log(t)}function Ie(e){return new this(e).log(2)}function Ce(e){return new this(e).log(10)}function De(){return G(this,arguments,"lt")}function Ee(){return G(this,arguments,"gt")}function Ne(e,t){return new this(e).mod(t)}function Se(e,t){return new this(e).mul(t)}function $e(e,t){return new this(e).pow(t)}function Te(e){var t,n,r,s,i=0,a=new this(1),o=[];if(void 0===e?e=this.precision:A(e,1,l),r=Math.ceil(e/7),this.crypto)if(crypto.getRandomValues)for(t=crypto.getRandomValues(new Uint32Array(r));i<r;)(s=t[i])>=429e7?t[i]=crypto.getRandomValues(new Uint32Array(1))[0]:o[i++]=s%1e7;else{if(!crypto.randomBytes)throw Error(x);for(t=crypto.randomBytes(r*=4);i<r;)(s=t[i]+(t[i+1]<<8)+(t[i+2]<<16)+((127&t[i+3])<<24))>=214e7?crypto.randomBytes(4).copy(t,i):(o.push(s%1e7),i+=4);i=r/4}else for(;i<r;)o[i++]=1e7*Math.random()|0;for(e%=7,(r=o[--i])&&e&&(s=v(10,7-e),o[i]=(r/s|0)*s);0===o[i];i--)o.pop();if(i<0)n=0,o=[0];else{for(n=-1;0===o[0];n-=7)o.shift();for(r=1,s=o[0];s>=10;s/=10)r++;r<7&&(n-=7-r)}return a.e=n,a.d=o,a}function Ae(e){return O(e=new this(e),e.e+1,this.rounding)}function Fe(e){return(e=new this(e)).d?e.d[0]?e.s:0*e.s:e.s||NaN}function Re(e){return new this(e).sin()}function _e(e){return new this(e).sinh()}function Oe(e){return new this(e).sqrt()}function Me(e,t){return new this(e).sub(t)}function Be(){var e=0,t=arguments,n=new this(t[e]);for(f=!1;n.s&&++e<t.length;)n=n.plus(t[e]);return f=!0,O(n,this.precision,this.rounding)}function Le(e){return new this(e).tan()}function ze(e){return new this(e).tanh()}function Pe(e){return O(e=new this(e),e.e+1,1)}$[Symbol.for("nodejs.util.inspect.custom")]=$.toString,$[Symbol.toStringTag]="Decimal";var We=$.constructor=function e(t){var n,r,s;function i(e){var t,n,r,s=this;if(!(s instanceof i))return new i(e);if(s.constructor=i,we(e))return s.s=e.s,void(f?!e.d||e.e>i.maxE?(s.e=NaN,s.d=null):e.e<i.minE?(s.e=0,s.d=[0]):(s.e=e.e,s.d=e.d.slice()):(s.e=e.e,s.d=e.d?e.d.slice():e.d));if("number"==(r=typeof e)){if(0===e)return s.s=1/e<0?-1:1,s.e=0,void(s.d=[0]);if(e<0?(e=-e,s.s=-1):s.s=1,e===~~e&&e<1e7){for(t=0,n=e;n>=10;n/=10)t++;return void(f?t>i.maxE?(s.e=NaN,s.d=null):t<i.minE?(s.e=0,s.d=[0]):(s.e=t,s.d=[e]):(s.e=t,s.d=[e]))}return 0*e!=0?(e||(s.s=NaN),s.e=NaN,void(s.d=null)):K(s,e.toString())}if("string"!==r)throw Error(g+e);return 45===(n=e.charCodeAt(0))?(e=e.slice(1),s.s=-1):(43===n&&(e=e.slice(1)),s.s=1),D.test(e)?K(s,e):X(s,e)}if(i.prototype=$,i.ROUND_UP=0,i.ROUND_DOWN=1,i.ROUND_CEIL=2,i.ROUND_FLOOR=3,i.ROUND_HALF_UP=4,i.ROUND_HALF_DOWN=5,i.ROUND_HALF_EVEN=6,i.ROUND_HALF_CEIL=7,i.ROUND_HALF_FLOOR=8,i.EUCLID=9,i.config=i.set=pe,i.clone=e,i.isDecimal=we,i.abs=te,i.acos=ne,i.acosh=re,i.add=se,i.asin=ie,i.asinh=ae,i.atan=oe,i.atanh=ue,i.atan2=le,i.cbrt=ce,i.ceil=he,i.clamp=de,i.cos=fe,i.cosh=me,i.div=ge,i.exp=be,i.floor=xe,i.hypot=ye,i.ln=ve,i.log=ke,i.log10=Ce,i.log2=Ie,i.max=De,i.min=Ee,i.mod=Ne,i.mul=Se,i.pow=$e,i.random=Te,i.round=Ae,i.sign=Fe,i.sin=Re,i.sinh=_e,i.sqrt=Oe,i.sub=Me,i.sum=Be,i.tan=Le,i.tanh=ze,i.trunc=Pe,void 0===t&&(t={}),t&&!0!==t.defaults)for(s=["precision","rounding","toExpNeg","toExpPos","maxE","minE","modulo","crypto"],n=0;n<s.length;)t.hasOwnProperty(r=s[n++])||(t[r]=this[r]);return i.config(t),i}(p);h=new We(h),d=new We(d);const Ue=We;function Ve(e){return"number"==typeof e}function Ge(e){return!(!e||"object"!=typeof e||"function"!=typeof e.constructor)&&(!0===e.isBigNumber&&"object"==typeof e.constructor.prototype&&!0===e.constructor.prototype.isBigNumber||"function"==typeof e.constructor.isDecimal&&!0===e.constructor.isDecimal(e))}function He(e){return e&&"object"==typeof e&&!0===Object.getPrototypeOf(e).isComplex||!1}function je(e){return e&&"object"==typeof e&&!0===Object.getPrototypeOf(e).isFraction||!1}function qe(e){return e&&!0===e.constructor.prototype.isUnit||!1}function Ke(e){return"string"==typeof e}var Xe=Array.isArray;function Ye(e){return e&&!0===e.constructor.prototype.isMatrix||!1}function Ze(e){return Array.isArray(e)||Ye(e)}function Je(e){return e&&e.isDenseMatrix&&!0===e.constructor.prototype.isMatrix||!1}function Qe(e){return e&&e.isSparseMatrix&&!0===e.constructor.prototype.isMatrix||!1}function et(e){return e&&!0===e.constructor.prototype.isRange||!1}function tt(e){return e&&!0===e.constructor.prototype.isIndex||!1}function nt(e){return"boolean"==typeof e}function rt(e){return e&&!0===e.constructor.prototype.isResultSet||!1}function st(e){return e&&!0===e.constructor.prototype.isHelp||!1}function it(e){return"function"==typeof e}function at(e){return e instanceof Date}function ot(e){return e instanceof RegExp}function ut(e){return!(!e||"object"!=typeof e||e.constructor!==Object||He(e)||je(e))}function lt(e){return null===e}function ct(e){return void 0===e}function ht(e){return e&&!0===e.isAccessorNode&&!0===e.constructor.prototype.isNode||!1}function dt(e){return e&&!0===e.isArrayNode&&!0===e.constructor.prototype.isNode||!1}function pt(e){return e&&!0===e.isAssignmentNode&&!0===e.constructor.prototype.isNode||!1}function ft(e){return e&&!0===e.isBlockNode&&!0===e.constructor.prototype.isNode||!1}function mt(e){return e&&!0===e.isConditionalNode&&!0===e.constructor.prototype.isNode||!1}function gt(e){return e&&!0===e.isConstantNode&&!0===e.constructor.prototype.isNode||!1}function bt(e){return e&&!0===e.isFunctionAssignmentNode&&!0===e.constructor.prototype.isNode||!1}function xt(e){return e&&!0===e.isFunctionNode&&!0===e.constructor.prototype.isNode||!1}function yt(e){return e&&!0===e.isIndexNode&&!0===e.constructor.prototype.isNode||!1}function wt(e){return e&&!0===e.isNode&&!0===e.constructor.prototype.isNode||!1}function vt(e){return e&&!0===e.isObjectNode&&!0===e.constructor.prototype.isNode||!1}function kt(e){return e&&!0===e.isOperatorNode&&!0===e.constructor.prototype.isNode||!1}function It(e){return e&&!0===e.isParenthesisNode&&!0===e.constructor.prototype.isNode||!1}function Ct(e){return e&&!0===e.isRangeNode&&!0===e.constructor.prototype.isNode||!1}function Dt(e){return e&&!0===e.isRelationalNode&&!0===e.constructor.prototype.isNode||!1}function Et(e){return e&&!0===e.isSymbolNode&&!0===e.constructor.prototype.isNode||!1}function Nt(e){return e&&!0===e.constructor.prototype.isChain||!1}function St(e){var t=typeof e;return"object"===t?null===e?"null":Ge(e)?"BigNumber":e.constructor&&e.constructor.name?e.constructor.name:"Object":t}function $t(e){var t=typeof e;if("number"===t||"string"===t||"boolean"===t||null==e)return e;if("function"==typeof e.clone)return e.clone();if(Array.isArray(e))return e.map((function(e){return $t(e)}));if(e instanceof Date)return new Date(e.valueOf());if(Ge(e))return e;if(e instanceof RegExp)throw new TypeError("Cannot clone "+e);return function(e,t){var n={};for(var r in e)At(e,r)&&(n[r]=t(e[r]));return n}(e,$t)}function Tt(e,t){var n,r,s;if(Array.isArray(e)){if(!Array.isArray(t))return!1;if(e.length!==t.length)return!1;for(r=0,s=e.length;r<s;r++)if(!Tt(e[r],t[r]))return!1;return!0}if("function"==typeof e)return e===t;if(e instanceof Object){if(Array.isArray(t)||!(t instanceof Object))return!1;for(n in e)if(!(n in t)||!Tt(e[n],t[n]))return!1;for(n in t)if(!(n in e))return!1;return!0}return e===t}function At(e,t){return e&&Object.hasOwnProperty.call(e,t)}function Ft(e,t,n,r){function s(r){var s=function(e,t){for(var n={},r=0;r<t.length;r++){var s=t[r],i=e[s];void 0!==i&&(n[s]=i)}return n}(r,t.map(Rt));return function(e,t,n){if(!t.filter((e=>!function(e){return e&&"?"===e[0]}(e))).every((e=>void 0!==n[e]))){var r=t.filter((e=>void 0===n[e]));throw new Error('Cannot create function "'.concat(e,'", ')+"some dependencies are missing: ".concat(r.map((e=>'"'.concat(e,'"'))).join(", "),"."))}}(e,t,r),n(s)}return s.isFactory=!0,s.fn=e,s.dependencies=t.slice().sort(),r&&(s.meta=r),s}function Rt(e){return e&&"?"===e[0]?e.slice(1):e}var _t=Ft("BigNumber",["?on","config"],(e=>{var{on:t,config:n}=e,r=Ue.clone({precision:n.precision,modulo:Ue.EUCLID});return r.prototype=Object.create(r.prototype),r.prototype.type="BigNumber",r.prototype.isBigNumber=!0,r.prototype.toJSON=function(){return{mathjs:"BigNumber",value:this.toString()}},r.fromJSON=function(e){return new r(e.value)},t&&t("config",(function(e,t){e.precision!==t.precision&&r.config({precision:e.precision})})),r}),{isClass:!0}),Ot=n(684);function Mt(e){return"boolean"==typeof e||!!isFinite(e)&&e===Math.round(e)}Math.sign,Math.log2,Math.log10,Math.log1p,Math.cbrt,Math.expm1;function Bt(e,t,n){var r={2:"0b",8:"0o",16:"0x"}[t],s="";if(n){if(n<1)throw new Error("size must be in greater than 0");if(!Mt(n))throw new Error("size must be an integer");if(e>2**(n-1)-1||e<-(2**(n-1)))throw new Error("Value must be in range [-2^".concat(n-1,", 2^").concat(n-1,"-1]"));if(!Mt(e))throw new Error("Value must be an integer");e<0&&(e+=2**n),s="i".concat(n)}var i="";return e<0&&(e=-e,i="-"),"".concat(i).concat(r).concat(e.toString(t)).concat(s)}function Lt(e,t){if("function"==typeof t)return t(e);if(e===1/0)return"Infinity";if(e===-1/0)return"-Infinity";if(isNaN(e))return"NaN";var n,r,s="auto";if(t&&(t.notation&&(s=t.notation),Ve(t)?n=t:Ve(t.precision)&&(n=t.precision),t.wordSize&&"number"!=typeof(r=t.wordSize)))throw new Error('Option "wordSize" must be a number');switch(s){case"fixed":return function(e,t){if(isNaN(e)||!isFinite(e))return String(e);var n=zt(e),r="number"==typeof t?Wt(n,n.exponent+1+t):n,s=r.coefficients,i=r.exponent+1,a=i+(t||0);return s.length<a&&(s=s.concat(Ut(a-s.length))),i<0&&(s=Ut(1-i).concat(s),i=1),i<s.length&&s.splice(i,0,0===i?"0.":"."),r.sign+s.join("")}(e,n);case"exponential":return Pt(e,n);case"engineering":return function(e,t){if(isNaN(e)||!isFinite(e))return String(e);var n=Wt(zt(e),t),r=n.exponent,s=n.coefficients,i=r%3==0?r:r<0?r-3-r%3:r-r%3;if(Ve(t))for(;t>s.length||r-i+1>s.length;)s.push(0);else for(var a=Math.abs(r-i)-(s.length-1),o=0;o<a;o++)s.push(0);for(var u=Math.abs(r-i),l=1;u>0;)l++,u--;var c=s.slice(l).join(""),h=Ve(t)&&c.length||c.match(/[1-9]/)?"."+c:"",d=s.slice(0,l).join("")+h+"e"+(r>=0?"+":"")+i.toString();return n.sign+d}(e,n);case"bin":return Bt(e,2,r);case"oct":return Bt(e,8,r);case"hex":return Bt(e,16,r);case"auto":return function(e,t,n){if(isNaN(e)||!isFinite(e))return String(e);var r=n&&void 0!==n.lowerExp?n.lowerExp:-3,s=n&&void 0!==n.upperExp?n.upperExp:5,i=zt(e),a=t?Wt(i,t):i;if(a.exponent<r||a.exponent>=s)return Pt(e,t);var o=a.coefficients,u=a.exponent;o.length<t&&(o=o.concat(Ut(t-o.length))),o=o.concat(Ut(u-o.length+1+(o.length<t?t-o.length:0)));var l=u>0?u:0;return l<(o=Ut(-u).concat(o)).length-1&&o.splice(l+1,0,"."),a.sign+o.join("")}(e,n,t&&t).replace(/((\.\d*?)(0+))($|e)/,(function(){var e=arguments[2],t=arguments[4];return"."!==e?e+t:t}));default:throw new Error('Unknown notation "'+s+'". Choose "auto", "exponential", "fixed", "bin", "oct", or "hex.')}}function zt(e){var t=String(e).toLowerCase().match(/^(-?)(\d+\.?\d*)(e([+-]?\d+))?$/);if(!t)throw new SyntaxError("Invalid number "+e);var n=t[1],r=t[2],s=parseFloat(t[4]||"0"),i=r.indexOf(".");s+=-1!==i?i-1:r.length-1;var a=r.replace(".","").replace(/^0*/,(function(e){return s-=e.length,""})).replace(/0*$/,"").split("").map((function(e){return parseInt(e)}));return 0===a.length&&(a.push(0),s++),{sign:n,coefficients:a,exponent:s}}function Pt(e,t){if(isNaN(e)||!isFinite(e))return String(e);var n=zt(e),r=t?Wt(n,t):n,s=r.coefficients,i=r.exponent;s.length<t&&(s=s.concat(Ut(t-s.length)));var a=s.shift();return r.sign+a+(s.length>0?"."+s.join(""):"")+"e"+(i>=0?"+":"")+i}function Wt(e,t){for(var n={sign:e.sign,coefficients:e.coefficients,exponent:e.exponent},r=n.coefficients;t<=0;)r.unshift(0),n.exponent++,t++;if(r.length>t&&r.splice(t,r.length-t)[0]>=5){var s=t-1;for(r[s]++;10===r[s];)r.pop(),0===s&&(r.unshift(0),n.exponent++,s++),r[--s]++}return n}function Ut(e){for(var t=[],n=0;n<e;n++)t.push(0);return t}var Vt=Number.EPSILON||2220446049250313e-31;Math.acosh,Math.asinh,Math.atanh,Math.cosh,Math.sinh;Math.tanh;var Gt=Ft("Complex",[],(()=>(Object.defineProperty(Ot,"name",{value:"Complex"}),Ot.prototype.constructor=Ot,Ot.prototype.type="Complex",Ot.prototype.isComplex=!0,Ot.prototype.toJSON=function(){return{mathjs:"Complex",re:this.re,im:this.im}},Ot.prototype.toPolar=function(){return{r:this.abs(),phi:this.arg()}},Ot.prototype.format=function(e){var t=this.im,n=this.re,r=Lt(this.re,e),s=Lt(this.im,e),i=Ve(e)?e:e?e.precision:null;if(null!==i){var a=Math.pow(10,-i);Math.abs(n/t)<a&&(n=0),Math.abs(t/n)<a&&(t=0)}return 0===t?r:0===n?1===t?"i":-1===t?"-i":s+"i":t<0?-1===t?r+" - i":r+" - "+s.substring(1)+"i":1===t?r+" + i":r+" + "+s+"i"},Ot.fromPolar=function(e){switch(arguments.length){case 1:var t=arguments[0];if("object"==typeof t)return Ot(t);throw new TypeError("Input has to be an object with r and phi keys.");case 2:var n=arguments[0],r=arguments[1];if(Ve(n)){if(qe(r)&&r.hasBase("ANGLE")&&(r=r.toNumber("rad")),Ve(r))return new Ot({r:n,phi:r});throw new TypeError("Phi is not a number nor an angle unit.")}throw new TypeError("Radius r is not a number.");default:throw new SyntaxError("Wrong number of arguments in function fromPolar")}},Ot.prototype.valueOf=Ot.prototype.toString,Ot.fromJSON=function(e){return new Ot(e)},Ot.compare=function(e,t){return e.re>t.re?1:e.re<t.re?-1:e.im>t.im?1:e.im<t.im?-1:0},Ot)),{isClass:!0});function Ht(e){var t=0,n=1,r=Object.create(null),s=Object.create(null),i=0,a=function(e){var a=s[e];if(a&&(delete r[a],delete s[e],--t,n===a)){if(!t)return i=0,void(n=1);for(;!hasOwnProperty.call(r,++n););}};return e=Math.abs(e),{hit:function(o){var u=s[o],l=++i;if(r[l]=o,s[o]=l,!u){if(++t<=e)return;return o=r[n],a(o),o}if(delete r[u],n===u)for(;!hasOwnProperty.call(r,++n););},delete:a,clear:function(){t=i=0,n=1,r=Object.create(null),s=Object.create(null)}}}function jt(e){var{hasher:t,limit:n}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return n=null==n?Number.POSITIVE_INFINITY:n,t=null==t?JSON.stringify:t,function r(){"object"!=typeof r.cache&&(r.cache={values:new Map,lru:Ht(n||Number.POSITIVE_INFINITY)});for(var s=[],i=0;i<arguments.length;i++)s[i]=arguments[i];var a=t(s);if(r.cache.values.has(a))return r.cache.lru.hit(a),r.cache.values.get(a);var o=e.apply(e,s);return r.cache.values.set(a,o),r.cache.values.delete(r.cache.lru.hit(a)),o}}jt((function(e){return new e(1).exp()}),{hasher:Kt}),jt((function(e){return new e(1).plus(new e(5).sqrt()).div(2)}),{hasher:Kt});var qt=jt((function(e){return e.acos(-1)}),{hasher:Kt});function Kt(e){return e[0].precision}function Xt(e,t){return Ft(e,["config","BigNumber"],(e=>{var{config:n,BigNumber:r}=e;return"BigNumber"===n.number?new r(t):t}))}jt((function(e){return qt(e).times(2)}),{hasher:Kt}),Math.PI,Math.PI,Math.E,Xt("fineStructure",.0072973525693),Xt("weakMixingAngle",.2229),Xt("efimovFactor",22.7),Xt("sackurTetrode",-1.16487052358);var Yt=n(201),Zt=Ft("Fraction",[],(()=>(Object.defineProperty(Yt,"name",{value:"Fraction"}),Yt.prototype.constructor=Yt,Yt.prototype.type="Fraction",Yt.prototype.isFraction=!0,Yt.prototype.toJSON=function(){return{mathjs:"Fraction",n:this.s*this.n,d:this.d}},Yt.fromJSON=function(e){return new Yt(e)},Yt)),{isClass:!0}),Jt=Ft("Matrix",[],(()=>{function e(){if(!(this instanceof e))throw new SyntaxError("Constructor must be called with the new operator")}return e.prototype.type="Matrix",e.prototype.isMatrix=!0,e.prototype.storage=function(){throw new Error("Cannot invoke storage on a Matrix interface")},e.prototype.datatype=function(){throw new Error("Cannot invoke datatype on a Matrix interface")},e.prototype.create=function(e,t){throw new Error("Cannot invoke create on a Matrix interface")},e.prototype.subset=function(e,t,n){throw new Error("Cannot invoke subset on a Matrix interface")},e.prototype.get=function(e){throw new Error("Cannot invoke get on a Matrix interface")},e.prototype.set=function(e,t,n){throw new Error("Cannot invoke set on a Matrix interface")},e.prototype.resize=function(e,t){throw new Error("Cannot invoke resize on a Matrix interface")},e.prototype.reshape=function(e,t){throw new Error("Cannot invoke reshape on a Matrix interface")},e.prototype.clone=function(){throw new Error("Cannot invoke clone on a Matrix interface")},e.prototype.size=function(){throw new Error("Cannot invoke size on a Matrix interface")},e.prototype.map=function(e,t){throw new Error("Cannot invoke map on a Matrix interface")},e.prototype.forEach=function(e){throw new Error("Cannot invoke forEach on a Matrix interface")},e.prototype[Symbol.iterator]=function(){throw new Error("Cannot iterate a Matrix interface")},e.prototype.toArray=function(){throw new Error("Cannot invoke toArray on a Matrix interface")},e.prototype.valueOf=function(){throw new Error("Cannot invoke valueOf on a Matrix interface")},e.prototype.format=function(e){throw new Error("Cannot invoke format on a Matrix interface")},e.prototype.toString=function(){throw new Error("Cannot invoke toString on a Matrix interface")},e}),{isClass:!0});function Qt(e,t,n){var r=new(0,e.constructor)(2),s="";if(n){if(n<1)throw new Error("size must be in greater than 0");if(!Mt(n))throw new Error("size must be an integer");if(e.greaterThan(r.pow(n-1).sub(1))||e.lessThan(r.pow(n-1).mul(-1)))throw new Error("Value must be in range [-2^".concat(n-1,", 2^").concat(n-1,"-1]"));if(!e.isInteger())throw new Error("Value must be an integer");e.lessThan(0)&&(e=e.add(r.pow(n))),s="i".concat(n)}switch(t){case 2:return"".concat(e.toBinary()).concat(s);case 8:return"".concat(e.toOctal()).concat(s);case 16:return"".concat(e.toHexadecimal()).concat(s);default:throw new Error("Base ".concat(t," not supported "))}}function en(e,t){return void 0!==t?e.toExponential(t-1):e.toExponential()}function tn(e,t){var n=function(e,t){return"number"==typeof e?Lt(e,t):Ge(e)?function(e,t){if("function"==typeof t)return t(e);if(!e.isFinite())return e.isNaN()?"NaN":e.gt(0)?"Infinity":"-Infinity";var n,r,s="auto";if(void 0!==t&&(t.notation&&(s=t.notation),"number"==typeof t?n=t:t.precision&&(n=t.precision),t.wordSize&&"number"!=typeof(r=t.wordSize)))throw new Error('Option "wordSize" must be a number');switch(s){case"fixed":return function(e,t){return e.toFixed(t)}(e,n);case"exponential":return en(e,n);case"engineering":return function(e,t){var n=e.e,r=n%3==0?n:n<0?n-3-n%3:n-n%3,s=e.mul(Math.pow(10,-r)),i=s.toPrecision(t);return-1!==i.indexOf("e")&&(i=s.toString()),i+"e"+(n>=0?"+":"")+r.toString()}(e,n);case"bin":return Qt(e,2,r);case"oct":return Qt(e,8,r);case"hex":return Qt(e,16,r);case"auto":var i=t&&void 0!==t.lowerExp?t.lowerExp:-3,a=t&&void 0!==t.upperExp?t.upperExp:5;if(e.isZero())return"0";var o=e.toSignificantDigits(n),u=o.e;return(u>=i&&u<a?o.toFixed():en(e,n)).replace(/((\.\d*?)(0+))($|e)/,(function(){var e=arguments[2],t=arguments[4];return"."!==e?e+t:t}));default:throw new Error('Unknown notation "'+s+'". Choose "auto", "exponential", "fixed", "bin", "oct", or "hex.')}}(e,t):function(e){return e&&"object"==typeof e&&"number"==typeof e.s&&"number"==typeof e.n&&"number"==typeof e.d||!1}(e)?t&&"decimal"===t.fraction?e.toString():e.s*e.n+"/"+e.d:Array.isArray(e)?nn(e,t):Ke(e)?'"'+e+'"':"function"==typeof e?e.syntax?String(e.syntax):"function":e&&"object"==typeof e?"function"==typeof e.format?e.format(t):e&&e.toString(t)!=={}.toString()?e.toString(t):"{"+Object.keys(e).map((n=>'"'+n+'": '+tn(e[n],t))).join(", ")+"}":String(e)}(e,t);return t&&"object"==typeof t&&"truncate"in t&&n.length>t.truncate?n.substring(0,t.truncate-3)+"...":n}function nn(e,t){if(Array.isArray(e)){for(var n="[",r=e.length,s=0;s<r;s++)0!==s&&(n+=", "),n+=nn(e[s],t);return n+"]"}return tn(e,t)}function rn(e,t,n){if(!(this instanceof rn))throw new SyntaxError("Constructor must be called with the new operator");this.actual=e,this.expected=t,this.relation=n,this.message="Dimension mismatch ("+(Array.isArray(e)?"["+e.join(", ")+"]":e)+" "+(this.relation||"!=")+" "+(Array.isArray(t)?"["+t.join(", ")+"]":t)+")",this.stack=(new Error).stack}function sn(e,t,n){if(!(this instanceof sn))throw new SyntaxError("Constructor must be called with the new operator");this.index=e,arguments.length<3?(this.min=0,this.max=t):(this.min=t,this.max=n),void 0!==this.min&&this.index<this.min?this.message="Index out of range ("+this.index+" < "+this.min+")":void 0!==this.max&&this.index>=this.max?this.message="Index out of range ("+this.index+" > "+(this.max-1)+")":this.message="Index out of range ("+this.index+")",this.stack=(new Error).stack}function an(e){for(var t=[];Array.isArray(e);)t.push(e.length),e=e[0];return t}function on(e,t,n){var r,s=e.length;if(s!==t[n])throw new rn(s,t[n]);if(n<t.length-1){var i=n+1;for(r=0;r<s;r++){var a=e[r];if(!Array.isArray(a))throw new rn(t.length-1,t.length,"<");on(e[r],t,i)}}else for(r=0;r<s;r++)if(Array.isArray(e[r]))throw new rn(t.length+1,t.length,">")}function un(e,t){if(0===t.length){if(Array.isArray(e))throw new rn(e.length,0)}else on(e,t,0)}function ln(e,t){if(!Ve(e)||!Mt(e))throw new TypeError("Index must be an integer (value: "+e+")");if(e<0||"number"==typeof t&&e>=t)throw new sn(e,t)}function cn(e,t,n){if(!Array.isArray(e)||!Array.isArray(t))throw new TypeError("Array expected");if(0===t.length)throw new Error("Resizing to scalar is not supported");return t.forEach((function(e){if(!Ve(e)||!Mt(e)||e<0)throw new TypeError("Invalid size, must contain positive integers (size: "+tn(t)+")")})),hn(e,t,0,void 0!==n?n:0),e}function hn(e,t,n,r){var s,i,a=e.length,o=t[n],u=Math.min(a,o);if(e.length=o,n<t.length-1){var l=n+1;for(s=0;s<u;s++)i=e[s],Array.isArray(i)||(i=[i],e[s]=i),hn(i,t,l,r);for(s=u;s<o;s++)i=[],e[s]=i,hn(i,t,l,r)}else{for(s=0;s<u;s++)for(;Array.isArray(e[s]);)e[s]=e[s][0];for(s=u;s<o;s++)e[s]=r}}function dn(e,t){var n=function(e){if(!Array.isArray(e))return e;var t=[];return e.forEach((function e(n){Array.isArray(n)?n.forEach(e):t.push(n)})),t}(e),r=n.length;if(!Array.isArray(e)||!Array.isArray(t))throw new TypeError("Array expected");if(0===t.length)throw new rn(0,r,"!=");var s=fn(t=pn(t,r));if(r!==s)throw new rn(s,r,"!=");try{return function(e,t){for(var n,r=e,s=t.length-1;s>0;s--){var i=t[s];n=[];for(var a=r.length/i,o=0;o<a;o++)n.push(r.slice(o*i,(o+1)*i));r=n}return r}(n,t)}catch(e){if(e instanceof rn)throw new rn(s,r,"!=");throw e}}function pn(e,t){var n=fn(e),r=e.slice(),s=e.indexOf(-1);if(e.indexOf(-1,s+1)>=0)throw new Error("More than one wildcard in sizes");if(s>=0){if(t%n!=0)throw new Error("Could not replace wildcard, since "+t+" is no multiple of "+-n);r[s]=-t/n}return r}function fn(e){return e.reduce(((e,t)=>e*t),1)}function mn(e,t,n,r){var s=r||an(e);if(n)for(var i=0;i<n;i++)e=[e],s.unshift(1);for(e=gn(e,t,0);s.length<t;)s.push(1);return e}function gn(e,t,n){var r,s;if(Array.isArray(e)){var i=n+1;for(r=0,s=e.length;r<s;r++)e[r]=gn(e[r],t,i)}else for(var a=n;a<t;a++)e=[e];return e}function bn(e,t){for(var n,r=0,s=0;s<e.length;s++){var i=e[s],a=Array.isArray(i);if(0===s&&a&&(r=i.length),a&&i.length!==r)return;var o=a?bn(i,t):t(i);if(void 0===n)n=o;else if(n!==o)return"mixed"}return n}rn.prototype=new RangeError,rn.prototype.constructor=RangeError,rn.prototype.name="DimensionError",rn.prototype.isDimensionError=!0,sn.prototype=new RangeError,sn.prototype.constructor=RangeError,sn.prototype.name="IndexError",sn.prototype.isIndexError=!0;var xn=Ft("DenseMatrix",["Matrix"],(e=>{var{Matrix:t}=e;function n(e,t){if(!(this instanceof n))throw new SyntaxError("Constructor must be called with the new operator");if(t&&!Ke(t))throw new Error("Invalid datatype: "+t);if(Ye(e))"DenseMatrix"===e.type?(this._data=$t(e._data),this._size=$t(e._size),this._datatype=t||e._datatype):(this._data=e.toArray(),this._size=e.size(),this._datatype=t||e._datatype);else if(e&&Xe(e.data)&&Xe(e.size))this._data=e.data,this._size=e.size,un(this._data,this._size),this._datatype=t||e.datatype;else if(Xe(e))this._data=l(e),this._size=an(this._data),un(this._data,this._size),this._datatype=t;else{if(e)throw new TypeError("Unsupported type of data ("+St(e)+")");this._data=[],this._size=[0],this._datatype=t}}function r(e,t){if(!tt(t))throw new TypeError("Invalid index");if(t.isScalar())return e.get(t.min());var r=t.size();if(r.length!==e._size.length)throw new rn(r.length,e._size.length);for(var i=t.min(),a=t.max(),o=0,u=e._size.length;o<u;o++)ln(i[o],e._size[o]),ln(a[o],e._size[o]);return new n(s(e._data,t,r.length,0),e._datatype)}function s(e,t,n,r){var i=r===n-1,a=t.dimension(r);return i?a.map((function(t){return ln(t,e.length),e[t]})).valueOf():a.map((function(i){return ln(i,e.length),s(e[i],t,n,r+1)})).valueOf()}function i(e,t,n,r){if(!t||!0!==t.isIndex)throw new TypeError("Invalid index");var s,i=t.size(),o=t.isScalar();if(Ye(n)?(s=n.size(),n=n.valueOf()):s=an(n),o){if(0!==s.length)throw new TypeError("Scalar expected");e.set(t.min(),n,r)}else{if(i.length<e._size.length)throw new rn(i.length,e._size.length,"<");if(s.length<i.length){for(var l=0,c=0;1===i[l]&&1===s[l];)l++;for(;1===i[l];)c++,l++;n=mn(n,i.length,c,s)}if(!Tt(i,s))throw new rn(i,s,">");var h=t.max().map((function(e){return e+1}));u(e,h,r);var d=i.length;a(e._data,t,n,d,0)}return e}function a(e,t,n,r,s){var i=s===r-1,o=t.dimension(s);i?o.forEach((function(t,r){ln(t),e[t]=n[r[0]]})):o.forEach((function(i,o){ln(i),a(e[i],t,n[o[0]],r,s+1)}))}function o(e,t,n){if(0===t.length){for(var r=e._data;Xe(r);)r=r[0];return r}return e._size=t.slice(0),e._data=cn(e._data,e._size,n),e}function u(e,t,n){for(var r=e._size.slice(0),s=!1;r.length<t.length;)r.push(0),s=!0;for(var i=0,a=t.length;i<a;i++)t[i]>r[i]&&(r[i]=t[i],s=!0);s&&o(e,r,n)}function l(e){for(var t=0,n=e.length;t<n;t++){var r=e[t];Xe(r)?e[t]=l(r):r&&!0===r.isMatrix&&(e[t]=l(r.valueOf()))}return e}return n.prototype=new t,n.prototype.createDenseMatrix=function(e,t){return new n(e,t)},Object.defineProperty(n,"name",{value:"DenseMatrix"}),n.prototype.constructor=n,n.prototype.type="DenseMatrix",n.prototype.isDenseMatrix=!0,n.prototype.getDataType=function(){return bn(this._data,St)},n.prototype.storage=function(){return"dense"},n.prototype.datatype=function(){return this._datatype},n.prototype.create=function(e,t){return new n(e,t)},n.prototype.subset=function(e,t,n){switch(arguments.length){case 1:return r(this,e);case 2:case 3:return i(this,e,t,n);default:throw new SyntaxError("Wrong number of arguments")}},n.prototype.get=function(e){if(!Xe(e))throw new TypeError("Array expected");if(e.length!==this._size.length)throw new rn(e.length,this._size.length);for(var t=0;t<e.length;t++)ln(e[t],this._size[t]);for(var n=this._data,r=0,s=e.length;r<s;r++){var i=e[r];ln(i,n.length),n=n[i]}return n},n.prototype.set=function(e,t,n){if(!Xe(e))throw new TypeError("Array expected");if(e.length<this._size.length)throw new rn(e.length,this._size.length,"<");var r,s,i,a=e.map((function(e){return e+1}));u(this,a,n);var o=this._data;for(r=0,s=e.length-1;r<s;r++)ln(i=e[r],o.length),o=o[i];return ln(i=e[e.length-1],o.length),o[i]=t,this},n.prototype.resize=function(e,t,n){if(!Ze(e))throw new TypeError("Array or Matrix expected");var r=e.valueOf().map((e=>Array.isArray(e)&&1===e.length?e[0]:e));return o(n?this.clone():this,r,t)},n.prototype.reshape=function(e,t){var n=t?this.clone():this;n._data=dn(n._data,e);var r=n._size.reduce(((e,t)=>e*t));return n._size=pn(e,r),n},n.prototype.clone=function(){return new n({data:$t(this._data),size:$t(this._size),datatype:this._datatype})},n.prototype.size=function(){return this._size.slice(0)},n.prototype.map=function(e){var t,r=this,s=(t=e,Object.keys(t.signatures||{}).reduce((function(e,t){var n=(t.match(/,/g)||[]).length+1;return Math.max(e,n)}),-1)),i=function t(n,i){return Xe(n)?n.map((function(e,n){return t(e,i.concat(n))})):1===s?e(n):2===s?e(n,i):e(n,i,r)}(this._data,[]);return new n(i,void 0!==this._datatype?bn(i,St):void 0)},n.prototype.forEach=function(e){var t=this;!function n(r,s){Xe(r)?r.forEach((function(e,t){n(e,s.concat(t))})):e(r,s,t)}(this._data,[])},n.prototype[Symbol.iterator]=function*(){yield*function*e(t,n){if(Xe(t))for(var r=0;r<t.length;r++)yield*e(t[r],n.concat(r));else yield{value:t,index:n}}(this._data,[])},n.prototype.rows=function(){var e=[];if(2!==this.size().length)throw new TypeError("Rows can only be returned for a 2D matrix.");var t=this._data;for(var r of t)e.push(new n([r],this._datatype));return e},n.prototype.columns=function(){var e=this,t=[],r=this.size();if(2!==r.length)throw new TypeError("Rows can only be returned for a 2D matrix.");for(var s=this._data,i=function(r){var i=s.map((e=>[e[r]]));t.push(new n(i,e._datatype))},a=0;a<r[1];a++)i(a);return t},n.prototype.toArray=function(){return $t(this._data)},n.prototype.valueOf=function(){return this._data},n.prototype.format=function(e){return tn(this._data,e)},n.prototype.toString=function(){return tn(this._data)},n.prototype.toJSON=function(){return{mathjs:"DenseMatrix",data:this._data,size:this._size,datatype:this._datatype}},n.prototype.diagonal=function(e){if(e){if(Ge(e)&&(e=e.toNumber()),!Ve(e)||!Mt(e))throw new TypeError("The parameter k must be an integer number")}else e=0;for(var t=e>0?e:0,r=e<0?-e:0,s=this._size[0],i=this._size[1],a=Math.min(s-r,i-t),o=[],u=0;u<a;u++)o[u]=this._data[u+r][u+t];return new n({data:o,size:[a],datatype:this._datatype})},n.diagonal=function(e,t,r,s){if(!Xe(e))throw new TypeError("Array expected, size parameter");if(2!==e.length)throw new Error("Only two dimensions matrix are supported");if(e=e.map((function(e){if(Ge(e)&&(e=e.toNumber()),!Ve(e)||!Mt(e)||e<1)throw new Error("Size values must be positive integers");return e})),r){if(Ge(r)&&(r=r.toNumber()),!Ve(r)||!Mt(r))throw new TypeError("The parameter k must be an integer number")}else r=0;var i,a=r>0?r:0,o=r<0?-r:0,u=e[0],l=e[1],c=Math.min(u-o,l-a);if(Xe(t)){if(t.length!==c)throw new Error("Invalid value array length");i=function(e){return t[e]}}else if(Ye(t)){var h=t.size();if(1!==h.length||h[0]!==c)throw new Error("Invalid matrix length");i=function(e){return t.get([e])}}else i=function(){return t};s||(s=Ge(i(0))?i(0).mul(0):0);var d=[];if(e.length>0){d=cn(d,e,s);for(var p=0;p<c;p++)d[p+o][p+a]=i(p)}return new n({data:d,size:[u,l]})},n.fromJSON=function(e){return new n(e)},n.prototype.swapRows=function(e,t){if(!(Ve(e)&&Mt(e)&&Ve(t)&&Mt(t)))throw new Error("Row index must be positive integers");if(2!==this._size.length)throw new Error("Only two dimensional matrix is supported");return ln(e,this._size[0]),ln(t,this._size[0]),n._swapRows(e,t,this._data),this},n._swapRows=function(e,t,n){var r=n[e];n[e]=n[t],n[t]=r},n}),{isClass:!0}),yn=n(814);function wn(e,t){if(kn(e)&&vn(e,t))return e[t];if("function"==typeof e[t]&&function(e,t){return!(null==e||"function"!=typeof e[t]||At(e,t)&&Object.getPrototypeOf&&t in Object.getPrototypeOf(e)||!At(Cn,t)&&(t in Object.prototype||t in Function.prototype))}(e,t))throw new Error('Cannot access method "'+t+'" as a property');throw new Error('No access to property "'+t+'"')}function vn(e,t){return!(!e||"object"!=typeof e||!At(In,t)&&(t in Object.prototype||t in Function.prototype))}function kn(e){return"object"==typeof e&&e&&e.constructor===Object}var In={length:!0,name:!0},Cn={toString:!0,valueOf:!0,toLocaleString:!0};class Dn{constructor(e){this.wrappedObject=e}keys(){return Object.keys(this.wrappedObject)}get(e){return wn(this.wrappedObject,e)}set(e,t){return function(e,t,n){if(kn(e)&&vn(e,t))return e[t]=n,n;throw new Error('No access to property "'+t+'"')}(this.wrappedObject,e,t),this}has(e){return e in this.wrappedObject}}function En(e){return!!e&&(e instanceof Map||e instanceof Dn||"function"==typeof e.set&&"function"==typeof e.get&&"function"==typeof e.keys&&"function"==typeof e.has)}var Nn=function(){return Nn=yn.create,yn},Sn=Ft("typed",["?BigNumber","?Complex","?DenseMatrix","?Fraction"],(function(e){var{BigNumber:t,Complex:n,DenseMatrix:r,Fraction:s}=e,i=Nn();return i.clear(),i.addTypes([{name:"number",test:Ve},{name:"Complex",test:He},{name:"BigNumber",test:Ge},{name:"Fraction",test:je},{name:"Unit",test:qe},{name:"identifier",test:e=>Ke&&/^(?:[A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CA\uA7D0\uA7D1\uA7D3\uA7D5-\uA7D9\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDD70-\uDD7A\uDD7C-\uDD8A\uDD8C-\uDD92\uDD94\uDD95\uDD97-\uDDA1\uDDA3-\uDDB1\uDDB3-\uDDB9\uDDBB\uDDBC\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67\uDF80-\uDF85\uDF87-\uDFB0\uDFB2-\uDFBA]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2\uDD00-\uDD23\uDE80-\uDEA9\uDEB0\uDEB1\uDF00-\uDF1C\uDF27\uDF30-\uDF45\uDF70-\uDF81\uDFB0-\uDFC4\uDFE0-\uDFF6]|\uD804[\uDC03-\uDC37\uDC71\uDC72\uDC75\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD44\uDD47\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC5F-\uDC61\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDEB8\uDF00-\uDF1A\uDF40-\uDF46]|\uD806[\uDC00-\uDC2B\uDCA0-\uDCDF\uDCFF-\uDD06\uDD09\uDD0C-\uDD13\uDD15\uDD16\uDD18-\uDD2F\uDD3F\uDD41\uDDA0-\uDDA7\uDDAA-\uDDD0\uDDE1\uDDE3\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE89\uDE9D\uDEB0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD89\uDD98\uDEE0-\uDEF2\uDFB0]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|\uD80B[\uDF90-\uDFF0]|[\uD80C\uD81C-\uD820\uD822\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE70-\uDEBE\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDE40-\uDE7F\uDF00-\uDF4A\uDF50\uDF93-\uDF9F\uDFE0\uDFE1\uDFE3]|\uD821[\uDC00-\uDFF7]|\uD823[\uDC00-\uDCD5\uDD00-\uDD08]|\uD82B[\uDFF0-\uDFF3\uDFF5-\uDFFB\uDFFD\uDFFE]|\uD82C[\uDC00-\uDD22\uDD50-\uDD52\uDD64-\uDD67\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD837[\uDF00-\uDF1E]|\uD838[\uDD00-\uDD2C\uDD37-\uDD3D\uDD4E\uDE90-\uDEAD\uDEC0-\uDEEB]|\uD839[\uDFE0-\uDFE6\uDFE8-\uDFEB\uDFED\uDFEE\uDFF0-\uDFFE]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43\uDD4B]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDEDF\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF38\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A])(?:[0-9A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CA\uA7D0\uA7D1\uA7D3\uA7D5-\uA7D9\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDD70-\uDD7A\uDD7C-\uDD8A\uDD8C-\uDD92\uDD94\uDD95\uDD97-\uDDA1\uDDA3-\uDDB1\uDDB3-\uDDB9\uDDBB\uDDBC\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67\uDF80-\uDF85\uDF87-\uDFB0\uDFB2-\uDFBA]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2\uDD00-\uDD23\uDE80-\uDEA9\uDEB0\uDEB1\uDF00-\uDF1C\uDF27\uDF30-\uDF45\uDF70-\uDF81\uDFB0-\uDFC4\uDFE0-\uDFF6]|\uD804[\uDC03-\uDC37\uDC71\uDC72\uDC75\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD44\uDD47\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC5F-\uDC61\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDEB8\uDF00-\uDF1A\uDF40-\uDF46]|\uD806[\uDC00-\uDC2B\uDCA0-\uDCDF\uDCFF-\uDD06\uDD09\uDD0C-\uDD13\uDD15\uDD16\uDD18-\uDD2F\uDD3F\uDD41\uDDA0-\uDDA7\uDDAA-\uDDD0\uDDE1\uDDE3\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE89\uDE9D\uDEB0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD89\uDD98\uDEE0-\uDEF2\uDFB0]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|\uD80B[\uDF90-\uDFF0]|[\uD80C\uD81C-\uD820\uD822\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE70-\uDEBE\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDE40-\uDE7F\uDF00-\uDF4A\uDF50\uDF93-\uDF9F\uDFE0\uDFE1\uDFE3]|\uD821[\uDC00-\uDFF7]|\uD823[\uDC00-\uDCD5\uDD00-\uDD08]|\uD82B[\uDFF0-\uDFF3\uDFF5-\uDFFB\uDFFD\uDFFE]|\uD82C[\uDC00-\uDD22\uDD50-\uDD52\uDD64-\uDD67\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD837[\uDF00-\uDF1E]|\uD838[\uDD00-\uDD2C\uDD37-\uDD3D\uDD4E\uDE90-\uDEAD\uDEC0-\uDEEB]|\uD839[\uDFE0-\uDFE6\uDFE8-\uDFEB\uDFED\uDFEE\uDFF0-\uDFFE]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43\uDD4B]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDEDF\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF38\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A])*$/.test(e)},{name:"string",test:Ke},{name:"Chain",test:Nt},{name:"Array",test:Xe},{name:"Matrix",test:Ye},{name:"DenseMatrix",test:Je},{name:"SparseMatrix",test:Qe},{name:"Range",test:et},{name:"Index",test:tt},{name:"boolean",test:nt},{name:"ResultSet",test:rt},{name:"Help",test:st},{name:"function",test:it},{name:"Date",test:at},{name:"RegExp",test:ot},{name:"null",test:lt},{name:"undefined",test:ct},{name:"AccessorNode",test:ht},{name:"ArrayNode",test:dt},{name:"AssignmentNode",test:pt},{name:"BlockNode",test:ft},{name:"ConditionalNode",test:mt},{name:"ConstantNode",test:gt},{name:"FunctionNode",test:xt},{name:"FunctionAssignmentNode",test:bt},{name:"IndexNode",test:yt},{name:"Node",test:wt},{name:"ObjectNode",test:vt},{name:"OperatorNode",test:kt},{name:"ParenthesisNode",test:It},{name:"RangeNode",test:Ct},{name:"RelationalNode",test:Dt},{name:"SymbolNode",test:Et},{name:"Map",test:En},{name:"Object",test:ut}]),i.addConversions([{from:"number",to:"BigNumber",convert:function(e){if(t||$n(e),e.toExponential().replace(/e.*$/,"").replace(/^0\.?0*|\./,"").length>15)throw new TypeError("Cannot implicitly convert a number with >15 significant digits to BigNumber (value: "+e+"). Use function bignumber(x) to convert to BigNumber.");return new t(e)}},{from:"number",to:"Complex",convert:function(e){return n||Tn(e),new n(e,0)}},{from:"BigNumber",to:"Complex",convert:function(e){return n||Tn(e),new n(e.toNumber(),0)}},{from:"Fraction",to:"BigNumber",convert:function(e){throw new TypeError("Cannot implicitly convert a Fraction to BigNumber or vice versa. Use function bignumber(x) to convert to BigNumber or fraction(x) to convert to Fraction.")}},{from:"Fraction",to:"Complex",convert:function(e){return n||Tn(e),new n(e.valueOf(),0)}},{from:"number",to:"Fraction",convert:function(e){s||An(e);var t=new s(e);if(t.valueOf()!==e)throw new TypeError("Cannot implicitly convert a number to a Fraction when there will be a loss of precision (value: "+e+"). Use function fraction(x) to convert to Fraction.");return t}},{from:"string",to:"number",convert:function(e){var t=Number(e);if(isNaN(t))throw new Error('Cannot convert "'+e+'" to a number');return t}},{from:"string",to:"BigNumber",convert:function(e){t||$n(e);try{return new t(e)}catch(t){throw new Error('Cannot convert "'+e+'" to BigNumber')}}},{from:"string",to:"Fraction",convert:function(e){s||An(e);try{return new s(e)}catch(t){throw new Error('Cannot convert "'+e+'" to Fraction')}}},{from:"string",to:"Complex",convert:function(e){n||Tn(e);try{return new n(e)}catch(t){throw new Error('Cannot convert "'+e+'" to Complex')}}},{from:"boolean",to:"number",convert:function(e){return+e}},{from:"boolean",to:"BigNumber",convert:function(e){return t||$n(e),new t(+e)}},{from:"boolean",to:"Fraction",convert:function(e){return s||An(e),new s(+e)}},{from:"boolean",to:"string",convert:function(e){return String(e)}},{from:"Array",to:"Matrix",convert:function(e){return r||function(){throw new Error("Cannot convert array into a Matrix: no class 'DenseMatrix' provided")}(),new r(e)}},{from:"Matrix",to:"Array",convert:function(e){return e.valueOf()}}]),i.onMismatch=(e,t,n)=>{var r=i.createError(e,t,n);if(["wrongType","mismatch"].includes(r.data.category)&&1===t.length&&Ze(t[0])&&n.some((e=>!e.params.includes(",")))){var s=new TypeError("Function '".concat(e,"' doesn't apply to matrices. To call it ")+"elementwise on a matrix 'M', try 'map(M, ".concat(e,")'."));throw s.data=r.data,s}throw r},i.onMismatch=(e,t,n)=>{var r=i.createError(e,t,n);if(["wrongType","mismatch"].includes(r.data.category)&&1===t.length&&Ze(t[0])&&n.some((e=>!e.params.includes(",")))){var s=new TypeError("Function '".concat(e,"' doesn't apply to matrices. To call it ")+"elementwise on a matrix 'M', try 'map(M, ".concat(e,")'."));throw s.data=r.data,s}throw r},i}));function $n(e){throw new Error("Cannot convert value ".concat(e," into a BigNumber: no class 'BigNumber' provided"))}function Tn(e){throw new Error("Cannot convert value ".concat(e," into a Complex number: no class 'Complex' provided"))}function An(e){throw new Error("Cannot convert value ".concat(e," into a Fraction, no class 'Fraction' provided."))}var Fn="equalScalar";Ft(Fn,["typed","config"],(e=>{var{typed:t,config:n}=e;return t(Fn,{"number, number":function(e,t){return function(e,t,n){if(null==n)return e===t;if(e===t)return!0;if(isNaN(e)||isNaN(t))return!1;if(isFinite(e)&&isFinite(t)){var r=Math.abs(e-t);return r<Vt||r<=Math.max(Math.abs(e),Math.abs(t))*n}return!1}(e,t,n.epsilon)}})})),Math.pow(2,53),Ft("hex",["typed","format"],(e=>{var{typed:t,format:n}=e;return t("hex",{"number | BigNumber":function(e){return n(e,{notation:"hex"})},"number | BigNumber, number":function(e,t){return n(e,{notation:"hex",wordSize:t})}})}));Ft("oct",["typed","format"],(e=>{var{typed:t,format:n}=e;return t("oct",{"number | BigNumber":function(e){return n(e,{notation:"oct"})},"number | BigNumber, number":function(e,t){return n(e,{notation:"oct",wordSize:t})}})}));n(377);Date.now(),Ft("bin",["typed","format"],(e=>{var{typed:t,format:n}=e;return t("bin",{"number | BigNumber":function(e){return n(e,{notation:"bin"})},"number | BigNumber, number":function(e,t){return n(e,{notation:"bin",wordSize:t})}})}));var Rn=Ft("sqrt",["config","typed","Complex"],(e=>{var{config:t,typed:n,Complex:r}=e;return n("sqrt",{number:s,Complex:function(e){return e.sqrt()},BigNumber:function(e){return!e.isNegative()||t.predictable?e.sqrt():s(e.toNumber())},Unit:function(e){return e.pow(.5)}});function s(e){return isNaN(e)?NaN:e>=0||t.predictable?Math.sqrt(e):new r(e,0).sqrt()}})),_n="equal";function On(e,t,n,r){if(!(this instanceof On))throw new SyntaxError("Constructor must be called with the new operator");this.fn=e,this.count=t,this.min=n,this.max=r,this.message="Wrong number of arguments in function "+e+" ("+t+" provided, "+n+(null!=r?"-"+r:"")+" expected)",this.stack=(new Error).stack}Ft(_n,["typed","equalScalar"],(e=>{var{typed:t,equalScalar:n}=e;return t(_n,{"any, any":function(e,t){return null===e?null===t:null===t?null===e:void 0===e?void 0===t:void 0===t?void 0===e:n(e,t)}})})),On.prototype=new Error,On.prototype.constructor=Error,On.prototype.name="ArgumentsError",On.prototype.isArgumentsError=!0;var Mn="unequal";Ft(Mn,["typed","equalScalar"],(e=>{var{typed:t,equalScalar:n}=e;return t(Mn,{"any, any":function(e,t){return null===e?null!==t:null===t?null!==e:void 0===e?void 0!==t:void 0===t?void 0!==e:!n(e,t)}})})),n(228);var Bn=_t({config:i}),Ln=Gt({}),zn=Zt({}),Pn=Rn({Complex:Ln,config:i,typed:Sn({BigNumber:Bn,Complex:Ln,DenseMatrix:xn({Matrix:Jt({})}),Fraction:zn})})}},i={};function a(e){var t=i[e];if(void 0!==t)return t.exports;var n=i[e]={id:e,loaded:!1,exports:{}};return s[e].call(n.exports,n,n.exports,a),n.loaded=!0,n.exports}a.amdD=function(){throw new Error("define cannot be used indirect")},a.amdO={},e="function"==typeof Symbol?Symbol("webpack queues"):"__webpack_queues__",t="function"==typeof Symbol?Symbol("webpack exports"):"__webpack_exports__",n="function"==typeof Symbol?Symbol("webpack error"):"__webpack_error__",r=e=>{e&&!e.d&&(e.d=1,e.forEach((e=>e.r--)),e.forEach((e=>e.r--?e.r++:e())))},a.a=(s,i,a)=>{var o;a&&((o=[]).d=1);var u,l,c,h=new Set,d=s.exports,p=new Promise(((e,t)=>{c=t,l=e}));p[t]=d,p[e]=e=>(o&&e(o),h.forEach(e),p.catch((e=>{}))),s.exports=p,i((s=>{var i;u=(s=>s.map((s=>{if(null!==s&&"object"==typeof s){if(s[e])return s;if(s.then){var i=[];i.d=0,s.then((e=>{a[t]=e,r(i)}),(e=>{a[n]=e,r(i)}));var a={};return a[e]=e=>e(i),a}}var o={};return o[e]=e=>{},o[t]=s,o})))(s);var a=()=>u.map((e=>{if(e[n])throw e[n];return e[t]})),l=new Promise((t=>{(i=()=>t(a)).r=0;var n=e=>e!==o&&!h.has(e)&&(h.add(e),e&&!e.d&&(i.r++,e.push(i)));u.map((t=>t[e](n)))}));return i.r?l:a()}),(e=>(e?c(p[n]=e):l(d),r(o)))),o&&(o.d=0)},a.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return a.d(t,{a:t}),t},a.d=(e,t)=>{for(var n in t)a.o(t,n)&&!a.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},a.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),a.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),a(138)})();